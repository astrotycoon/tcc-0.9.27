!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AEABI_UXDIVMOD	lib/armeabi.c	352;"	d	file:
AFF_BINTYPE_AR	tcc.h	1175;"	d
AFF_BINTYPE_C67	tcc.h	1176;"	d
AFF_BINTYPE_DYN	tcc.h	1174;"	d
AFF_BINTYPE_REL	tcc.h	1173;"	d
AFF_PRINT_ERROR	tcc.h	1163;"	d
AFF_REFERENCED_DLL	tcc.h	1164;"	d
AFF_TYPE_ASM	tcc.h	1169;"	d
AFF_TYPE_ASMPP	tcc.h	1170;"	d
AFF_TYPE_BIN	tcc.h	1165;"	d
AFF_TYPE_C	tcc.h	1168;"	d
AFF_TYPE_LIB	tcc.h	1171;"	d
AFF_TYPE_NONE	tcc.h	1167;"	d
ALIGNED	tcc.h	101;"	d
ALIGNED	tcc.h	104;"	d
ALSO_TRIPLET	tcc.h	193;"	d
ALSO_TRIPLET	tcc.h	196;"	d
ALT	i386-asm.c	222;"	d	file:
ALT	i386-asm.c	242;"	d	file:
ALT	i386-tok.h	231;"	d
ALT	i386-tok.h	243;"	d
ALT	x86_64-asm.h	520;"	d
ALWAYS_GOTPLT_ENTRY	tcc.h	/^    ALWAYS_GOTPLT_ENTRY	\/* always generate (eg. PLTOFF relocs) *\/$/;"	e	enum:gotplt_entry
ARFMAG	tcctools.c	34;"	d	file:
ARM64_O	lib/Makefile	/^ARM64_O = lib-arm64.o$/;"	m
ARMAG	tcc.h	1373;"	d
ARM_O	lib/Makefile	/^ARM_O = libtcc1.o armeabi.o alloca-arm.o armflush.o$/;"	m
ASMInstr	i386-asm.c	/^typedef struct ASMInstr {$/;"	s	file:
ASMInstr	i386-asm.c	/^} ASMInstr;$/;"	t	typeref:struct:ASMInstr	file:
ASMOperand	tcc.h	/^typedef struct ASMOperand {$/;"	s
ASMOperand	tcc.h	/^} ASMOperand;$/;"	t	typeref:struct:ASMOperand
AT_BASE	elf.h	990;"	d
AT_BASE_PLATFORM	elf.h	1020;"	d
AT_CLKTCK	elf.h	998;"	d
AT_DCACHEBSIZE	elf.h	1010;"	d
AT_EGID	elf.h	997;"	d
AT_ENTRY	elf.h	992;"	d
AT_EUID	elf.h	995;"	d
AT_EXECFD	elf.h	985;"	d
AT_EXECFN	elf.h	1024;"	d
AT_FLAGS	elf.h	991;"	d
AT_FPUCW	elf.h	1007;"	d
AT_GID	elf.h	996;"	d
AT_HWCAP	elf.h	1002;"	d
AT_ICACHEBSIZE	elf.h	1011;"	d
AT_IGNORE	elf.h	984;"	d
AT_IGNOREPPC	elf.h	1016;"	d
AT_L1D_CACHESHAPE	elf.h	1034;"	d
AT_L1I_CACHESHAPE	elf.h	1033;"	d
AT_L2_CACHESHAPE	elf.h	1035;"	d
AT_L3_CACHESHAPE	elf.h	1036;"	d
AT_NOTELF	elf.h	993;"	d
AT_NULL	elf.h	983;"	d
AT_PAGESZ	elf.h	989;"	d
AT_PHDR	elf.h	986;"	d
AT_PHENT	elf.h	987;"	d
AT_PHNUM	elf.h	988;"	d
AT_PLATFORM	elf.h	1001;"	d
AT_RANDOM	elf.h	1022;"	d
AT_SECURE	elf.h	1018;"	d
AT_SYSINFO	elf.h	1028;"	d
AT_SYSINFO_EHDR	elf.h	1029;"	d
AT_UCACHEBSIZE	elf.h	1012;"	d
AT_UID	elf.h	994;"	d
AUTO_GOTPLT_ENTRY	tcc.h	/^    AUTO_GOTPLT_ENTRY,	\/* generate if sym is UNDEF *\/$/;"	e	enum:gotplt_entry
ArHdr	tcctools.c	/^} ArHdr;$/;"	t	typeref:struct:__anon56	file:
ArchiveHeader	tccelf.c	/^typedef struct ArchiveHeader {$/;"	s	file:
ArchiveHeader	tccelf.c	/^} ArchiveHeader;$/;"	t	typeref:struct:ArchiveHeader	file:
AttributeDef	tcc.h	/^typedef struct AttributeDef {$/;"	s
AttributeDef	tcc.h	/^} AttributeDef;$/;"	t	typeref:struct:AttributeDef
BCHECK_O	lib/Makefile	/^ BCHECK_O =$/;"	m
BIN	lib/Makefile	/^BIN = $(TOP)\/$(X)libtcc1.a$/;"	m
BITS_PER_UNIT	lib/libtcc1.c	32;"	d	file:
BIT_POS	tcc.h	900;"	d
BIT_SIZE	tcc.h	901;"	d
BN_SIZE	tccpp.c	2236;"	d	file:
BOUND_E_BITS	lib/bcheck.c	68;"	d	file:
BOUND_PTR_INDIR	lib/bcheck.c	208;"	d	file:
BOUND_T1_BITS	lib/bcheck.c	65;"	d	file:
BOUND_T1_SIZE	lib/bcheck.c	70;"	d	file:
BOUND_T23_BITS	lib/bcheck.c	74;"	d	file:
BOUND_T23_SIZE	lib/bcheck.c	75;"	d	file:
BOUND_T2_BITS	lib/bcheck.c	66;"	d	file:
BOUND_T2_SIZE	lib/bcheck.c	71;"	d	file:
BOUND_T3_BITS	lib/bcheck.c	67;"	d	file:
BOUND_T3_SIZE	lib/bcheck.c	72;"	d	file:
BUILD_GOT_ONLY	tcc.h	/^    BUILD_GOT_ONLY,	\/* only build GOT (eg. TPOFF relocs) *\/$/;"	e	enum:gotplt_entry
BoundEntry	lib/bcheck.c	/^typedef struct BoundEntry {$/;"	s	file:
BoundEntry	lib/bcheck.c	/^} BoundEntry;$/;"	t	typeref:struct:BoundEntry	file:
BufferedFile	tcc.h	/^typedef struct BufferedFile {$/;"	s
BufferedFile	tcc.h	/^} BufferedFile;$/;"	t	typeref:struct:BufferedFile
CACHED_INCLUDES_HASH_SIZE	tcc.h	617;"	d
CFGWIN	Makefile	/^    CFGWIN = -win$/;"	m
CFGWIN	Makefile	/^    CFGWIN =-unx$/;"	m
CFLAGS_P	Makefile	/^CFLAGS_P = $(CFLAGS) -pg -static -DCONFIG_TCC_STATIC -DTCC_PROFILE$/;"	m
CH_EOB	tcc.h	584;"	d
CH_EOF	tcc.h	585;"	d
CONFIG_LDDIR	tcc.h	189;"	d
CONFIG_SYSROOT	tcc.h	183;"	d
CONFIG_TCCDIR	tcc.h	186;"	d
CONFIG_TCC_ASM	x86_64-gen.c	28;"	d	file:
CONFIG_TCC_BACKTRACE	tcc.h	173;"	d
CONFIG_TCC_BCHECK	tcc.h	176;"	d
CONFIG_TCC_CRTPREFIX	tcc.h	201;"	d
CONFIG_TCC_ELFINTERP	tcc.h	233;"	d
CONFIG_TCC_ELFINTERP	tcc.h	236;"	d
CONFIG_TCC_ELFINTERP	tcc.h	238;"	d
CONFIG_TCC_ELFINTERP	tcc.h	241;"	d
CONFIG_TCC_ELFINTERP	tcc.h	243;"	d
CONFIG_TCC_ELFINTERP	tcc.h	245;"	d
CONFIG_TCC_ELFINTERP	tcc.h	247;"	d
CONFIG_TCC_ELFINTERP	tcc.h	249;"	d
CONFIG_TCC_ELFINTERP	tcc.h	252;"	d
CONFIG_TCC_ELFINTERP	tcc.h	254;"	d
CONFIG_TCC_ELFINTERP	tcc.h	258;"	d
CONFIG_TCC_ELFINTERP	tcc.h	260;"	d
CONFIG_TCC_ELFINTERP	tcc.h	264;"	d
CONFIG_TCC_ELFINTERP	tcc.h	266;"	d
CONFIG_TCC_LIBPATHS	tcc.h	221;"	d
CONFIG_TCC_LIBPATHS	tcc.h	223;"	d
CONFIG_TCC_MALLOC_HOOKS	lib/bcheck.c	50;"	d	file:
CONFIG_TCC_MALLOC_HOOKS	lib/bcheck.c	61;"	d	file:
CONFIG_TCC_STATIC	tcc.h	84;"	d
CONFIG_TCC_SYSINCLUDEPATHS	tcc.h	209;"	d
CONFIG_TCC_SYSINCLUDEPATHS	tcc.h	211;"	d
CORE_FILES	Makefile	/^CORE_FILES = tcc.c tcctools.c libtcc.c tccpp.c tccgen.c tccelf.c tccasm.c tccrun.c$/;"	m
CSTR_TAL_LIMIT	tccpp.c	140;"	d	file:
CSTR_TAL_SIZE	tccpp.c	137;"	d	file:
CString	tcc.h	/^typedef struct CString {$/;"	s
CString	tcc.h	/^} CString;$/;"	t	typeref:struct:CString
CType	tcc.h	/^typedef struct CType {$/;"	s
CType	tcc.h	/^} CType;$/;"	t	typeref:struct:CType
CValue	tcc.h	/^typedef union CValue {$/;"	u
CValue	tcc.h	/^} CValue;$/;"	t	typeref:union:CValue
CachedInclude	tcc.h	/^typedef struct CachedInclude {$/;"	s
CachedInclude	tcc.h	/^} CachedInclude;$/;"	t	typeref:struct:CachedInclude
DBL_DIG	include/float.h	20;"	d
DBL_EPSILON	include/float.h	21;"	d
DBL_MANT_DIG	include/float.h	19;"	d
DBL_MAX	include/float.h	26;"	d
DBL_MAX_10_EXP	include/float.h	27;"	d
DBL_MAX_EXP	include/float.h	25;"	d
DBL_MIN	include/float.h	23;"	d
DBL_MIN_10_EXP	include/float.h	24;"	d
DBL_MIN_EXP	include/float.h	22;"	d
DEBUG_RELOC	tccelf.c	24;"	d	file:
DEF	tcc.h	1085;"	d
DEF	tcc.h	1087;"	d
DEF	tccpp.c	62;"	d	file:
DEF	tccpp.c	64;"	d	file:
DEF-arm	Makefile	/^DEF-arm         = $(DEF-arm-eabihf)$/;"	m
DEF-arm-eabi	Makefile	/^DEF-arm-eabi    = -DTCC_TARGET_ARM -DTCC_ARM_VFP -DTCC_ARM_EABI$/;"	m
DEF-arm-eabihf	Makefile	/^DEF-arm-eabihf  = -DTCC_TARGET_ARM -DTCC_ARM_VFP -DTCC_ARM_EABI -DTCC_ARM_HARDFLOAT$/;"	m
DEF-arm-fpa	Makefile	/^DEF-arm-fpa     = -DTCC_TARGET_ARM$/;"	m
DEF-arm-fpa-ld	Makefile	/^DEF-arm-fpa-ld  = -DTCC_TARGET_ARM -DLDOUBLE_SIZE=12$/;"	m
DEF-arm-vfp	Makefile	/^DEF-arm-vfp     = -DTCC_TARGET_ARM -DTCC_ARM_VFP$/;"	m
DEF-arm-wince	Makefile	/^DEF-arm-wince   = -DTCC_TARGET_PE -DTCC_TARGET_ARM -DTCC_ARM_EABI -DTCC_ARM_VFP -DTCC_ARM_HARDFLOAT$/;"	m
DEF-arm64	Makefile	/^DEF-arm64       = -DTCC_TARGET_ARM64$/;"	m
DEF-c67	Makefile	/^DEF-c67         = -DTCC_TARGET_C67 -w # disable warnigs$/;"	m
DEF-i386	Makefile	/^DEF-i386        = -DTCC_TARGET_I386$/;"	m
DEF-i386-win32	Makefile	/^DEF-i386-win32  = -DTCC_TARGET_PE -DTCC_TARGET_I386$/;"	m
DEF-x86_64	Makefile	/^DEF-x86_64      = -DTCC_TARGET_X86_64$/;"	m
DEF-x86_64-osx	Makefile	/^DEF-x86_64-osx  = -DTCC_TARGET_MACHO -DTCC_TARGET_X86_64$/;"	m
DEF-x86_64-win32	Makefile	/^DEF-x86_64-win32= -DTCC_TARGET_PE -DTCC_TARGET_X86_64$/;"	m
DEFAULT_ELFINTERP	tcc.h	273;"	d
DEFAULT_ELFINTERP	tcc.h	275;"	d
DEFINE__AEABI_D2XLZ	lib/armeabi.c	134;"	d	file:
DEFINE__AEABI_F2XLZ	lib/armeabi.c	70;"	d	file:
DEFINE__AEABI_XL2F	lib/armeabi.c	203;"	d	file:
DEF_ASM	tcc.h	998;"	d
DEF_ASMDIR	tcc.h	1000;"	d
DEF_ASMTEST	tcc.h	1049;"	d
DEF_ASM_OP0	i386-asm.c	227;"	d	file:
DEF_ASM_OP0	i386-asm.c	243;"	d	file:
DEF_ASM_OP0	i386-tok.h	232;"	d
DEF_ASM_OP0	i386-tok.h	244;"	d
DEF_ASM_OP0	x86_64-asm.h	521;"	d
DEF_ASM_OP0L	i386-asm.c	228;"	d	file:
DEF_ASM_OP0L	i386-asm.c	244;"	d	file:
DEF_ASM_OP0L	i386-tok.h	233;"	d
DEF_ASM_OP0L	i386-tok.h	245;"	d
DEF_ASM_OP0L	x86_64-asm.h	522;"	d
DEF_ASM_OP1	i386-asm.c	229;"	d	file:
DEF_ASM_OP1	i386-asm.c	245;"	d	file:
DEF_ASM_OP1	i386-tok.h	234;"	d
DEF_ASM_OP1	i386-tok.h	246;"	d
DEF_ASM_OP1	x86_64-asm.h	523;"	d
DEF_ASM_OP2	i386-asm.c	230;"	d	file:
DEF_ASM_OP2	i386-asm.c	246;"	d	file:
DEF_ASM_OP2	i386-tok.h	235;"	d
DEF_ASM_OP2	i386-tok.h	247;"	d
DEF_ASM_OP2	x86_64-asm.h	524;"	d
DEF_ASM_OP3	i386-asm.c	231;"	d	file:
DEF_ASM_OP3	i386-asm.c	247;"	d	file:
DEF_ASM_OP3	i386-tok.h	236;"	d
DEF_ASM_OP3	i386-tok.h	248;"	d
DEF_ASM_OP3	x86_64-asm.h	525;"	d
DEF_BWL	tcc.h	1006;"	d
DEF_BWLQ	tcc.h	1016;"	d
DEF_BWLX	tcc.h	1027;"	d
DEF_BWLX	tcc.h	1032;"	d
DEF_FP	tcc.h	1044;"	d
DEF_FP1	tcc.h	1038;"	d
DEF_WL	tcc.h	1011;"	d
DEF_WLQ	tcc.h	1022;"	d
DEF_WLX	tcc.h	1028;"	d
DEF_WLX	tcc.h	1033;"	d
DF_1_CONFALT	elf.h	809;"	d
DF_1_DIRECT	elf.h	804;"	d
DF_1_DISPRELDNE	elf.h	811;"	d
DF_1_DISPRELPND	elf.h	812;"	d
DF_1_EDITED	elf.h	817;"	d
DF_1_ENDFILTEE	elf.h	810;"	d
DF_1_GLOBAL	elf.h	797;"	d
DF_1_GLOBAUDIT	elf.h	820;"	d
DF_1_GROUP	elf.h	798;"	d
DF_1_IGNMULDEF	elf.h	814;"	d
DF_1_INITFIRST	elf.h	801;"	d
DF_1_INTERPOSE	elf.h	806;"	d
DF_1_LOADFLTR	elf.h	800;"	d
DF_1_NODEFLIB	elf.h	807;"	d
DF_1_NODELETE	elf.h	799;"	d
DF_1_NODIRECT	elf.h	813;"	d
DF_1_NODUMP	elf.h	808;"	d
DF_1_NOHDR	elf.h	816;"	d
DF_1_NOKSYMS	elf.h	815;"	d
DF_1_NOOPEN	elf.h	802;"	d
DF_1_NORELOC	elf.h	818;"	d
DF_1_NOW	elf.h	796;"	d
DF_1_ORIGIN	elf.h	803;"	d
DF_1_SINGLETON	elf.h	821;"	d
DF_1_SYMINTPOSE	elf.h	819;"	d
DF_1_TRANS	elf.h	805;"	d
DF_BIND_NOW	elf.h	791;"	d
DF_ORIGIN	elf.h	788;"	d
DF_P1_GROUPPERM	elf.h	829;"	d
DF_P1_LAZYLOAD	elf.h	828;"	d
DF_STATIC_TLS	elf.h	792;"	d
DF_SYMBOLIC	elf.h	789;"	d
DF_TEXTREL	elf.h	790;"	d
DLLReference	tcc.h	/^typedef struct DLLReference {$/;"	s
DLLReference	tcc.h	/^} DLLReference;$/;"	t	typeref:struct:DLLReference
DOUBLE_EXP_BITS	lib/armeabi.c	58;"	d	file:
DOUBLE_FRAC_BITS	lib/armeabi.c	59;"	d	file:
DTF_1_CONFEXP	elf.h	825;"	d
DTF_1_PARINIT	elf.h	824;"	d
DT_ADDRNUM	elf.h	760;"	d
DT_ADDRRNGHI	elf.h	758;"	d
DT_ADDRRNGLO	elf.h	746;"	d
DT_ADDRTAGIDX	elf.h	759;"	d
DT_ALPHA_NUM	elf.h	2020;"	d
DT_ALPHA_PLTRO	elf.h	2019;"	d
DT_AUDIT	elf.h	754;"	d
DT_AUXILIARY	elf.h	782;"	d
DT_BIND_NOW	elf.h	704;"	d
DT_CHECKSUM	elf.h	728;"	d
DT_CONFIG	elf.h	752;"	d
DT_DEBUG	elf.h	701;"	d
DT_DEPAUDIT	elf.h	753;"	d
DT_ENCODING	elf.h	711;"	d
DT_EXTRANUM	elf.h	785;"	d
DT_EXTRATAGIDX	elf.h	784;"	d
DT_FEATURE_1	elf.h	732;"	d
DT_FILTER	elf.h	783;"	d
DT_FINI	elf.h	693;"	d
DT_FINI_ARRAY	elf.h	706;"	d
DT_FINI_ARRAYSZ	elf.h	708;"	d
DT_FLAGS	elf.h	710;"	d
DT_FLAGS_1	elf.h	770;"	d
DT_GNU_CONFLICT	elf.h	750;"	d
DT_GNU_CONFLICTSZ	elf.h	726;"	d
DT_GNU_HASH	elf.h	747;"	d
DT_GNU_LIBLIST	elf.h	751;"	d
DT_GNU_LIBLISTSZ	elf.h	727;"	d
DT_GNU_PRELINKED	elf.h	725;"	d
DT_HASH	elf.h	684;"	d
DT_HIOS	elf.h	716;"	d
DT_HIPROC	elf.h	718;"	d
DT_IA_64_NUM	elf.h	2586;"	d
DT_IA_64_PLT_RESERVE	elf.h	2585;"	d
DT_INIT	elf.h	692;"	d
DT_INIT_ARRAY	elf.h	705;"	d
DT_INIT_ARRAYSZ	elf.h	707;"	d
DT_JMPREL	elf.h	703;"	d
DT_LOOS	elf.h	715;"	d
DT_LOPROC	elf.h	717;"	d
DT_MIPS_AUX_DYNAMIC	elf.h	1696;"	d
DT_MIPS_BASE_ADDRESS	elf.h	1650;"	d
DT_MIPS_COMPACT_SIZE	elf.h	1694;"	d
DT_MIPS_CONFLICT	elf.h	1652;"	d
DT_MIPS_CONFLICTNO	elf.h	1655;"	d
DT_MIPS_CXX_FLAGS	elf.h	1679;"	d
DT_MIPS_DELTA_CLASS	elf.h	1662;"	d
DT_MIPS_DELTA_CLASSSYM	elf.h	1675;"	d
DT_MIPS_DELTA_CLASSSYM_NO	elf.h	1677;"	d
DT_MIPS_DELTA_CLASS_NO	elf.h	1663;"	d
DT_MIPS_DELTA_INSTANCE	elf.h	1665;"	d
DT_MIPS_DELTA_INSTANCE_NO	elf.h	1666;"	d
DT_MIPS_DELTA_RELOC	elf.h	1668;"	d
DT_MIPS_DELTA_RELOC_NO	elf.h	1669;"	d
DT_MIPS_DELTA_SYM	elf.h	1671;"	d
DT_MIPS_DELTA_SYM_NO	elf.h	1673;"	d
DT_MIPS_DYNSTR_ALIGN	elf.h	1688;"	d
DT_MIPS_FLAGS	elf.h	1649;"	d
DT_MIPS_GOTSYM	elf.h	1659;"	d
DT_MIPS_GP_VALUE	elf.h	1695;"	d
DT_MIPS_HIDDEN_GOTIDX	elf.h	1684;"	d
DT_MIPS_HIPAGENO	elf.h	1660;"	d
DT_MIPS_ICHECKSUM	elf.h	1647;"	d
DT_MIPS_INTERFACE	elf.h	1687;"	d
DT_MIPS_INTERFACE_SIZE	elf.h	1689;"	d
DT_MIPS_IVERSION	elf.h	1648;"	d
DT_MIPS_LIBLIST	elf.h	1653;"	d
DT_MIPS_LIBLISTNO	elf.h	1656;"	d
DT_MIPS_LOCALPAGE_GOTIDX	elf.h	1682;"	d
DT_MIPS_LOCAL_GOTIDX	elf.h	1683;"	d
DT_MIPS_LOCAL_GOTNO	elf.h	1654;"	d
DT_MIPS_MSYM	elf.h	1651;"	d
DT_MIPS_NUM	elf.h	1703;"	d
DT_MIPS_OPTIONS	elf.h	1686;"	d
DT_MIPS_PERF_SUFFIX	elf.h	1692;"	d
DT_MIPS_PIXIE_INIT	elf.h	1680;"	d
DT_MIPS_PLTGOT	elf.h	1698;"	d
DT_MIPS_PROTECTED_GOTIDX	elf.h	1685;"	d
DT_MIPS_RLD_MAP	elf.h	1661;"	d
DT_MIPS_RLD_TEXT_RESOLVE_ADDR	elf.h	1690;"	d
DT_MIPS_RLD_VERSION	elf.h	1645;"	d
DT_MIPS_RWPLT	elf.h	1702;"	d
DT_MIPS_SYMBOL_LIB	elf.h	1681;"	d
DT_MIPS_SYMTABNO	elf.h	1657;"	d
DT_MIPS_TIME_STAMP	elf.h	1646;"	d
DT_MIPS_UNREFEXTNO	elf.h	1658;"	d
DT_MOVEENT	elf.h	730;"	d
DT_MOVESZ	elf.h	731;"	d
DT_MOVETAB	elf.h	756;"	d
DT_NEEDED	elf.h	681;"	d
DT_NULL	elf.h	680;"	d
DT_NUM	elf.h	714;"	d
DT_PLTGOT	elf.h	683;"	d
DT_PLTPAD	elf.h	755;"	d
DT_PLTPADSZ	elf.h	729;"	d
DT_PLTREL	elf.h	700;"	d
DT_PLTRELSZ	elf.h	682;"	d
DT_POSFLAG_1	elf.h	733;"	d
DT_PPC64_GLINK	elf.h	2266;"	d
DT_PPC64_NUM	elf.h	2269;"	d
DT_PPC64_OPD	elf.h	2267;"	d
DT_PPC64_OPDSZ	elf.h	2268;"	d
DT_PPC_GOT	elf.h	2142;"	d
DT_PPC_NUM	elf.h	2143;"	d
DT_PREINIT_ARRAY	elf.h	712;"	d
DT_PREINIT_ARRAYSZ	elf.h	713;"	d
DT_PROCNUM	elf.h	719;"	d
DT_REL	elf.h	697;"	d
DT_RELA	elf.h	687;"	d
DT_RELACOUNT	elf.h	766;"	d
DT_RELAENT	elf.h	689;"	d
DT_RELASZ	elf.h	688;"	d
DT_RELCOUNT	elf.h	767;"	d
DT_RELENT	elf.h	699;"	d
DT_RELSZ	elf.h	698;"	d
DT_RPATH	elf.h	695;"	d
DT_RUNPATH	elf.h	709;"	d
DT_SONAME	elf.h	694;"	d
DT_SPARC_NUM	elf.h	1377;"	d
DT_SPARC_REGISTER	elf.h	1376;"	d
DT_STRSZ	elf.h	690;"	d
DT_STRTAB	elf.h	685;"	d
DT_SYMBOLIC	elf.h	696;"	d
DT_SYMENT	elf.h	691;"	d
DT_SYMINENT	elf.h	736;"	d
DT_SYMINFO	elf.h	757;"	d
DT_SYMINSZ	elf.h	735;"	d
DT_SYMTAB	elf.h	686;"	d
DT_TEXTREL	elf.h	702;"	d
DT_TLSDESC_GOT	elf.h	749;"	d
DT_TLSDESC_PLT	elf.h	748;"	d
DT_VALNUM	elf.h	739;"	d
DT_VALRNGHI	elf.h	737;"	d
DT_VALRNGLO	elf.h	724;"	d
DT_VALTAGIDX	elf.h	738;"	d
DT_VERDEF	elf.h	771;"	d
DT_VERDEFNUM	elf.h	773;"	d
DT_VERNEED	elf.h	774;"	d
DT_VERNEEDNUM	elf.h	776;"	d
DT_VERSIONTAGIDX	elf.h	777;"	d
DT_VERSIONTAGNUM	elf.h	778;"	d
DT_VERSYM	elf.h	764;"	d
DWstruct	lib/libtcc1.c	/^struct DWstruct {$/;"	s	file:
DWtype	lib/libtcc1.c	/^typedef long long DWtype;$/;"	t	file:
DWunion	lib/libtcc1.c	/^} DWunion;$/;"	t	typeref:union:__anon2	file:
DllMain	libtcc.c	/^BOOL WINAPI DllMain (HINSTANCE hDll, DWORD dwReason, LPVOID lpReserved)$/;"	f
EFA_PARISC_1_0	elf.h	1775;"	d
EFA_PARISC_1_1	elf.h	1776;"	d
EFA_PARISC_2_0	elf.h	1777;"	d
EF_ALPHA_32BIT	elf.h	1955;"	d
EF_ALPHA_CANRELAX	elf.h	1956;"	d
EF_ARM_ABI_FLOAT_HARD	elf.h	2289;"	d
EF_ARM_ABI_FLOAT_SOFT	elf.h	2288;"	d
EF_ARM_ALIGN8	elf.h	2281;"	d
EF_ARM_APCS_26	elf.h	2278;"	d
EF_ARM_APCS_FLOAT	elf.h	2279;"	d
EF_ARM_BE8	elf.h	2300;"	d
EF_ARM_DYNSYMSUSESEGIDX	elf.h	2295;"	d
EF_ARM_EABIMASK	elf.h	2297;"	d
EF_ARM_EABI_UNKNOWN	elf.h	2304;"	d
EF_ARM_EABI_VER1	elf.h	2305;"	d
EF_ARM_EABI_VER2	elf.h	2306;"	d
EF_ARM_EABI_VER3	elf.h	2307;"	d
EF_ARM_EABI_VER4	elf.h	2308;"	d
EF_ARM_EABI_VER5	elf.h	2309;"	d
EF_ARM_EABI_VERSION	elf.h	2303;"	d
EF_ARM_HASENTRY	elf.h	2276;"	d
EF_ARM_INTERWORK	elf.h	2277;"	d
EF_ARM_LE8	elf.h	2301;"	d
EF_ARM_MAPSYMSFIRST	elf.h	2296;"	d
EF_ARM_MAVERICK_FLOAT	elf.h	2286;"	d
EF_ARM_NEW_ABI	elf.h	2282;"	d
EF_ARM_OLD_ABI	elf.h	2283;"	d
EF_ARM_PIC	elf.h	2280;"	d
EF_ARM_RELEXEC	elf.h	2275;"	d
EF_ARM_SOFT_FLOAT	elf.h	2284;"	d
EF_ARM_SYMSARESORTED	elf.h	2294;"	d
EF_ARM_VFP_FLOAT	elf.h	2285;"	d
EF_CPU32	elf.h	1136;"	d
EF_IA_64_ABI64	elf.h	2563;"	d
EF_IA_64_ARCH	elf.h	2564;"	d
EF_IA_64_MASKOS	elf.h	2562;"	d
EF_MIPS_64BIT_WHIRL	elf.h	1387;"	d
EF_MIPS_ABI2	elf.h	1388;"	d
EF_MIPS_ABI_ON32	elf.h	1389;"	d
EF_MIPS_ARCH	elf.h	1390;"	d
EF_MIPS_ARCH_1	elf.h	1394;"	d
EF_MIPS_ARCH_2	elf.h	1395;"	d
EF_MIPS_ARCH_3	elf.h	1396;"	d
EF_MIPS_ARCH_32	elf.h	1399;"	d
EF_MIPS_ARCH_4	elf.h	1397;"	d
EF_MIPS_ARCH_5	elf.h	1398;"	d
EF_MIPS_ARCH_64	elf.h	1400;"	d
EF_MIPS_CPIC	elf.h	1385;"	d
EF_MIPS_NOREORDER	elf.h	1383;"	d
EF_MIPS_PIC	elf.h	1384;"	d
EF_MIPS_XGOT	elf.h	1386;"	d
EF_PARISC_ARCH	elf.h	1771;"	d
EF_PARISC_EXT	elf.h	1765;"	d
EF_PARISC_LAZYSWAP	elf.h	1770;"	d
EF_PARISC_LSB	elf.h	1766;"	d
EF_PARISC_NO_KABP	elf.h	1768;"	d
EF_PARISC_TRAPNIL	elf.h	1764;"	d
EF_PARISC_WIDE	elf.h	1767;"	d
EF_PPC_EMB	elf.h	2025;"	d
EF_PPC_RELOCATABLE	elf.h	2028;"	d
EF_PPC_RELOCATABLE_LIB	elf.h	2029;"	d
EF_S390_HIGH_GPRS	elf.h	2742;"	d
EF_SH1	elf.h	2676;"	d
EF_SH2	elf.h	2677;"	d
EF_SH2A	elf.h	2686;"	d
EF_SH2A_NOFPU	elf.h	2690;"	d
EF_SH2A_SH3E	elf.h	2695;"	d
EF_SH2A_SH3_NOFPU	elf.h	2693;"	d
EF_SH2A_SH4	elf.h	2694;"	d
EF_SH2A_SH4_NOFPU	elf.h	2692;"	d
EF_SH2E	elf.h	2684;"	d
EF_SH3	elf.h	2678;"	d
EF_SH3E	elf.h	2682;"	d
EF_SH3_DSP	elf.h	2680;"	d
EF_SH3_NOMMU	elf.h	2691;"	d
EF_SH4	elf.h	2683;"	d
EF_SH4A	elf.h	2685;"	d
EF_SH4AL_DSP	elf.h	2681;"	d
EF_SH4A_NOFPU	elf.h	2688;"	d
EF_SH4_NOFPU	elf.h	2687;"	d
EF_SH4_NOMMU_NOFPU	elf.h	2689;"	d
EF_SH_DSP	elf.h	2679;"	d
EF_SH_MACH_MASK	elf.h	2674;"	d
EF_SH_UNKNOWN	elf.h	2675;"	d
EF_SPARCV9_MM	elf.h	1261;"	d
EF_SPARCV9_PSO	elf.h	1263;"	d
EF_SPARCV9_RMO	elf.h	1264;"	d
EF_SPARCV9_TSO	elf.h	1262;"	d
EF_SPARC_32PLUS	elf.h	1267;"	d
EF_SPARC_EXT_MASK	elf.h	1266;"	d
EF_SPARC_HAL_R1	elf.h	1269;"	d
EF_SPARC_LEDATA	elf.h	1265;"	d
EF_SPARC_SUN_US1	elf.h	1268;"	d
EF_SPARC_SUN_US3	elf.h	1270;"	d
EI_ABIVERSION	elf.h	166;"	d
EI_CLASS	elf.h	133;"	d
EI_DATA	elf.h	139;"	d
EI_MAG0	elf.h	117;"	d
EI_MAG1	elf.h	120;"	d
EI_MAG2	elf.h	123;"	d
EI_MAG3	elf.h	126;"	d
EI_NIDENT	elf.h	75;"	d
EI_OSABI	elf.h	148;"	d
EI_PAD	elf.h	168;"	d
EI_VERSION	elf.h	145;"	d
ELF32_M_INFO	elf.h	1126;"	d
ELF32_M_SIZE	elf.h	1125;"	d
ELF32_M_SYM	elf.h	1124;"	d
ELF32_R_INFO	elf.h	544;"	d
ELF32_R_SYM	elf.h	542;"	d
ELF32_R_TYPE	elf.h	543;"	d
ELF32_ST_BIND	elf.h	446;"	d
ELF32_ST_INFO	elf.h	448;"	d
ELF32_ST_TYPE	elf.h	447;"	d
ELF32_ST_VISIBILITY	elf.h	493;"	d
ELF64_M_INFO	elf.h	1130;"	d
ELF64_M_SIZE	elf.h	1129;"	d
ELF64_M_SYM	elf.h	1128;"	d
ELF64_R_INFO	elf.h	548;"	d
ELF64_R_SYM	elf.h	546;"	d
ELF64_R_TYPE	elf.h	547;"	d
ELF64_ST_BIND	elf.h	451;"	d
ELF64_ST_INFO	elf.h	453;"	d
ELF64_ST_TYPE	elf.h	452;"	d
ELF64_ST_VISIBILITY	elf.h	496;"	d
ELFCLASS32	elf.h	135;"	d
ELFCLASS64	elf.h	136;"	d
ELFCLASSNONE	elf.h	134;"	d
ELFCLASSNUM	elf.h	137;"	d
ELFCLASSW	tcc.h	356;"	d
ELFCLASSW	tcc.h	363;"	d
ELFDATA2LSB	elf.h	141;"	d
ELFDATA2MSB	elf.h	142;"	d
ELFDATANONE	elf.h	140;"	d
ELFDATANUM	elf.h	143;"	d
ELFMAG	elf.h	130;"	d
ELFMAG0	elf.h	118;"	d
ELFMAG1	elf.h	121;"	d
ELFMAG2	elf.h	124;"	d
ELFMAG3	elf.h	127;"	d
ELFOSABI_AIX	elf.h	156;"	d
ELFOSABI_ARM	elf.h	163;"	d
ELFOSABI_ARM_AEABI	elf.h	162;"	d
ELFOSABI_FREEBSD	elf.h	158;"	d
ELFOSABI_GNU	elf.h	153;"	d
ELFOSABI_HPUX	elf.h	151;"	d
ELFOSABI_IRIX	elf.h	157;"	d
ELFOSABI_LINUX	elf.h	154;"	d
ELFOSABI_MODESTO	elf.h	160;"	d
ELFOSABI_NETBSD	elf.h	152;"	d
ELFOSABI_NONE	elf.h	149;"	d
ELFOSABI_OPENBSD	elf.h	161;"	d
ELFOSABI_SOLARIS	elf.h	155;"	d
ELFOSABI_STANDALONE	elf.h	164;"	d
ELFOSABI_SYSV	elf.h	150;"	d
ELFOSABI_TRU64	elf.h	159;"	d
ELFW	tcc.h	358;"	d
ELFW	tcc.h	365;"	d
ELF_NOTE_ABI	elf.h	1079;"	d
ELF_NOTE_GNU	elf.h	1061;"	d
ELF_NOTE_OS_FREEBSD	elf.h	1086;"	d
ELF_NOTE_OS_GNU	elf.h	1084;"	d
ELF_NOTE_OS_LINUX	elf.h	1083;"	d
ELF_NOTE_OS_SOLARIS2	elf.h	1085;"	d
ELF_NOTE_PAGESIZE_HINT	elf.h	1067;"	d
ELF_NOTE_SOLARIS	elf.h	1058;"	d
ELF_PAGE_SIZE	x86_64-link.c	16;"	d	file:
ELF_START_ADDR	x86_64-link.c	15;"	d	file:
EMPTY_SIZE	lib/bcheck.c	81;"	d	file:
EM_386	elf.h	188;"	d
EM_68HC05	elf.h	239;"	d
EM_68HC08	elf.h	238;"	d
EM_68HC11	elf.h	237;"	d
EM_68HC12	elf.h	221;"	d
EM_68HC16	elf.h	236;"	d
EM_68K	elf.h	189;"	d
EM_860	elf.h	191;"	d
EM_88K	elf.h	190;"	d
EM_960	elf.h	199;"	d
EM_AARCH64	elf.h	262;"	d
EM_ALPHA	elf.h	271;"	d
EM_ARC	elf.h	213;"	d
EM_ARC_A5	elf.h	260;"	d
EM_ARM	elf.h	208;"	d
EM_AVR	elf.h	250;"	d
EM_C60	elf.h	272;"	d
EM_COLDFIRE	elf.h	220;"	d
EM_CRIS	elf.h	243;"	d
EM_D10V	elf.h	252;"	d
EM_D30V	elf.h	253;"	d
EM_FAKE_ALPHA	elf.h	209;"	d
EM_FIREPATH	elf.h	245;"	d
EM_FR20	elf.h	205;"	d
EM_FR30	elf.h	251;"	d
EM_FX66	elf.h	233;"	d
EM_H8S	elf.h	216;"	d
EM_H8_300	elf.h	214;"	d
EM_H8_300H	elf.h	215;"	d
EM_H8_500	elf.h	217;"	d
EM_HUANY	elf.h	248;"	d
EM_IA_64	elf.h	218;"	d
EM_JAVELIN	elf.h	244;"	d
EM_M32	elf.h	186;"	d
EM_M32R	elf.h	255;"	d
EM_ME16	elf.h	227;"	d
EM_MIPS	elf.h	192;"	d
EM_MIPS_RS3_LE	elf.h	194;"	d
EM_MIPS_X	elf.h	219;"	d
EM_MMA	elf.h	222;"	d
EM_MMIX	elf.h	247;"	d
EM_MN10200	elf.h	257;"	d
EM_MN10300	elf.h	256;"	d
EM_NCPU	elf.h	224;"	d
EM_NDR1	elf.h	225;"	d
EM_NONE	elf.h	185;"	d
EM_NUM	elf.h	265;"	d
EM_OPENRISC	elf.h	259;"	d
EM_PARISC	elf.h	196;"	d
EM_PCP	elf.h	223;"	d
EM_PDSP	elf.h	231;"	d
EM_PJ	elf.h	258;"	d
EM_PPC	elf.h	200;"	d
EM_PPC64	elf.h	201;"	d
EM_PRISM	elf.h	249;"	d
EM_RCE	elf.h	207;"	d
EM_RH32	elf.h	206;"	d
EM_S370	elf.h	193;"	d
EM_S390	elf.h	202;"	d
EM_SH	elf.h	210;"	d
EM_SPARC	elf.h	187;"	d
EM_SPARC32PLUS	elf.h	198;"	d
EM_SPARCV9	elf.h	211;"	d
EM_ST100	elf.h	228;"	d
EM_ST19	elf.h	241;"	d
EM_ST7	elf.h	235;"	d
EM_ST9PLUS	elf.h	234;"	d
EM_STARCORE	elf.h	226;"	d
EM_SVX	elf.h	240;"	d
EM_TCC_TARGET	x86_64-link.c	3;"	d	file:
EM_TILEGX	elf.h	264;"	d
EM_TILEPRO	elf.h	263;"	d
EM_TINYJ	elf.h	229;"	d
EM_TRICORE	elf.h	212;"	d
EM_V800	elf.h	204;"	d
EM_V850	elf.h	254;"	d
EM_VAX	elf.h	242;"	d
EM_VPP500	elf.h	197;"	d
EM_X86_64	elf.h	230;"	d
EM_XTENSA	elf.h	261;"	d
EM_ZSP	elf.h	246;"	d
ET_CORE	elf.h	176;"	d
ET_DYN	elf.h	175;"	d
ET_EXEC	elf.h	174;"	d
ET_HIOS	elf.h	179;"	d
ET_HIPROC	elf.h	181;"	d
ET_LOOS	elf.h	178;"	d
ET_LOPROC	elf.h	180;"	d
ET_NONE	elf.h	172;"	d
ET_NUM	elf.h	177;"	d
ET_REL	elf.h	173;"	d
EV_CURRENT	elf.h	277;"	d
EV_NONE	elf.h	276;"	d
EV_NUM	elf.h	278;"	d
EXCESS	lib/libtcc1.c	55;"	d	file:
EXCESSD	lib/libtcc1.c	64;"	d	file:
EXCESSLD	lib/libtcc1.c	75;"	d	file:
EXP	lib/libtcc1.c	59;"	d	file:
EXPD	lib/libtcc1.c	66;"	d	file:
EXPLD	lib/libtcc1.c	76;"	d	file:
EXPR_ANY	tccgen.c	6275;"	d	file:
EXPR_CONST	tccgen.c	6274;"	d	file:
E_MIPS_ARCH_1	elf.h	1404;"	d
E_MIPS_ARCH_2	elf.h	1405;"	d
E_MIPS_ARCH_3	elf.h	1406;"	d
E_MIPS_ARCH_32	elf.h	1409;"	d
E_MIPS_ARCH_4	elf.h	1407;"	d
E_MIPS_ARCH_5	elf.h	1408;"	d
E_MIPS_ARCH_64	elf.h	1410;"	d
Elf32_Addr	elf.h	/^typedef uint32_t Elf32_Addr;$/;"	t
Elf32_Conflict	elf.h	/^typedef Elf32_Addr Elf32_Conflict;$/;"	t
Elf32_Dyn	elf.h	/^} Elf32_Dyn;$/;"	t	typeref:struct:__anon26
Elf32_Ehdr	elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon12
Elf32_Half	elf.h	/^typedef uint16_t Elf32_Half;$/;"	t
Elf32_Lib	elf.h	/^} Elf32_Lib;$/;"	t	typeref:struct:__anon52
Elf32_Move	elf.h	/^} Elf32_Move;$/;"	t	typeref:struct:__anon44
Elf32_Nhdr	elf.h	/^} Elf32_Nhdr;$/;"	t	typeref:struct:__anon42
Elf32_Off	elf.h	/^typedef uint32_t Elf32_Off;$/;"	t
Elf32_Phdr	elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon24
Elf32_RegInfo	elf.h	/^} Elf32_RegInfo;$/;"	t	typeref:struct:__anon49
Elf32_Rel	elf.h	/^} Elf32_Rel;$/;"	t	typeref:struct:__anon20
Elf32_Rela	elf.h	/^} Elf32_Rela;$/;"	t	typeref:struct:__anon22
Elf32_Section	elf.h	/^typedef uint16_t Elf32_Section;$/;"	t
Elf32_Shdr	elf.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon14
Elf32_Sword	elf.h	/^typedef	int32_t  Elf32_Sword;$/;"	t
Elf32_Sxword	elf.h	/^typedef	int64_t  Elf32_Sxword;$/;"	t
Elf32_Sym	elf.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anon16
Elf32_Syminfo	elf.h	/^} Elf32_Syminfo;$/;"	t	typeref:struct:__anon18
Elf32_Verdaux	elf.h	/^} Elf32_Verdaux;$/;"	t	typeref:struct:__anon32
Elf32_Verdef	elf.h	/^} Elf32_Verdef;$/;"	t	typeref:struct:__anon30
Elf32_Vernaux	elf.h	/^} Elf32_Vernaux;$/;"	t	typeref:struct:__anon36
Elf32_Verneed	elf.h	/^} Elf32_Verneed;$/;"	t	typeref:struct:__anon34
Elf32_Versym	elf.h	/^typedef Elf32_Half Elf32_Versym;$/;"	t
Elf32_Word	elf.h	/^typedef uint32_t Elf32_Word;$/;"	t
Elf32_Xword	elf.h	/^typedef uint64_t Elf32_Xword;$/;"	t
Elf32_auxv_t	elf.h	/^} Elf32_auxv_t;$/;"	t	typeref:struct:__anon38
Elf32_gptab	elf.h	/^} Elf32_gptab;$/;"	t	typeref:union:__anon46
Elf64_Addr	elf.h	/^typedef uint64_t Elf64_Addr;$/;"	t
Elf64_Dyn	elf.h	/^} Elf64_Dyn;$/;"	t	typeref:struct:__anon28
Elf64_Ehdr	elf.h	/^} Elf64_Ehdr;$/;"	t	typeref:struct:__anon13
Elf64_Half	elf.h	/^typedef uint16_t Elf64_Half;$/;"	t
Elf64_Lib	elf.h	/^} Elf64_Lib;$/;"	t	typeref:struct:__anon53
Elf64_Move	elf.h	/^} Elf64_Move;$/;"	t	typeref:struct:__anon45
Elf64_Nhdr	elf.h	/^} Elf64_Nhdr;$/;"	t	typeref:struct:__anon43
Elf64_Off	elf.h	/^typedef uint64_t Elf64_Off;$/;"	t
Elf64_Phdr	elf.h	/^} Elf64_Phdr;$/;"	t	typeref:struct:__anon25
Elf64_Rel	elf.h	/^} Elf64_Rel;$/;"	t	typeref:struct:__anon21
Elf64_Rela	elf.h	/^} Elf64_Rela;$/;"	t	typeref:struct:__anon23
Elf64_Section	elf.h	/^typedef uint16_t Elf64_Section;$/;"	t
Elf64_Shdr	elf.h	/^} Elf64_Shdr;$/;"	t	typeref:struct:__anon15
Elf64_Sword	elf.h	/^typedef	int32_t  Elf64_Sword;$/;"	t
Elf64_Sxword	elf.h	/^typedef	int64_t  Elf64_Sxword;$/;"	t
Elf64_Sym	elf.h	/^} Elf64_Sym;$/;"	t	typeref:struct:__anon17
Elf64_Syminfo	elf.h	/^} Elf64_Syminfo;$/;"	t	typeref:struct:__anon19
Elf64_Verdaux	elf.h	/^} Elf64_Verdaux;$/;"	t	typeref:struct:__anon33
Elf64_Verdef	elf.h	/^} Elf64_Verdef;$/;"	t	typeref:struct:__anon31
Elf64_Vernaux	elf.h	/^} Elf64_Vernaux;$/;"	t	typeref:struct:__anon37
Elf64_Verneed	elf.h	/^} Elf64_Verneed;$/;"	t	typeref:struct:__anon35
Elf64_Versym	elf.h	/^typedef Elf64_Half Elf64_Versym;$/;"	t
Elf64_Word	elf.h	/^typedef uint32_t Elf64_Word;$/;"	t
Elf64_Xword	elf.h	/^typedef uint64_t Elf64_Xword;$/;"	t
Elf64_auxv_t	elf.h	/^} Elf64_auxv_t;$/;"	t	typeref:struct:__anon40
ElfSym	tcc.h	372;"	d
ElfW	tcc.h	357;"	d
ElfW	tcc.h	364;"	d
ElfW	tccelf.c	/^static void fill_unloadable_phdr(ElfW(Phdr) *phdr, int phnum, Section *interp,$/;"	f	file:
ElfW_Rel	tcc.h	359;"	d
ElfW_Rel	tcc.h	366;"	d
Elf_Options	elf.h	/^} Elf_Options;$/;"	t	typeref:struct:__anon50
Elf_Options_Hw	elf.h	/^} Elf_Options_Hw;$/;"	t	typeref:struct:__anon51
ExprValue	tcc.h	/^typedef struct ExprValue {$/;"	s
ExprValue	tcc.h	/^} ExprValue;$/;"	t	typeref:struct:ExprValue
FASTCALL	lib/bcheck.c	101;"	d	file:
FD_INVERT	libtcc.c	1197;"	d	file:
FLOAT_EXP_BITS	lib/armeabi.c	55;"	d	file:
FLOAT_FRAC_BITS	lib/armeabi.c	56;"	d	file:
FLT_DIG	include/float.h	8;"	d
FLT_EPSILON	include/float.h	10;"	d
FLT_MANT_DIG	include/float.h	7;"	d
FLT_MAX	include/float.h	15;"	d
FLT_MAX_10_EXP	include/float.h	16;"	d
FLT_MAX_EXP	include/float.h	14;"	d
FLT_MIN	include/float.h	12;"	d
FLT_MIN_10_EXP	include/float.h	13;"	d
FLT_MIN_EXP	include/float.h	11;"	d
FLT_RADIX	include/float.h	4;"	d
FLT_ROUNDS	include/float.h	9;"	d
FUNC_CDECL	tcc.h	545;"	d
FUNC_ELLIPSIS	tcc.h	542;"	d
FUNC_FASTCALL1	tcc.h	547;"	d
FUNC_FASTCALL2	tcc.h	548;"	d
FUNC_FASTCALL3	tcc.h	549;"	d
FUNC_FASTCALLW	tcc.h	550;"	d
FUNC_NEW	tcc.h	540;"	d
FUNC_OLD	tcc.h	541;"	d
FUNC_PROLOG_SIZE	x86_64-gen.c	1427;"	d	file:
FUNC_PROLOG_SIZE	x86_64-gen.c	950;"	d	file:
FUNC_STDCALL	tcc.h	546;"	d
FlagDef	libtcc.c	/^typedef struct FlagDef {$/;"	s	file:
FlagDef	libtcc.c	/^} FlagDef;$/;"	t	typeref:struct:FlagDef	file:
FuncAttr	tcc.h	/^struct FuncAttr {$/;"	s
GET_CALLER_FP	lib/bcheck.c	255;"	d	file:
GRP_COMDAT	elf.h	388;"	d
HAVE_MEMALIGN	lib/bcheck.c	51;"	d	file:
HAVE_MEMALIGN	lib/bcheck.c	62;"	d	file:
HIDDEN	lib/libtcc1.c	57;"	d	file:
HIDDEND	lib/libtcc1.c	65;"	d	file:
HIDDEND_LL	lib/libtcc1.c	70;"	d	file:
HIGH_WORD_COEFF	lib/libtcc1.c	52;"	d	file:
I386_O	lib/Makefile	/^I386_O = libtcc1.o alloca86.o alloca86-bt.o$/;"	m
IB	Makefile	/^IB = $(if $1,mkdir -p $2 && $(INSTALLBIN) $1 $2)$/;"	m
IBw	Makefile	/^IBw = $(call IB,$(wildcard $1),$2)$/;"	m
IF	Makefile	/^IF = $(if $1,mkdir -p $2 && $(INSTALL) $1 $2)$/;"	m
IFDEF_STACK_SIZE	tcc.h	383;"	d
IFw	Makefile	/^IFw = $(call IF,$(wildcard $1),$2)$/;"	m
INCLUDED	Makefile	/^    INCLUDED = no$/;"	m
INCLUDE_STACK_SIZE	tcc.h	382;"	d
INSTALL	Makefile	/^INSTALL = install -m644$/;"	m
INSTALL	Makefile	/^install-win : INSTALL = cp$/;"	m
INSTALLBIN	Makefile	/^INSTALLBIN = install -m755 $(STRIP_$(CONFIG_strip))$/;"	m
INSTALLBIN	Makefile	/^install-win : INSTALLBIN = cp$/;"	m
INT_MAX	lib/armeabi.c	24;"	d	file:
INT_MIN	lib/armeabi.c	23;"	d	file:
INVALID_POINTER	lib/bcheck.c	79;"	d	file:
INVALID_SIZE	lib/bcheck.c	83;"	d	file:
INVERT_FUNC_PARAMS	x86_64-gen.c	94;"	d	file:
IO_BUF_SIZE	tcc.h	565;"	d
IR	Makefile	/^IR = mkdir -p $2 && cp -r $1\/. $2$/;"	m
IS_ABSPATH	tcc.h	109;"	d
IS_ABSPATH	tcc.h	114;"	d
IS_ASM_SYM	tcc.h	917;"	d
IS_DIRSEP	tcc.h	108;"	d
IS_DIRSEP	tcc.h	113;"	d
IS_ENUM	tcc.h	907;"	d
IS_ENUM_VAL	tcc.h	908;"	d
IS_ID	tcc.h	1232;"	d
IS_NUM	tcc.h	1233;"	d
IS_SPC	tcc.h	1231;"	d
IS_UNION	tcc.h	909;"	d
InlineFunc	tcc.h	/^typedef struct InlineFunc {$/;"	s
InlineFunc	tcc.h	/^} InlineFunc;$/;"	t	typeref:struct:InlineFunc
LABEL_DECLARED	tcc.h	559;"	d
LABEL_DEFINED	tcc.h	557;"	d
LABEL_FORWARD	tcc.h	558;"	d
LDBL_DIG	include/float.h	33;"	d
LDBL_DIG	include/float.h	46;"	d
LDBL_EPSILON	include/float.h	34;"	d
LDBL_EPSILON	include/float.h	47;"	d
LDBL_MANT_DIG	include/float.h	32;"	d
LDBL_MANT_DIG	include/float.h	45;"	d
LDBL_MAX	include/float.h	39;"	d
LDBL_MAX	include/float.h	52;"	d
LDBL_MAX_10_EXP	include/float.h	40;"	d
LDBL_MAX_10_EXP	include/float.h	53;"	d
LDBL_MAX_EXP	include/float.h	38;"	d
LDBL_MAX_EXP	include/float.h	51;"	d
LDBL_MIN	include/float.h	36;"	d
LDBL_MIN	include/float.h	49;"	d
LDBL_MIN_10_EXP	include/float.h	37;"	d
LDBL_MIN_10_EXP	include/float.h	50;"	d
LDBL_MIN_EXP	include/float.h	35;"	d
LDBL_MIN_EXP	include/float.h	48;"	d
LDFLAGS_P	Makefile	/^LDFLAGS_P = $(LDFLAGS)$/;"	m
LDOUBLE_ALIGN	x86_64-gen.c	101;"	d	file:
LDOUBLE_SIZE	x86_64-gen.c	100;"	d	file:
LD_LIBRARY_PATH	Makefile	/^        export LD_LIBRARY_PATH := $(CURDIR)\/$(TOP)$/;"	m
LD_TOK_EOF	tccelf.c	2803;"	d	file:
LD_TOK_NAME	tccelf.c	2802;"	d	file:
LIBS	Makefile	/^    LIBS=-lm$/;"	m
LIBS	Makefile	/^LIBS =$/;"	m
LIBS_P	Makefile	/^LIBS_P = $(LIBS)$/;"	m
LIBTCC	Makefile	/^        LIBTCC = libtcc$(DLLSUF)$/;"	m
LIBTCC	Makefile	/^        LIBTCC=libtcc$(DLLSUF)$/;"	m
LIBTCC	Makefile	/^LIBTCC = libtcc.a$/;"	m
LIBTCC1	Makefile	/^LIBTCC1 = libtcc1.a$/;"	m
LIBTCC1_CROSS	Makefile	/^LIBTCC1_CROSS = $(foreach X,$(LIBTCC1_X),$X-libtcc1.a)$/;"	m
LIBTCC1_U	Makefile	/^LIBTCC1_U = $(filter-out $(LIBTCC1_W),$(LIBTCC1_CROSS))$/;"	m
LIBTCC1_W	Makefile	/^LIBTCC1_W = $(filter %-win32-libtcc1.a %-wince-libtcc1.a,$(LIBTCC1_CROSS))$/;"	m
LIBTCC1_X	Makefile	/^LIBTCC1_X = i386 x86_64 i386-win32 x86_64-win32 x86_64-osx arm arm64 arm-wince$/;"	m
LIBTCCAPI	libtcc.h	5;"	d
LIBTCCAPI	tcc.h	69;"	d
LIBTCCDEF	Makefile	/^        LIBTCCDEF = libtcc.def$/;"	m
LIBTCC_H	libtcc.h	2;"	d
LIBTCC_INC	Makefile	/^    LIBTCC_INC = $($T_FILES)$/;"	m
LIBTCC_INC	Makefile	/^    LIBTCC_INC = $(filter %.h %-gen.c %-link.c,$($T_FILES))$/;"	m
LIBTCC_OBJ	Makefile	/^    LIBTCC_OBJ = $(X)libtcc.o$/;"	m
LIBTCC_OBJ	Makefile	/^    LIBTCC_OBJ = $(patsubst %.c,$(X)%.o,$(LIBTCC_SRC))$/;"	m
LIBTCC_SRC	Makefile	/^LIBTCC_SRC = $(filter-out tcc.c tcctools.c,$(filter %.c,$($T_FILES)))$/;"	m
LINE_MACRO_OUTPUT_FORMAT_GCC	tcc.h	/^		LINE_MACRO_OUTPUT_FORMAT_GCC,$/;"	e	enum:TCCState::__anon62
LINE_MACRO_OUTPUT_FORMAT_NONE	tcc.h	/^		LINE_MACRO_OUTPUT_FORMAT_NONE,$/;"	e	enum:TCCState::__anon62
LINE_MACRO_OUTPUT_FORMAT_P10	tcc.h	/^		LINE_MACRO_OUTPUT_FORMAT_P10 = 11$/;"	e	enum:TCCState::__anon62
LINE_MACRO_OUTPUT_FORMAT_STD	tcc.h	/^		LINE_MACRO_OUTPUT_FORMAT_STD,$/;"	e	enum:TCCState::__anon62
LINK_LIBTCC	Makefile	/^LINK_LIBTCC =$/;"	m
LITUSE_ALPHA_ADDR	elf.h	2011;"	d
LITUSE_ALPHA_BASE	elf.h	2012;"	d
LITUSE_ALPHA_BYTOFF	elf.h	2013;"	d
LITUSE_ALPHA_JSR	elf.h	2014;"	d
LITUSE_ALPHA_TLS_GD	elf.h	2015;"	d
LITUSE_ALPHA_TLS_LDM	elf.h	2016;"	d
LLONG_MAX	lib/armeabi.c	29;"	d	file:
LLONG_MIN	lib/armeabi.c	30;"	d	file:
LL_DELAY_LOAD	elf.h	1752;"	d
LL_DELTA	elf.h	1753;"	d
LL_EXACT_MATCH	elf.h	1748;"	d
LL_EXPORTS	elf.h	1751;"	d
LL_IGNORE_INT_VER	elf.h	1749;"	d
LL_NONE	elf.h	1747;"	d
LL_REQUIRE_MINOR	elf.h	1750;"	d
LONG_MAX	lib/armeabi.c	27;"	d	file:
LONG_MIN	lib/armeabi.c	26;"	d	file:
LONG_SIZE	tcc.h	375;"	d
LONG_SIZE	tcc.h	377;"	d
MACOSX_DEPLOYMENT_TARGET	Makefile	/^        export MACOSX_DEPLOYMENT_TARGET := 10.2$/;"	m
MACRO_FUNC	tcc.h	554;"	d
MACRO_OBJ	tcc.h	553;"	d
MANT	lib/libtcc1.c	60;"	d	file:
MANTD	lib/libtcc1.c	68;"	d	file:
MANTD_LL	lib/libtcc1.c	71;"	d	file:
MAX_ALIGN	x86_64-gen.c	103;"	d	file:
MAX_ASM_OPERANDS	tcc.h	626;"	d
MAX_OPERANDS	i386-asm.c	24;"	d	file:
MEM_DEBUG_CHECK3	libtcc.c	255;"	d	file:
MEM_DEBUG_FILE_LEN	libtcc.c	254;"	d	file:
MEM_DEBUG_MAGIC1	libtcc.c	251;"	d	file:
MEM_DEBUG_MAGIC2	libtcc.c	252;"	d	file:
MEM_DEBUG_MAGIC3	libtcc.c	253;"	d	file:
MEM_HEADER_PTR	libtcc.c	259;"	d	file:
MEM_USER_PTR	libtcc.c	257;"	d	file:
NATIVE_TARGET	Makefile	/^        NATIVE_TARGET = $(ARCH)-osx$/;"	m
NATIVE_TARGET	Makefile	/^    NATIVE_TARGET = $(ARCH)$/;"	m
NATIVE_TARGET	Makefile	/^    NATIVE_TARGET = $(ARCH)-win$(if $(findstring arm,$(ARCH)),ce,32)$/;"	m
NBWLX	tcc.h	1030;"	d
NBWLX	tcc.h	1035;"	d
NB_ASM_REGS	x86_64-gen.c	27;"	d	file:
NB_REGS	x86_64-gen.c	26;"	d	file:
NB_TEST_OPCODES	i386-asm.c	177;"	d	file:
NODATA_WANTED	tccgen.c	54;"	d	file:
NORETURN	tcc.h	100;"	d
NORETURN	tcc.h	103;"	d
NO_GOTPLT_ENTRY	tcc.h	/^    NO_GOTPLT_ENTRY,	\/* never generate (eg. GLOB_DAT & JMP_SLOT relocs) *\/$/;"	e	enum:gotplt_entry
NT_386_IOPERM	elf.h	636;"	d
NT_386_TLS	elf.h	635;"	d
NT_ARM_HW_BREAK	elf.h	648;"	d
NT_ARM_HW_WATCH	elf.h	649;"	d
NT_ARM_TLS	elf.h	647;"	d
NT_ARM_VFP	elf.h	646;"	d
NT_ASRS	elf.h	623;"	d
NT_AUXV	elf.h	621;"	d
NT_FPREGSET	elf.h	616;"	d
NT_GNU_ABI_TAG	elf.h	1078;"	d
NT_GNU_BUILD_ID	elf.h	1098;"	d
NT_GNU_GOLD_VERSION	elf.h	1101;"	d
NT_GNU_HWCAP	elf.h	1094;"	d
NT_GWINDOWS	elf.h	622;"	d
NT_LWPSINFO	elf.h	629;"	d
NT_LWPSTATUS	elf.h	628;"	d
NT_PLATFORM	elf.h	620;"	d
NT_PPC_SPE	elf.h	633;"	d
NT_PPC_VMX	elf.h	632;"	d
NT_PPC_VSX	elf.h	634;"	d
NT_PRCRED	elf.h	626;"	d
NT_PRFPXREG	elf.h	630;"	d
NT_PRPSINFO	elf.h	617;"	d
NT_PRSTATUS	elf.h	615;"	d
NT_PRXFPREG	elf.h	631;"	d
NT_PRXREG	elf.h	618;"	d
NT_PSINFO	elf.h	625;"	d
NT_PSTATUS	elf.h	624;"	d
NT_S390_CTRS	elf.h	642;"	d
NT_S390_HIGH_GPRS	elf.h	638;"	d
NT_S390_LAST_BREAK	elf.h	644;"	d
NT_S390_PREFIX	elf.h	643;"	d
NT_S390_SYSTEM_CALL	elf.h	645;"	d
NT_S390_TIMER	elf.h	639;"	d
NT_S390_TODCMP	elf.h	640;"	d
NT_S390_TODPREG	elf.h	641;"	d
NT_TASKSTRUCT	elf.h	619;"	d
NT_UTSNAME	elf.h	627;"	d
NT_VERSION	elf.h	653;"	d
NT_X86_XSTATE	elf.h	637;"	d
NULL	include/stddef.h	32;"	d
O	i386-asm.c	224;"	d	file:
OBJ-arm	lib/Makefile	/^OBJ-arm = $(ARM_O)$/;"	m
OBJ-arm-eabi	lib/Makefile	/^OBJ-arm-eabi = $(ARM_O)$/;"	m
OBJ-arm-eabihf	lib/Makefile	/^OBJ-arm-eabihf = $(ARM_O)$/;"	m
OBJ-arm-fpa	lib/Makefile	/^OBJ-arm-fpa = $(ARM_O)$/;"	m
OBJ-arm-fpa-ld	lib/Makefile	/^OBJ-arm-fpa-ld = $(ARM_O)$/;"	m
OBJ-arm-vfp	lib/Makefile	/^OBJ-arm-vfp = $(ARM_O)$/;"	m
OBJ-arm-wince	lib/Makefile	/^OBJ-arm-wince = $(ARM_O) $(WIN_O)$/;"	m
OBJ-arm64	lib/Makefile	/^OBJ-arm64 = $(ARM64_O)$/;"	m
OBJ-i386	lib/Makefile	/^OBJ-i386 = $(I386_O) $(BCHECK_O)$/;"	m
OBJ-i386-win32	lib/Makefile	/^OBJ-i386-win32 = $(I386_O) chkstk.o bcheck.o $(WIN_O)$/;"	m
OBJ-x86_64	lib/Makefile	/^OBJ-x86_64 = $(X86_64_O) va_list.o $(BCHECK_O)$/;"	m
OBJ-x86_64-osx	lib/Makefile	/^OBJ-x86_64-osx = $(X86_64_O) va_list.o$/;"	m
OBJ-x86_64-win32	lib/Makefile	/^OBJ-x86_64-win32 = $(X86_64_O) chkstk.o bcheck.o $(WIN_O)$/;"	m
ODK_EXCEPTIONS	elf.h	1528;"	d
ODK_FILL	elf.h	1531;"	d
ODK_HWAND	elf.h	1533;"	d
ODK_HWOR	elf.h	1534;"	d
ODK_HWPATCH	elf.h	1530;"	d
ODK_NULL	elf.h	1526;"	d
ODK_PAD	elf.h	1529;"	d
ODK_REGINFO	elf.h	1527;"	d
ODK_TAGS	elf.h	1532;"	d
OEX_DISMISS	elf.h	1544;"	d
OEX_FPDBUG	elf.h	1542;"	d
OEX_FPU_DIV0	elf.h	1547;"	d
OEX_FPU_INEX	elf.h	1550;"	d
OEX_FPU_INVAL	elf.h	1546;"	d
OEX_FPU_MAX	elf.h	1539;"	d
OEX_FPU_MIN	elf.h	1538;"	d
OEX_FPU_OFLO	elf.h	1548;"	d
OEX_FPU_UFLO	elf.h	1549;"	d
OEX_PAGE0	elf.h	1540;"	d
OEX_PRECISEFP	elf.h	1543;"	d
OEX_SMM	elf.h	1541;"	d
OHWA0_R4KEOP_CHECKED	elf.h	1573;"	d
OHWA1_R4KEOP_CLEAN	elf.h	1574;"	d
OHW_R4KEOP	elf.h	1554;"	d
OHW_R5KCVTL	elf.h	1557;"	d
OHW_R5KEOP	elf.h	1556;"	d
OHW_R8KPFETCH	elf.h	1555;"	d
ONE_EXP	lib/armeabi.c	61;"	d	file:
ONE_SOURCE	tcc.h	301;"	d
OPAD_POSTFIX	elf.h	1560;"	d
OPAD_PREFIX	elf.h	1559;"	d
OPAD_SYMBOL	elf.h	1561;"	d
OPCT_IS	i386-asm.c	42;"	d	file:
OPCT_MASK	i386-asm.c	36;"	d	file:
OPC_0F	i386-asm.c	44;"	d	file:
OPC_48	i386-asm.c	45;"	d	file:
OPC_ARITH	i386-asm.c	39;"	d	file:
OPC_B	i386-asm.c	30;"	d	file:
OPC_BWL	i386-asm.c	32;"	d	file:
OPC_BWLQ	i386-asm.c	48;"	d	file:
OPC_BWLX	i386-asm.c	50;"	d	file:
OPC_BWLX	i386-asm.c	53;"	d	file:
OPC_FARITH	i386-asm.c	40;"	d	file:
OPC_FWAIT	i386-asm.c	37;"	d	file:
OPC_GROUP_SHIFT	i386-asm.c	56;"	d	file:
OPC_MODRM	i386-asm.c	34;"	d	file:
OPC_REG	i386-asm.c	33;"	d	file:
OPC_SHIFT	i386-asm.c	38;"	d	file:
OPC_TEST	i386-asm.c	41;"	d	file:
OPC_WL	i386-asm.c	31;"	d	file:
OPC_WLQ	i386-asm.c	47;"	d	file:
OPC_WLX	i386-asm.c	49;"	d	file:
OPC_WLX	i386-asm.c	52;"	d	file:
OPT_ADDR	i386-asm.c	/^    OPT_ADDR,   \/* OP_EA with only offset *\/$/;"	e	enum:__anon1	file:
OPT_AR	tcc.h	1194;"	d
OPT_CL	i386-asm.c	/^    OPT_CL,     \/* %cl register *\/$/;"	e	enum:__anon1	file:
OPT_COMPOSITE_FIRST	i386-asm.c	/^    OPT_COMPOSITE_FIRST,$/;"	e	enum:__anon1	file:
OPT_CR	i386-asm.c	/^    OPT_CR,     \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_DB	i386-asm.c	/^    OPT_DB,     \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_DISP	i386-asm.c	/^    OPT_DISP,   \/* Like OPT_ADDR, but emitted as displacement (for jumps) *\/$/;"	e	enum:__anon1	file:
OPT_DISP8	i386-asm.c	/^    OPT_DISP8,  \/* Like OPT_ADDR, but only 8bit (short jumps) *\/$/;"	e	enum:__anon1	file:
OPT_DX	i386-asm.c	/^    OPT_DX,     \/* %dx register *\/$/;"	e	enum:__anon1	file:
OPT_EA	i386-asm.c	/^    OPT_EA = 0x80$/;"	e	enum:__anon1	file:
OPT_EAX	i386-asm.c	/^    OPT_EAX,    \/* %al, %ax, %eax or %rax register *\/$/;"	e	enum:__anon1	file:
OPT_HELP	tcc.h	1190;"	d
OPT_HELP2	tcc.h	1191;"	d
OPT_IM	i386-asm.c	/^    OPT_IM,     \/* IM8 | IM16 | IM32 *\/$/;"	e	enum:__anon1	file:
OPT_IM16	i386-asm.c	/^    OPT_IM16,$/;"	e	enum:__anon1	file:
OPT_IM32	i386-asm.c	/^    OPT_IM32,$/;"	e	enum:__anon1	file:
OPT_IM64	i386-asm.c	/^    OPT_IM64,$/;"	e	enum:__anon1	file:
OPT_IM8	i386-asm.c	/^    OPT_IM8,$/;"	e	enum:__anon1	file:
OPT_IM8S	i386-asm.c	/^    OPT_IM8S,$/;"	e	enum:__anon1	file:
OPT_IMPDEF	tcc.h	1195;"	d
OPT_IMW	i386-asm.c	/^    OPT_IMW,    \/* IM16 | IM32 *\/$/;"	e	enum:__anon1	file:
OPT_INDIR	i386-asm.c	/^    OPT_INDIR,  \/* *(expr) *\/$/;"	e	enum:__anon1	file:
OPT_M32	tcc.h	1196;"	d
OPT_M64	tcc.h	1197;"	d
OPT_MMX	i386-asm.c	/^    OPT_MMX,    \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_MMXSSE	i386-asm.c	/^    OPT_MMXSSE, \/* MMX | SSE *\/$/;"	e	enum:__anon1	file:
OPT_PRINT_DIRS	tcc.h	1193;"	d
OPT_REG	i386-asm.c	/^    OPT_REG,    \/* REG8 | REG16 | REG32 | REG64 *\/$/;"	e	enum:__anon1	file:
OPT_REG16	i386-asm.c	/^    OPT_REG16,  \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_REG32	i386-asm.c	/^    OPT_REG32,  \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_REG64	i386-asm.c	/^    OPT_REG64,  \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_REG8	i386-asm.c	/^    OPT_REG8=0, \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_REG8_LOW	i386-asm.c	/^    OPT_REG8_LOW, \/* %spl,%bpl,%sil,%dil, encoded like ah,ch,dh,bh, but$/;"	e	enum:__anon1	file:
OPT_REGW	i386-asm.c	/^    OPT_REGW,   \/* REG16 | REG32 | REG64 *\/$/;"	e	enum:__anon1	file:
OPT_SEG	i386-asm.c	/^    OPT_SEG,$/;"	e	enum:__anon1	file:
OPT_SSE	i386-asm.c	/^    OPT_SSE,    \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_ST	i386-asm.c	/^    OPT_ST,$/;"	e	enum:__anon1	file:
OPT_ST0	i386-asm.c	/^    OPT_ST0,    \/* %st(0) register *\/$/;"	e	enum:__anon1	file:
OPT_TR	i386-asm.c	/^    OPT_TR,     \/* warning: value is hardcoded from TOK_ASM_xxx *\/$/;"	e	enum:__anon1	file:
OPT_V	tcc.h	1192;"	d
OP_ADDR	i386-asm.c	122;"	d	file:
OP_CL	i386-asm.c	120;"	d	file:
OP_CR	i386-asm.c	109;"	d	file:
OP_DB	i386-asm.c	111;"	d	file:
OP_DX	i386-asm.c	121;"	d	file:
OP_EA	i386-asm.c	136;"	d	file:
OP_EA32	i386-asm.c	128;"	d	file:
OP_EA32	i386-asm.c	133;"	d	file:
OP_EAX	i386-asm.c	118;"	d	file:
OP_IM16	i386-asm.c	116;"	d	file:
OP_IM32	i386-asm.c	117;"	d	file:
OP_IM64	i386-asm.c	127;"	d	file:
OP_IM64	i386-asm.c	132;"	d	file:
OP_IM8	i386-asm.c	114;"	d	file:
OP_IM8S	i386-asm.c	115;"	d	file:
OP_INDIR	i386-asm.c	123;"	d	file:
OP_MMX	i386-asm.c	107;"	d	file:
OP_REG	i386-asm.c	137;"	d	file:
OP_REG16	i386-asm.c	105;"	d	file:
OP_REG32	i386-asm.c	106;"	d	file:
OP_REG64	i386-asm.c	125;"	d	file:
OP_REG64	i386-asm.c	130;"	d	file:
OP_REG8	i386-asm.c	104;"	d	file:
OP_REG8_LOW	i386-asm.c	126;"	d	file:
OP_REG8_LOW	i386-asm.c	131;"	d	file:
OP_SEG	i386-asm.c	112;"	d	file:
OP_SSE	i386-asm.c	108;"	d	file:
OP_ST	i386-asm.c	113;"	d	file:
OP_ST0	i386-asm.c	119;"	d	file:
OP_TR	i386-asm.c	110;"	d	file:
O_BINARY	tcc.h	88;"	d
Operand	i386-asm.c	/^typedef struct Operand {$/;"	s	file:
Operand	i386-asm.c	/^} Operand;$/;"	t	typeref:struct:Operand	file:
PACK	lib/libtcc1.c	61;"	d	file:
PACKD_LL	lib/libtcc1.c	72;"	d	file:
PACK_STACK_SIZE	tcc.h	387;"	d
PARSE2	tccpp.c	2549;"	d	file:
PARSE_FLAG_ACCEPT_STRAYS	tcc.h	1227;"	d
PARSE_FLAG_ASM_FILE	tcc.h	1225;"	d
PARSE_FLAG_LINEFEED	tcc.h	1222;"	d
PARSE_FLAG_PREPROCESS	tcc.h	1220;"	d
PARSE_FLAG_SPACES	tcc.h	1226;"	d
PARSE_FLAG_TOK_NUM	tcc.h	1221;"	d
PARSE_FLAG_TOK_STR	tcc.h	1228;"	d
PATHCMP	tcc.h	110;"	d
PATHCMP	tcc.h	115;"	d
PATHSEP	tcc.h	111;"	d
PATHSEP	tcc.h	116;"	d
PCRELATIVE_DLLPLT	x86_64-link.c	18;"	d	file:
PEEKC	tccpp.c	693;"	d	file:
PEEKC_EOB	tccpp.c	681;"	d	file:
PF_ARM_ABS	elf.h	2324;"	d
PF_ARM_PI	elf.h	2323;"	d
PF_ARM_SB	elf.h	2321;"	d
PF_HP_CODE	elf.h	1945;"	d
PF_HP_FAR_SHARED	elf.h	1943;"	d
PF_HP_LAZYSWAP	elf.h	1947;"	d
PF_HP_MODIFY	elf.h	1946;"	d
PF_HP_NEAR_SHARED	elf.h	1944;"	d
PF_HP_PAGE_SIZE	elf.h	1942;"	d
PF_HP_SBP	elf.h	1948;"	d
PF_IA_64_NORECOV	elf.h	2574;"	d
PF_MASKOS	elf.h	610;"	d
PF_MASKPROC	elf.h	611;"	d
PF_MIPS_LOCAL	elf.h	1641;"	d
PF_PARISC_SBP	elf.h	1940;"	d
PF_R	elf.h	609;"	d
PF_W	elf.h	608;"	d
PF_X	elf.h	607;"	d
PN_XNUM	elf.h	580;"	d
PROGS	Makefile	/^PROGS = tcc$(EXESUF)$/;"	m
PROGS_CROSS	Makefile	/^PROGS_CROSS = $(foreach X,$(TCC_X),$X-tcc$(EXESUF))$/;"	m
PTR_SIZE	x86_64-gen.c	97;"	d	file:
PT_ARM_EXIDX	elf.h	2327;"	d
PT_DYNAMIC	elf.h	586;"	d
PT_GNU_EH_FRAME	elf.h	594;"	d
PT_GNU_RELRO	elf.h	596;"	d
PT_GNU_STACK	elf.h	595;"	d
PT_HIOS	elf.h	601;"	d
PT_HIPROC	elf.h	603;"	d
PT_HISUNW	elf.h	600;"	d
PT_HP_CORE_COMM	elf.h	1923;"	d
PT_HP_CORE_KERNEL	elf.h	1922;"	d
PT_HP_CORE_LOADABLE	elf.h	1925;"	d
PT_HP_CORE_MMF	elf.h	1928;"	d
PT_HP_CORE_NONE	elf.h	1920;"	d
PT_HP_CORE_PROC	elf.h	1924;"	d
PT_HP_CORE_SHM	elf.h	1927;"	d
PT_HP_CORE_STACK	elf.h	1926;"	d
PT_HP_CORE_VERSION	elf.h	1921;"	d
PT_HP_FASTBIND	elf.h	1930;"	d
PT_HP_HSL_ANNOT	elf.h	1932;"	d
PT_HP_OPT_ANNOT	elf.h	1931;"	d
PT_HP_PARALLEL	elf.h	1929;"	d
PT_HP_STACK	elf.h	1933;"	d
PT_HP_TLS	elf.h	1919;"	d
PT_IA_64_ARCHEXT	elf.h	2567;"	d
PT_IA_64_HP_HSL_ANOT	elf.h	2570;"	d
PT_IA_64_HP_OPT_ANOT	elf.h	2569;"	d
PT_IA_64_HP_STACK	elf.h	2571;"	d
PT_IA_64_UNWIND	elf.h	2568;"	d
PT_INTERP	elf.h	587;"	d
PT_LOAD	elf.h	585;"	d
PT_LOOS	elf.h	593;"	d
PT_LOPROC	elf.h	602;"	d
PT_LOSUNW	elf.h	597;"	d
PT_MIPS_OPTIONS	elf.h	1637;"	d
PT_MIPS_REGINFO	elf.h	1635;"	d
PT_MIPS_RTPROC	elf.h	1636;"	d
PT_NOTE	elf.h	588;"	d
PT_NULL	elf.h	584;"	d
PT_NUM	elf.h	592;"	d
PT_PARISC_ARCHEXT	elf.h	1935;"	d
PT_PARISC_UNWIND	elf.h	1936;"	d
PT_PHDR	elf.h	590;"	d
PT_SHLIB	elf.h	589;"	d
PT_SUNWBSS	elf.h	598;"	d
PT_SUNWSTACK	elf.h	599;"	d
PT_TLS	elf.h	591;"	d
PUB_FUNC	tcc.h	297;"	d
PUB_FUNC	tcc.h	70;"	d
Pflag	tcc.h	/^    } Pflag; \/* -P switch *\/$/;"	m	struct:TCCState	typeref:enum:TCCState::__anon62
RC_FLOAT	x86_64-gen.c	34;"	d	file:
RC_FRET	x86_64-gen.c	53;"	d	file:
RC_INT	x86_64-gen.c	33;"	d	file:
RC_IRET	x86_64-gen.c	51;"	d	file:
RC_LRET	x86_64-gen.c	52;"	d	file:
RC_QRET	x86_64-gen.c	54;"	d	file:
RC_R10	x86_64-gen.c	41;"	d	file:
RC_R11	x86_64-gen.c	42;"	d	file:
RC_R8	x86_64-gen.c	39;"	d	file:
RC_R9	x86_64-gen.c	40;"	d	file:
RC_RAX	x86_64-gen.c	35;"	d	file:
RC_RCX	x86_64-gen.c	36;"	d	file:
RC_RDX	x86_64-gen.c	37;"	d	file:
RC_ST0	x86_64-gen.c	38;"	d	file:
RC_XMM0	x86_64-gen.c	43;"	d	file:
RC_XMM1	x86_64-gen.c	44;"	d	file:
RC_XMM2	x86_64-gen.c	45;"	d	file:
RC_XMM3	x86_64-gen.c	46;"	d	file:
RC_XMM4	x86_64-gen.c	47;"	d	file:
RC_XMM5	x86_64-gen.c	48;"	d	file:
RC_XMM6	x86_64-gen.c	49;"	d	file:
RC_XMM7	x86_64-gen.c	50;"	d	file:
REGN	x86_64-gen.c	1220;"	d	file:
REGN	x86_64-gen.c	737;"	d	file:
REGS_RETURN	lib/armeabi.c	/^REGS_RETURN(lldiv_t, lldiv_t)$/;"	f
REGS_RETURN	lib/armeabi.c	49;"	d	file:
REG_EBP	tccrun.c	567;"	d	file:
REG_EIP	tccrun.c	566;"	d	file:
REG_FRET	x86_64-gen.c	90;"	d	file:
REG_IN_MASK	i386-asm.c	1221;"	d	file:
REG_IRET	x86_64-gen.c	88;"	d	file:
REG_LRET	x86_64-gen.c	89;"	d	file:
REG_OUT_MASK	i386-asm.c	1220;"	d	file:
REG_QRET	x86_64-gen.c	91;"	d	file:
REG_VALUE	x86_64-gen.c	85;"	d	file:
RELOCATE_DLLPLT	x86_64-link.c	19;"	d	file:
REL_SECTION_FMT	tcc.h	361;"	d
REL_SECTION_FMT	tcc.h	368;"	d
REX_B	i386-asm.c	581;"	d	file:
REX_BASE	x86_64-gen.c	84;"	d	file:
REX_R	i386-asm.c	579;"	d	file:
REX_W	i386-asm.c	578;"	d	file:
REX_X	i386-asm.c	580;"	d	file:
RHF_CORD	elf.h	1720;"	d
RHF_DEFAULT_DELAY_LOAD	elf.h	1717;"	d
RHF_DELTA_C_PLUS_PLUS	elf.h	1714;"	d
RHF_GUARANTEE_INIT	elf.h	1713;"	d
RHF_GUARANTEE_START_INIT	elf.h	1715;"	d
RHF_NONE	elf.h	1707;"	d
RHF_NOTPOT	elf.h	1709;"	d
RHF_NO_LIBRARY_REPLACEMENT	elf.h	1710;"	d
RHF_NO_MOVE	elf.h	1711;"	d
RHF_NO_UNRES_UNDEF	elf.h	1721;"	d
RHF_PIXIE	elf.h	1716;"	d
RHF_QUICKSTART	elf.h	1708;"	d
RHF_REQUICKSTART	elf.h	1718;"	d
RHF_REQUICKSTARTED	elf.h	1719;"	d
RHF_RLD_ORDER_SAFE	elf.h	1722;"	d
RHF_SGI_ONLY	elf.h	1712;"	d
RTLD_DEFAULT	tcc.h	1640;"	d
RTLD_GLOBAL	tcc.h	1639;"	d
RTLD_LAZY	tcc.h	1637;"	d
RTLD_NOW	tcc.h	1638;"	d
RUN_SECTION_ALIGNMENT	tccrun.c	172;"	d	file:
RUN_SECTION_ALIGNMENT	tccrun.c	174;"	d	file:
R_386_16	elf.h	1215;"	d
R_386_32	elf.h	1192;"	d
R_386_32PLT	elf.h	1202;"	d
R_386_8	elf.h	1217;"	d
R_386_COPY	elf.h	1196;"	d
R_386_GLOB_DAT	elf.h	1197;"	d
R_386_GOT32	elf.h	1194;"	d
R_386_GOT32X	elf.h	1249;"	d
R_386_GOTOFF	elf.h	1200;"	d
R_386_GOTPC	elf.h	1201;"	d
R_386_IRELATIVE	elf.h	1248;"	d
R_386_JMP_SLOT	elf.h	1198;"	d
R_386_NONE	elf.h	1191;"	d
R_386_NUM	elf.h	1251;"	d
R_386_PC16	elf.h	1216;"	d
R_386_PC32	elf.h	1193;"	d
R_386_PC8	elf.h	1218;"	d
R_386_PLT32	elf.h	1195;"	d
R_386_RELATIVE	elf.h	1199;"	d
R_386_TLS_DESC	elf.h	1244;"	d
R_386_TLS_DESC_CALL	elf.h	1241;"	d
R_386_TLS_DTPMOD32	elf.h	1236;"	d
R_386_TLS_DTPOFF32	elf.h	1237;"	d
R_386_TLS_GD	elf.h	1210;"	d
R_386_TLS_GD_32	elf.h	1219;"	d
R_386_TLS_GD_CALL	elf.h	1222;"	d
R_386_TLS_GD_POP	elf.h	1224;"	d
R_386_TLS_GD_PUSH	elf.h	1221;"	d
R_386_TLS_GOTDESC	elf.h	1240;"	d
R_386_TLS_GOTIE	elf.h	1206;"	d
R_386_TLS_IE	elf.h	1204;"	d
R_386_TLS_IE_32	elf.h	1232;"	d
R_386_TLS_LDM	elf.h	1212;"	d
R_386_TLS_LDM_32	elf.h	1225;"	d
R_386_TLS_LDM_CALL	elf.h	1228;"	d
R_386_TLS_LDM_POP	elf.h	1230;"	d
R_386_TLS_LDM_PUSH	elf.h	1227;"	d
R_386_TLS_LDO_32	elf.h	1231;"	d
R_386_TLS_LE	elf.h	1208;"	d
R_386_TLS_LE_32	elf.h	1234;"	d
R_386_TLS_TPOFF	elf.h	1203;"	d
R_386_TLS_TPOFF32	elf.h	1238;"	d
R_390_12	elf.h	2748;"	d
R_390_16	elf.h	2749;"	d
R_390_20	elf.h	2820;"	d
R_390_32	elf.h	2750;"	d
R_390_64	elf.h	2768;"	d
R_390_8	elf.h	2747;"	d
R_390_COPY	elf.h	2755;"	d
R_390_GLOB_DAT	elf.h	2756;"	d
R_390_GOT12	elf.h	2752;"	d
R_390_GOT16	elf.h	2761;"	d
R_390_GOT20	elf.h	2821;"	d
R_390_GOT32	elf.h	2753;"	d
R_390_GOT64	elf.h	2770;"	d
R_390_GOTENT	elf.h	2772;"	d
R_390_GOTOFF16	elf.h	2773;"	d
R_390_GOTOFF32	elf.h	2759;"	d
R_390_GOTOFF64	elf.h	2774;"	d
R_390_GOTPC	elf.h	2760;"	d
R_390_GOTPCDBL	elf.h	2767;"	d
R_390_GOTPLT12	elf.h	2775;"	d
R_390_GOTPLT16	elf.h	2776;"	d
R_390_GOTPLT20	elf.h	2822;"	d
R_390_GOTPLT32	elf.h	2777;"	d
R_390_GOTPLT64	elf.h	2778;"	d
R_390_GOTPLTENT	elf.h	2779;"	d
R_390_IRELATIVE	elf.h	2825;"	d
R_390_JMP_SLOT	elf.h	2757;"	d
R_390_NONE	elf.h	2746;"	d
R_390_NUM	elf.h	2827;"	d
R_390_PC16	elf.h	2762;"	d
R_390_PC16DBL	elf.h	2763;"	d
R_390_PC32	elf.h	2751;"	d
R_390_PC32DBL	elf.h	2765;"	d
R_390_PC64	elf.h	2769;"	d
R_390_PLT16DBL	elf.h	2764;"	d
R_390_PLT32	elf.h	2754;"	d
R_390_PLT32DBL	elf.h	2766;"	d
R_390_PLT64	elf.h	2771;"	d
R_390_PLTOFF16	elf.h	2780;"	d
R_390_PLTOFF32	elf.h	2781;"	d
R_390_PLTOFF64	elf.h	2782;"	d
R_390_RELATIVE	elf.h	2758;"	d
R_390_TLS_DTPMOD	elf.h	2816;"	d
R_390_TLS_DTPOFF	elf.h	2817;"	d
R_390_TLS_GD32	elf.h	2788;"	d
R_390_TLS_GD64	elf.h	2790;"	d
R_390_TLS_GDCALL	elf.h	2784;"	d
R_390_TLS_GOTIE12	elf.h	2792;"	d
R_390_TLS_GOTIE20	elf.h	2823;"	d
R_390_TLS_GOTIE32	elf.h	2794;"	d
R_390_TLS_GOTIE64	elf.h	2796;"	d
R_390_TLS_IE32	elf.h	2802;"	d
R_390_TLS_IE64	elf.h	2804;"	d
R_390_TLS_IEENT	elf.h	2806;"	d
R_390_TLS_LDCALL	elf.h	2786;"	d
R_390_TLS_LDM32	elf.h	2798;"	d
R_390_TLS_LDM64	elf.h	2800;"	d
R_390_TLS_LDO32	elf.h	2812;"	d
R_390_TLS_LDO64	elf.h	2814;"	d
R_390_TLS_LE32	elf.h	2808;"	d
R_390_TLS_LE64	elf.h	2810;"	d
R_390_TLS_LOAD	elf.h	2783;"	d
R_390_TLS_TPOFF	elf.h	2818;"	d
R_68K_16	elf.h	1142;"	d
R_68K_32	elf.h	1141;"	d
R_68K_8	elf.h	1143;"	d
R_68K_COPY	elf.h	1159;"	d
R_68K_GLOB_DAT	elf.h	1160;"	d
R_68K_GOT16	elf.h	1148;"	d
R_68K_GOT16O	elf.h	1151;"	d
R_68K_GOT32	elf.h	1147;"	d
R_68K_GOT32O	elf.h	1150;"	d
R_68K_GOT8	elf.h	1149;"	d
R_68K_GOT8O	elf.h	1152;"	d
R_68K_JMP_SLOT	elf.h	1161;"	d
R_68K_NONE	elf.h	1140;"	d
R_68K_NUM	elf.h	1185;"	d
R_68K_PC16	elf.h	1145;"	d
R_68K_PC32	elf.h	1144;"	d
R_68K_PC8	elf.h	1146;"	d
R_68K_PLT16	elf.h	1154;"	d
R_68K_PLT16O	elf.h	1157;"	d
R_68K_PLT32	elf.h	1153;"	d
R_68K_PLT32O	elf.h	1156;"	d
R_68K_PLT8	elf.h	1155;"	d
R_68K_PLT8O	elf.h	1158;"	d
R_68K_RELATIVE	elf.h	1162;"	d
R_68K_TLS_DTPMOD32	elf.h	1181;"	d
R_68K_TLS_DTPREL32	elf.h	1182;"	d
R_68K_TLS_GD16	elf.h	1164;"	d
R_68K_TLS_GD32	elf.h	1163;"	d
R_68K_TLS_GD8	elf.h	1165;"	d
R_68K_TLS_IE16	elf.h	1173;"	d
R_68K_TLS_IE32	elf.h	1172;"	d
R_68K_TLS_IE8	elf.h	1174;"	d
R_68K_TLS_LDM16	elf.h	1167;"	d
R_68K_TLS_LDM32	elf.h	1166;"	d
R_68K_TLS_LDM8	elf.h	1168;"	d
R_68K_TLS_LDO16	elf.h	1170;"	d
R_68K_TLS_LDO32	elf.h	1169;"	d
R_68K_TLS_LDO8	elf.h	1171;"	d
R_68K_TLS_LE16	elf.h	1177;"	d
R_68K_TLS_LE32	elf.h	1175;"	d
R_68K_TLS_LE8	elf.h	1179;"	d
R_68K_TLS_TPREL32	elf.h	1183;"	d
R_AARCH64_ABS16	elf.h	2340;"	d
R_AARCH64_ABS32	elf.h	2339;"	d
R_AARCH64_ABS64	elf.h	2338;"	d
R_AARCH64_ADD_ABS_LO12_NC	elf.h	2358;"	d
R_AARCH64_ADR_GOT_PAGE	elf.h	2386;"	d
R_AARCH64_ADR_PREL_LO21	elf.h	2355;"	d
R_AARCH64_ADR_PREL_PG_HI21	elf.h	2356;"	d
R_AARCH64_ADR_PREL_PG_HI21_NC	elf.h	2357;"	d
R_AARCH64_CALL26	elf.h	2363;"	d
R_AARCH64_CONDBR19	elf.h	2361;"	d
R_AARCH64_COPY	elf.h	2451;"	d
R_AARCH64_GLOB_DAT	elf.h	2452;"	d
R_AARCH64_GOTREL32	elf.h	2383;"	d
R_AARCH64_GOTREL64	elf.h	2382;"	d
R_AARCH64_GOT_LD_PREL19	elf.h	2384;"	d
R_AARCH64_IRELATIVE	elf.h	2459;"	d
R_AARCH64_JUMP26	elf.h	2362;"	d
R_AARCH64_JUMP_SLOT	elf.h	2453;"	d
R_AARCH64_LD64_GOTOFF_LO15	elf.h	2385;"	d
R_AARCH64_LD64_GOTPAGE_LO15	elf.h	2388;"	d
R_AARCH64_LD64_GOT_LO12_NC	elf.h	2387;"	d
R_AARCH64_LDST128_ABS_LO12_NC	elf.h	2374;"	d
R_AARCH64_LDST16_ABS_LO12_NC	elf.h	2364;"	d
R_AARCH64_LDST32_ABS_LO12_NC	elf.h	2365;"	d
R_AARCH64_LDST64_ABS_LO12_NC	elf.h	2366;"	d
R_AARCH64_LDST8_ABS_LO12_NC	elf.h	2359;"	d
R_AARCH64_LD_PREL_LO19	elf.h	2354;"	d
R_AARCH64_MOVW_GOTOFF_G0	elf.h	2375;"	d
R_AARCH64_MOVW_GOTOFF_G0_NC	elf.h	2376;"	d
R_AARCH64_MOVW_GOTOFF_G1	elf.h	2377;"	d
R_AARCH64_MOVW_GOTOFF_G1_NC	elf.h	2378;"	d
R_AARCH64_MOVW_GOTOFF_G2	elf.h	2379;"	d
R_AARCH64_MOVW_GOTOFF_G2_NC	elf.h	2380;"	d
R_AARCH64_MOVW_GOTOFF_G3	elf.h	2381;"	d
R_AARCH64_MOVW_PREL_G0	elf.h	2367;"	d
R_AARCH64_MOVW_PREL_G0_NC	elf.h	2368;"	d
R_AARCH64_MOVW_PREL_G1	elf.h	2369;"	d
R_AARCH64_MOVW_PREL_G1_NC	elf.h	2370;"	d
R_AARCH64_MOVW_PREL_G2	elf.h	2371;"	d
R_AARCH64_MOVW_PREL_G2_NC	elf.h	2372;"	d
R_AARCH64_MOVW_PREL_G3	elf.h	2373;"	d
R_AARCH64_MOVW_SABS_G0	elf.h	2351;"	d
R_AARCH64_MOVW_SABS_G1	elf.h	2352;"	d
R_AARCH64_MOVW_SABS_G2	elf.h	2353;"	d
R_AARCH64_MOVW_UABS_G0	elf.h	2344;"	d
R_AARCH64_MOVW_UABS_G0_NC	elf.h	2345;"	d
R_AARCH64_MOVW_UABS_G1	elf.h	2346;"	d
R_AARCH64_MOVW_UABS_G1_NC	elf.h	2347;"	d
R_AARCH64_MOVW_UABS_G2	elf.h	2348;"	d
R_AARCH64_MOVW_UABS_G2_NC	elf.h	2349;"	d
R_AARCH64_MOVW_UABS_G3	elf.h	2350;"	d
R_AARCH64_NONE	elf.h	2337;"	d
R_AARCH64_NUM	elf.h	2461;"	d
R_AARCH64_PREL16	elf.h	2343;"	d
R_AARCH64_PREL32	elf.h	2342;"	d
R_AARCH64_PREL64	elf.h	2341;"	d
R_AARCH64_RELATIVE	elf.h	2454;"	d
R_AARCH64_TLSDESC	elf.h	2458;"	d
R_AARCH64_TLSDESC_ADD	elf.h	2445;"	d
R_AARCH64_TLSDESC_ADD_LO12	elf.h	2441;"	d
R_AARCH64_TLSDESC_ADR_PAGE21	elf.h	2439;"	d
R_AARCH64_TLSDESC_ADR_PREL21	elf.h	2438;"	d
R_AARCH64_TLSDESC_CALL	elf.h	2446;"	d
R_AARCH64_TLSDESC_LD64_LO12	elf.h	2440;"	d
R_AARCH64_TLSDESC_LDR	elf.h	2444;"	d
R_AARCH64_TLSDESC_LD_PREL19	elf.h	2437;"	d
R_AARCH64_TLSDESC_OFF_G0_NC	elf.h	2443;"	d
R_AARCH64_TLSDESC_OFF_G1	elf.h	2442;"	d
R_AARCH64_TLSGD_ADD_LO12_NC	elf.h	2391;"	d
R_AARCH64_TLSGD_ADR_PAGE21	elf.h	2390;"	d
R_AARCH64_TLSGD_ADR_PREL21	elf.h	2389;"	d
R_AARCH64_TLSGD_MOVW_G0_NC	elf.h	2393;"	d
R_AARCH64_TLSGD_MOVW_G1	elf.h	2392;"	d
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21	elf.h	2418;"	d
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC	elf.h	2419;"	d
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19	elf.h	2420;"	d
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC	elf.h	2417;"	d
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1	elf.h	2416;"	d
R_AARCH64_TLSLD_ADD_DTPREL_HI12	elf.h	2405;"	d
R_AARCH64_TLSLD_ADD_DTPREL_LO12	elf.h	2406;"	d
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC	elf.h	2407;"	d
R_AARCH64_TLSLD_ADD_LO12_NC	elf.h	2396;"	d
R_AARCH64_TLSLD_ADR_PAGE21	elf.h	2395;"	d
R_AARCH64_TLSLD_ADR_PREL21	elf.h	2394;"	d
R_AARCH64_TLSLD_LDST128_DTPREL_LO12	elf.h	2449;"	d
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC	elf.h	2450;"	d
R_AARCH64_TLSLD_LDST16_DTPREL_LO12	elf.h	2410;"	d
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC	elf.h	2411;"	d
R_AARCH64_TLSLD_LDST32_DTPREL_LO12	elf.h	2412;"	d
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC	elf.h	2413;"	d
R_AARCH64_TLSLD_LDST64_DTPREL_LO12	elf.h	2414;"	d
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC	elf.h	2415;"	d
R_AARCH64_TLSLD_LDST8_DTPREL_LO12	elf.h	2408;"	d
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC	elf.h	2409;"	d
R_AARCH64_TLSLD_LD_PREL19	elf.h	2399;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G0	elf.h	2403;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC	elf.h	2404;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G1	elf.h	2401;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC	elf.h	2402;"	d
R_AARCH64_TLSLD_MOVW_DTPREL_G2	elf.h	2400;"	d
R_AARCH64_TLSLD_MOVW_G0_NC	elf.h	2398;"	d
R_AARCH64_TLSLD_MOVW_G1	elf.h	2397;"	d
R_AARCH64_TLSLE_ADD_TPREL_HI12	elf.h	2426;"	d
R_AARCH64_TLSLE_ADD_TPREL_LO12	elf.h	2427;"	d
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC	elf.h	2428;"	d
R_AARCH64_TLSLE_LDST128_TPREL_LO12	elf.h	2447;"	d
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC	elf.h	2448;"	d
R_AARCH64_TLSLE_LDST16_TPREL_LO12	elf.h	2431;"	d
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC	elf.h	2432;"	d
R_AARCH64_TLSLE_LDST32_TPREL_LO12	elf.h	2433;"	d
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC	elf.h	2434;"	d
R_AARCH64_TLSLE_LDST64_TPREL_LO12	elf.h	2435;"	d
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC	elf.h	2436;"	d
R_AARCH64_TLSLE_LDST8_TPREL_LO12	elf.h	2429;"	d
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC	elf.h	2430;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G0	elf.h	2424;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC	elf.h	2425;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G1	elf.h	2422;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC	elf.h	2423;"	d
R_AARCH64_TLSLE_MOVW_TPREL_G2	elf.h	2421;"	d
R_AARCH64_TLS_DTPMOD64	elf.h	2455;"	d
R_AARCH64_TLS_DTPREL64	elf.h	2456;"	d
R_AARCH64_TLS_TPREL64	elf.h	2457;"	d
R_AARCH64_TSTBR14	elf.h	2360;"	d
R_ALPHA_BRADDR	elf.h	1981;"	d
R_ALPHA_COPY	elf.h	1989;"	d
R_ALPHA_DTPMOD64	elf.h	1996;"	d
R_ALPHA_DTPREL16	elf.h	2001;"	d
R_ALPHA_DTPREL64	elf.h	1998;"	d
R_ALPHA_DTPRELHI	elf.h	1999;"	d
R_ALPHA_DTPRELLO	elf.h	2000;"	d
R_ALPHA_GLOB_DAT	elf.h	1990;"	d
R_ALPHA_GOTDTPREL	elf.h	1997;"	d
R_ALPHA_GOTTPREL	elf.h	2002;"	d
R_ALPHA_GPDISP	elf.h	1980;"	d
R_ALPHA_GPREL16	elf.h	1988;"	d
R_ALPHA_GPREL32	elf.h	1977;"	d
R_ALPHA_GPRELHIGH	elf.h	1986;"	d
R_ALPHA_GPRELLOW	elf.h	1987;"	d
R_ALPHA_HINT	elf.h	1982;"	d
R_ALPHA_JMP_SLOT	elf.h	1991;"	d
R_ALPHA_LITERAL	elf.h	1978;"	d
R_ALPHA_LITUSE	elf.h	1979;"	d
R_ALPHA_NONE	elf.h	1974;"	d
R_ALPHA_NUM	elf.h	2008;"	d
R_ALPHA_REFLONG	elf.h	1975;"	d
R_ALPHA_REFQUAD	elf.h	1976;"	d
R_ALPHA_RELATIVE	elf.h	1992;"	d
R_ALPHA_SREL16	elf.h	1983;"	d
R_ALPHA_SREL32	elf.h	1984;"	d
R_ALPHA_SREL64	elf.h	1985;"	d
R_ALPHA_TLSGD	elf.h	1994;"	d
R_ALPHA_TLS_GD_HI	elf.h	1993;"	d
R_ALPHA_TLS_LDM	elf.h	1995;"	d
R_ALPHA_TPREL16	elf.h	2006;"	d
R_ALPHA_TPREL64	elf.h	2003;"	d
R_ALPHA_TPRELHI	elf.h	2004;"	d
R_ALPHA_TPRELLO	elf.h	2005;"	d
R_ARM_ABS12	elf.h	2471;"	d
R_ARM_ABS16	elf.h	2470;"	d
R_ARM_ABS32	elf.h	2467;"	d
R_ARM_ABS8	elf.h	2473;"	d
R_ARM_ALU_PCREL_15_8	elf.h	2498;"	d
R_ARM_ALU_PCREL_23_15	elf.h	2499;"	d
R_ARM_ALU_PCREL_7_0	elf.h	2497;"	d
R_ARM_ALU_SBREL_19_12	elf.h	2501;"	d
R_ARM_ALU_SBREL_27_20	elf.h	2502;"	d
R_ARM_AMP_VCALL9	elf.h	2477;"	d
R_ARM_CALL	elf.h	2494;"	d
R_ARM_COPY	elf.h	2486;"	d
R_ARM_GLOB_DAT	elf.h	2487;"	d
R_ARM_GNU_VTENTRY	elf.h	2513;"	d
R_ARM_GNU_VTINHERIT	elf.h	2514;"	d
R_ARM_GOT32	elf.h	2492;"	d
R_ARM_GOTOFF	elf.h	2490;"	d
R_ARM_GOTPC	elf.h	2491;"	d
R_ARM_IRELATIVE	elf.h	2528;"	d
R_ARM_JUMP24	elf.h	2495;"	d
R_ARM_JUMP_SLOT	elf.h	2488;"	d
R_ARM_LDR_SBREL_11_0	elf.h	2500;"	d
R_ARM_MOVT_ABS	elf.h	2506;"	d
R_ARM_MOVW_ABS_NC	elf.h	2505;"	d
R_ARM_NONE	elf.h	2465;"	d
R_ARM_NUM	elf.h	2537;"	d
R_ARM_PC13	elf.h	2469;"	d
R_ARM_PC24	elf.h	2466;"	d
R_ARM_PLT32	elf.h	2493;"	d
R_ARM_PREL31	elf.h	2504;"	d
R_ARM_RABS22	elf.h	2533;"	d
R_ARM_RBASE	elf.h	2535;"	d
R_ARM_REL32	elf.h	2468;"	d
R_ARM_RELATIVE	elf.h	2489;"	d
R_ARM_RPC24	elf.h	2534;"	d
R_ARM_RREL32	elf.h	2532;"	d
R_ARM_RSBREL32	elf.h	2530;"	d
R_ARM_RXPC25	elf.h	2529;"	d
R_ARM_SBREL32	elf.h	2474;"	d
R_ARM_SWI24	elf.h	2478;"	d
R_ARM_THM_ABS5	elf.h	2472;"	d
R_ARM_THM_JUMP24	elf.h	2496;"	d
R_ARM_THM_MOVT_ABS	elf.h	2508;"	d
R_ARM_THM_MOVW_ABS_NC	elf.h	2507;"	d
R_ARM_THM_PC11	elf.h	2515;"	d
R_ARM_THM_PC22	elf.h	2475;"	d
R_ARM_THM_PC8	elf.h	2476;"	d
R_ARM_THM_PC9	elf.h	2516;"	d
R_ARM_THM_RPC22	elf.h	2531;"	d
R_ARM_THM_SWI8	elf.h	2480;"	d
R_ARM_THM_TLS_CALL	elf.h	2512;"	d
R_ARM_THM_TLS_DESCSEQ	elf.h	2527;"	d
R_ARM_THM_XPC22	elf.h	2482;"	d
R_ARM_TLS_CALL	elf.h	2510;"	d
R_ARM_TLS_DESC	elf.h	2479;"	d
R_ARM_TLS_DESCSEQ	elf.h	2511;"	d
R_ARM_TLS_DTPMOD32	elf.h	2483;"	d
R_ARM_TLS_DTPOFF32	elf.h	2484;"	d
R_ARM_TLS_GD32	elf.h	2517;"	d
R_ARM_TLS_GOTDESC	elf.h	2509;"	d
R_ARM_TLS_IE32	elf.h	2523;"	d
R_ARM_TLS_LDM32	elf.h	2519;"	d
R_ARM_TLS_LDO32	elf.h	2521;"	d
R_ARM_TLS_LE32	elf.h	2525;"	d
R_ARM_TLS_TPOFF32	elf.h	2485;"	d
R_ARM_V4BX	elf.h	2503;"	d
R_ARM_XPC25	elf.h	2481;"	d
R_C60HI16	elf.h	2555;"	d
R_C60LO16	elf.h	2554;"	d
R_C60_32	elf.h	2544;"	d
R_C60_COPY	elf.h	2547;"	d
R_C60_GLOB_DAT	elf.h	2548;"	d
R_C60_GOT32	elf.h	2545;"	d
R_C60_GOTOFF	elf.h	2551;"	d
R_C60_GOTPC	elf.h	2552;"	d
R_C60_JMP_SLOT	elf.h	2549;"	d
R_C60_NUM	elf.h	2557;"	d
R_C60_PLT32	elf.h	2546;"	d
R_C60_RELATIVE	elf.h	2550;"	d
R_COPY	x86_64-link.c	10;"	d	file:
R_CRIS_16	elf.h	2833;"	d
R_CRIS_16_GOT	elf.h	2844;"	d
R_CRIS_16_GOTPLT	elf.h	2846;"	d
R_CRIS_16_PCREL	elf.h	2836;"	d
R_CRIS_32	elf.h	2834;"	d
R_CRIS_32_GOT	elf.h	2845;"	d
R_CRIS_32_GOTPLT	elf.h	2847;"	d
R_CRIS_32_GOTREL	elf.h	2848;"	d
R_CRIS_32_PCREL	elf.h	2837;"	d
R_CRIS_32_PLT_GOTREL	elf.h	2849;"	d
R_CRIS_32_PLT_PCREL	elf.h	2850;"	d
R_CRIS_8	elf.h	2832;"	d
R_CRIS_8_PCREL	elf.h	2835;"	d
R_CRIS_COPY	elf.h	2840;"	d
R_CRIS_GLOB_DAT	elf.h	2841;"	d
R_CRIS_GNU_VTENTRY	elf.h	2839;"	d
R_CRIS_GNU_VTINHERIT	elf.h	2838;"	d
R_CRIS_JUMP_SLOT	elf.h	2842;"	d
R_CRIS_NONE	elf.h	2831;"	d
R_CRIS_NUM	elf.h	2852;"	d
R_CRIS_RELATIVE	elf.h	2843;"	d
R_DATA_32	x86_64-link.c	6;"	d	file:
R_DATA_PTR	x86_64-link.c	7;"	d	file:
R_GLOB_DAT	x86_64-link.c	9;"	d	file:
R_IA64_COPY	elf.h	2649;"	d
R_IA64_DIR32LSB	elf.h	2594;"	d
R_IA64_DIR32MSB	elf.h	2593;"	d
R_IA64_DIR64LSB	elf.h	2596;"	d
R_IA64_DIR64MSB	elf.h	2595;"	d
R_IA64_DTPMOD64LSB	elf.h	2660;"	d
R_IA64_DTPMOD64MSB	elf.h	2659;"	d
R_IA64_DTPREL14	elf.h	2662;"	d
R_IA64_DTPREL22	elf.h	2663;"	d
R_IA64_DTPREL32LSB	elf.h	2666;"	d
R_IA64_DTPREL32MSB	elf.h	2665;"	d
R_IA64_DTPREL64I	elf.h	2664;"	d
R_IA64_DTPREL64LSB	elf.h	2668;"	d
R_IA64_DTPREL64MSB	elf.h	2667;"	d
R_IA64_FPTR32LSB	elf.h	2611;"	d
R_IA64_FPTR32MSB	elf.h	2610;"	d
R_IA64_FPTR64I	elf.h	2609;"	d
R_IA64_FPTR64LSB	elf.h	2613;"	d
R_IA64_FPTR64MSB	elf.h	2612;"	d
R_IA64_GPREL22	elf.h	2597;"	d
R_IA64_GPREL32LSB	elf.h	2600;"	d
R_IA64_GPREL32MSB	elf.h	2599;"	d
R_IA64_GPREL64I	elf.h	2598;"	d
R_IA64_GPREL64LSB	elf.h	2602;"	d
R_IA64_GPREL64MSB	elf.h	2601;"	d
R_IA64_IMM14	elf.h	2590;"	d
R_IA64_IMM22	elf.h	2591;"	d
R_IA64_IMM64	elf.h	2592;"	d
R_IA64_IPLTLSB	elf.h	2648;"	d
R_IA64_IPLTMSB	elf.h	2647;"	d
R_IA64_LDXMOV	elf.h	2652;"	d
R_IA64_LTOFF22	elf.h	2603;"	d
R_IA64_LTOFF22X	elf.h	2651;"	d
R_IA64_LTOFF64I	elf.h	2604;"	d
R_IA64_LTOFF_DTPMOD22	elf.h	2661;"	d
R_IA64_LTOFF_DTPREL22	elf.h	2669;"	d
R_IA64_LTOFF_FPTR22	elf.h	2622;"	d
R_IA64_LTOFF_FPTR32LSB	elf.h	2625;"	d
R_IA64_LTOFF_FPTR32MSB	elf.h	2624;"	d
R_IA64_LTOFF_FPTR64I	elf.h	2623;"	d
R_IA64_LTOFF_FPTR64LSB	elf.h	2627;"	d
R_IA64_LTOFF_FPTR64MSB	elf.h	2626;"	d
R_IA64_LTOFF_TPREL22	elf.h	2658;"	d
R_IA64_LTV32LSB	elf.h	2641;"	d
R_IA64_LTV32MSB	elf.h	2640;"	d
R_IA64_LTV64LSB	elf.h	2643;"	d
R_IA64_LTV64MSB	elf.h	2642;"	d
R_IA64_NONE	elf.h	2589;"	d
R_IA64_PCREL21B	elf.h	2615;"	d
R_IA64_PCREL21BI	elf.h	2644;"	d
R_IA64_PCREL21F	elf.h	2617;"	d
R_IA64_PCREL21M	elf.h	2616;"	d
R_IA64_PCREL22	elf.h	2645;"	d
R_IA64_PCREL32LSB	elf.h	2619;"	d
R_IA64_PCREL32MSB	elf.h	2618;"	d
R_IA64_PCREL60B	elf.h	2614;"	d
R_IA64_PCREL64I	elf.h	2646;"	d
R_IA64_PCREL64LSB	elf.h	2621;"	d
R_IA64_PCREL64MSB	elf.h	2620;"	d
R_IA64_PLTOFF22	elf.h	2605;"	d
R_IA64_PLTOFF64I	elf.h	2606;"	d
R_IA64_PLTOFF64LSB	elf.h	2608;"	d
R_IA64_PLTOFF64MSB	elf.h	2607;"	d
R_IA64_REL32LSB	elf.h	2637;"	d
R_IA64_REL32MSB	elf.h	2636;"	d
R_IA64_REL64LSB	elf.h	2639;"	d
R_IA64_REL64MSB	elf.h	2638;"	d
R_IA64_SECREL32LSB	elf.h	2633;"	d
R_IA64_SECREL32MSB	elf.h	2632;"	d
R_IA64_SECREL64LSB	elf.h	2635;"	d
R_IA64_SECREL64MSB	elf.h	2634;"	d
R_IA64_SEGREL32LSB	elf.h	2629;"	d
R_IA64_SEGREL32MSB	elf.h	2628;"	d
R_IA64_SEGREL64LSB	elf.h	2631;"	d
R_IA64_SEGREL64MSB	elf.h	2630;"	d
R_IA64_SUB	elf.h	2650;"	d
R_IA64_TPREL14	elf.h	2653;"	d
R_IA64_TPREL22	elf.h	2654;"	d
R_IA64_TPREL64I	elf.h	2655;"	d
R_IA64_TPREL64LSB	elf.h	2657;"	d
R_IA64_TPREL64MSB	elf.h	2656;"	d
R_JMP_SLOT	x86_64-link.c	8;"	d	file:
R_M32R_10_PCREL	elf.h	2960;"	d
R_M32R_10_PCREL_RELA	elf.h	2973;"	d
R_M32R_16	elf.h	2957;"	d
R_M32R_16_RELA	elf.h	2970;"	d
R_M32R_18_PCREL	elf.h	2961;"	d
R_M32R_18_PCREL_RELA	elf.h	2974;"	d
R_M32R_24	elf.h	2959;"	d
R_M32R_24_RELA	elf.h	2972;"	d
R_M32R_26_PCREL	elf.h	2962;"	d
R_M32R_26_PCREL_RELA	elf.h	2975;"	d
R_M32R_26_PLTREL	elf.h	2985;"	d
R_M32R_32	elf.h	2958;"	d
R_M32R_32_RELA	elf.h	2971;"	d
R_M32R_COPY	elf.h	2986;"	d
R_M32R_GLOB_DAT	elf.h	2987;"	d
R_M32R_GNU_VTENTRY	elf.h	2968;"	d
R_M32R_GNU_VTINHERIT	elf.h	2967;"	d
R_M32R_GOT16_HI_SLO	elf.h	2994;"	d
R_M32R_GOT16_HI_ULO	elf.h	2992;"	d
R_M32R_GOT16_LO	elf.h	2996;"	d
R_M32R_GOT24	elf.h	2984;"	d
R_M32R_GOTOFF	elf.h	2990;"	d
R_M32R_GOTOFF_HI_SLO	elf.h	3005;"	d
R_M32R_GOTOFF_HI_ULO	elf.h	3003;"	d
R_M32R_GOTOFF_LO	elf.h	3007;"	d
R_M32R_GOTPC24	elf.h	2991;"	d
R_M32R_GOTPC_HI_SLO	elf.h	2999;"	d
R_M32R_GOTPC_HI_ULO	elf.h	2997;"	d
R_M32R_GOTPC_LO	elf.h	3001;"	d
R_M32R_HI16_SLO	elf.h	2964;"	d
R_M32R_HI16_SLO_RELA	elf.h	2977;"	d
R_M32R_HI16_ULO	elf.h	2963;"	d
R_M32R_HI16_ULO_RELA	elf.h	2976;"	d
R_M32R_JMP_SLOT	elf.h	2988;"	d
R_M32R_LO16	elf.h	2965;"	d
R_M32R_LO16_RELA	elf.h	2978;"	d
R_M32R_NONE	elf.h	2956;"	d
R_M32R_NUM	elf.h	3008;"	d
R_M32R_REL32	elf.h	2982;"	d
R_M32R_RELATIVE	elf.h	2989;"	d
R_M32R_RELA_GNU_VTENTRY	elf.h	2981;"	d
R_M32R_RELA_GNU_VTINHERIT	elf.h	2980;"	d
R_M32R_SDA16	elf.h	2966;"	d
R_M32R_SDA16_RELA	elf.h	2979;"	d
R_MIPS_16	elf.h	1579;"	d
R_MIPS_26	elf.h	1582;"	d
R_MIPS_32	elf.h	1580;"	d
R_MIPS_64	elf.h	1594;"	d
R_MIPS_ADD_IMMEDIATE	elf.h	1610;"	d
R_MIPS_CALL16	elf.h	1589;"	d
R_MIPS_CALL_HI16	elf.h	1606;"	d
R_MIPS_CALL_LO16	elf.h	1607;"	d
R_MIPS_COPY	elf.h	1628;"	d
R_MIPS_DELETE	elf.h	1603;"	d
R_MIPS_GLOB_DAT	elf.h	1627;"	d
R_MIPS_GOT16	elf.h	1587;"	d
R_MIPS_GOT_DISP	elf.h	1595;"	d
R_MIPS_GOT_HI16	elf.h	1598;"	d
R_MIPS_GOT_LO16	elf.h	1599;"	d
R_MIPS_GOT_OFST	elf.h	1597;"	d
R_MIPS_GOT_PAGE	elf.h	1596;"	d
R_MIPS_GPREL16	elf.h	1585;"	d
R_MIPS_GPREL32	elf.h	1590;"	d
R_MIPS_HI16	elf.h	1583;"	d
R_MIPS_HIGHER	elf.h	1604;"	d
R_MIPS_HIGHEST	elf.h	1605;"	d
R_MIPS_INSERT_A	elf.h	1601;"	d
R_MIPS_INSERT_B	elf.h	1602;"	d
R_MIPS_JALR	elf.h	1613;"	d
R_MIPS_JUMP_SLOT	elf.h	1629;"	d
R_MIPS_LITERAL	elf.h	1586;"	d
R_MIPS_LO16	elf.h	1584;"	d
R_MIPS_NONE	elf.h	1578;"	d
R_MIPS_NUM	elf.h	1631;"	d
R_MIPS_PC16	elf.h	1588;"	d
R_MIPS_PJUMP	elf.h	1611;"	d
R_MIPS_REL16	elf.h	1609;"	d
R_MIPS_REL32	elf.h	1581;"	d
R_MIPS_RELGOT	elf.h	1612;"	d
R_MIPS_SCN_DISP	elf.h	1608;"	d
R_MIPS_SHIFT5	elf.h	1592;"	d
R_MIPS_SHIFT6	elf.h	1593;"	d
R_MIPS_SUB	elf.h	1600;"	d
R_MIPS_TLS_DTPMOD32	elf.h	1614;"	d
R_MIPS_TLS_DTPMOD64	elf.h	1616;"	d
R_MIPS_TLS_DTPREL32	elf.h	1615;"	d
R_MIPS_TLS_DTPREL64	elf.h	1617;"	d
R_MIPS_TLS_DTPREL_HI16	elf.h	1620;"	d
R_MIPS_TLS_DTPREL_LO16	elf.h	1621;"	d
R_MIPS_TLS_GD	elf.h	1618;"	d
R_MIPS_TLS_GOTTPREL	elf.h	1622;"	d
R_MIPS_TLS_LDM	elf.h	1619;"	d
R_MIPS_TLS_TPREL32	elf.h	1623;"	d
R_MIPS_TLS_TPREL64	elf.h	1624;"	d
R_MIPS_TLS_TPREL_HI16	elf.h	1625;"	d
R_MIPS_TLS_TPREL_LO16	elf.h	1626;"	d
R_MN10300_16	elf.h	2914;"	d
R_MN10300_24	elf.h	2921;"	d
R_MN10300_32	elf.h	2913;"	d
R_MN10300_8	elf.h	2915;"	d
R_MN10300_ALIGN	elf.h	2950;"	d
R_MN10300_COPY	elf.h	2932;"	d
R_MN10300_GLOB_DAT	elf.h	2933;"	d
R_MN10300_GNU_VTENTRY	elf.h	2920;"	d
R_MN10300_GNU_VTINHERIT	elf.h	2919;"	d
R_MN10300_GOT16	elf.h	2931;"	d
R_MN10300_GOT24	elf.h	2930;"	d
R_MN10300_GOT32	elf.h	2929;"	d
R_MN10300_GOTOFF16	elf.h	2926;"	d
R_MN10300_GOTOFF24	elf.h	2925;"	d
R_MN10300_GOTOFF32	elf.h	2924;"	d
R_MN10300_GOTPC16	elf.h	2923;"	d
R_MN10300_GOTPC32	elf.h	2922;"	d
R_MN10300_JMP_SLOT	elf.h	2934;"	d
R_MN10300_NONE	elf.h	2912;"	d
R_MN10300_NUM	elf.h	2952;"	d
R_MN10300_PCREL16	elf.h	2917;"	d
R_MN10300_PCREL32	elf.h	2916;"	d
R_MN10300_PCREL8	elf.h	2918;"	d
R_MN10300_PLT16	elf.h	2928;"	d
R_MN10300_PLT32	elf.h	2927;"	d
R_MN10300_RELATIVE	elf.h	2935;"	d
R_MN10300_SYM_DIFF	elf.h	2948;"	d
R_MN10300_TLS_DTPMOD	elf.h	2945;"	d
R_MN10300_TLS_DTPOFF	elf.h	2946;"	d
R_MN10300_TLS_GD	elf.h	2936;"	d
R_MN10300_TLS_GOTIE	elf.h	2939;"	d
R_MN10300_TLS_IE	elf.h	2941;"	d
R_MN10300_TLS_LD	elf.h	2937;"	d
R_MN10300_TLS_LDO	elf.h	2938;"	d
R_MN10300_TLS_LE	elf.h	2943;"	d
R_MN10300_TLS_TPOFF	elf.h	2947;"	d
R_NUM	x86_64-link.c	13;"	d	file:
R_PARISC_COPY	elf.h	1874;"	d
R_PARISC_DIR14DR	elf.h	1844;"	d
R_PARISC_DIR14R	elf.h	1811;"	d
R_PARISC_DIR14WR	elf.h	1843;"	d
R_PARISC_DIR16DF	elf.h	1847;"	d
R_PARISC_DIR16F	elf.h	1845;"	d
R_PARISC_DIR16WF	elf.h	1846;"	d
R_PARISC_DIR17F	elf.h	1810;"	d
R_PARISC_DIR17R	elf.h	1809;"	d
R_PARISC_DIR21L	elf.h	1808;"	d
R_PARISC_DIR32	elf.h	1807;"	d
R_PARISC_DIR64	elf.h	1842;"	d
R_PARISC_DPREL14R	elf.h	1818;"	d
R_PARISC_DPREL21L	elf.h	1817;"	d
R_PARISC_EPLT	elf.h	1876;"	d
R_PARISC_FPTR64	elf.h	1831;"	d
R_PARISC_GNU_VTENTRY	elf.h	1895;"	d
R_PARISC_GNU_VTINHERIT	elf.h	1896;"	d
R_PARISC_GPREL14DR	elf.h	1850;"	d
R_PARISC_GPREL14R	elf.h	1820;"	d
R_PARISC_GPREL14WR	elf.h	1849;"	d
R_PARISC_GPREL16DF	elf.h	1853;"	d
R_PARISC_GPREL16F	elf.h	1851;"	d
R_PARISC_GPREL16WF	elf.h	1852;"	d
R_PARISC_GPREL21L	elf.h	1819;"	d
R_PARISC_GPREL64	elf.h	1848;"	d
R_PARISC_HIRESERVE	elf.h	1915;"	d
R_PARISC_IPLT	elf.h	1875;"	d
R_PARISC_LORESERVE	elf.h	1873;"	d
R_PARISC_LTOFF14DR	elf.h	1856;"	d
R_PARISC_LTOFF14R	elf.h	1822;"	d
R_PARISC_LTOFF14WR	elf.h	1855;"	d
R_PARISC_LTOFF16DF	elf.h	1859;"	d
R_PARISC_LTOFF16F	elf.h	1857;"	d
R_PARISC_LTOFF16WF	elf.h	1858;"	d
R_PARISC_LTOFF21L	elf.h	1821;"	d
R_PARISC_LTOFF64	elf.h	1854;"	d
R_PARISC_LTOFF_FPTR14DR	elf.h	1869;"	d
R_PARISC_LTOFF_FPTR14R	elf.h	1830;"	d
R_PARISC_LTOFF_FPTR14WR	elf.h	1868;"	d
R_PARISC_LTOFF_FPTR16DF	elf.h	1872;"	d
R_PARISC_LTOFF_FPTR16F	elf.h	1870;"	d
R_PARISC_LTOFF_FPTR16WF	elf.h	1871;"	d
R_PARISC_LTOFF_FPTR21L	elf.h	1829;"	d
R_PARISC_LTOFF_FPTR32	elf.h	1828;"	d
R_PARISC_LTOFF_FPTR64	elf.h	1867;"	d
R_PARISC_LTOFF_TP14DR	elf.h	1891;"	d
R_PARISC_LTOFF_TP14F	elf.h	1882;"	d
R_PARISC_LTOFF_TP14R	elf.h	1881;"	d
R_PARISC_LTOFF_TP14WR	elf.h	1890;"	d
R_PARISC_LTOFF_TP16DF	elf.h	1894;"	d
R_PARISC_LTOFF_TP16F	elf.h	1892;"	d
R_PARISC_LTOFF_TP16WF	elf.h	1893;"	d
R_PARISC_LTOFF_TP21L	elf.h	1880;"	d
R_PARISC_LTOFF_TP64	elf.h	1889;"	d
R_PARISC_NONE	elf.h	1806;"	d
R_PARISC_PCREL14DR	elf.h	1838;"	d
R_PARISC_PCREL14R	elf.h	1816;"	d
R_PARISC_PCREL14WR	elf.h	1837;"	d
R_PARISC_PCREL16DF	elf.h	1841;"	d
R_PARISC_PCREL16F	elf.h	1839;"	d
R_PARISC_PCREL16WF	elf.h	1840;"	d
R_PARISC_PCREL17F	elf.h	1815;"	d
R_PARISC_PCREL17R	elf.h	1814;"	d
R_PARISC_PCREL21L	elf.h	1813;"	d
R_PARISC_PCREL22F	elf.h	1836;"	d
R_PARISC_PCREL32	elf.h	1812;"	d
R_PARISC_PCREL64	elf.h	1835;"	d
R_PARISC_PLABEL14R	elf.h	1834;"	d
R_PARISC_PLABEL21L	elf.h	1833;"	d
R_PARISC_PLABEL32	elf.h	1832;"	d
R_PARISC_PLTOFF14DR	elf.h	1863;"	d
R_PARISC_PLTOFF14R	elf.h	1827;"	d
R_PARISC_PLTOFF14WR	elf.h	1862;"	d
R_PARISC_PLTOFF16DF	elf.h	1866;"	d
R_PARISC_PLTOFF16F	elf.h	1864;"	d
R_PARISC_PLTOFF16WF	elf.h	1865;"	d
R_PARISC_PLTOFF21L	elf.h	1826;"	d
R_PARISC_SECREL32	elf.h	1823;"	d
R_PARISC_SECREL64	elf.h	1860;"	d
R_PARISC_SEGBASE	elf.h	1824;"	d
R_PARISC_SEGREL32	elf.h	1825;"	d
R_PARISC_SEGREL64	elf.h	1861;"	d
R_PARISC_TLS_DTPMOD32	elf.h	1905;"	d
R_PARISC_TLS_DTPMOD64	elf.h	1906;"	d
R_PARISC_TLS_DTPOFF32	elf.h	1907;"	d
R_PARISC_TLS_DTPOFF64	elf.h	1908;"	d
R_PARISC_TLS_GD14R	elf.h	1898;"	d
R_PARISC_TLS_GD21L	elf.h	1897;"	d
R_PARISC_TLS_GDCALL	elf.h	1899;"	d
R_PARISC_TLS_IE14R	elf.h	1912;"	d
R_PARISC_TLS_IE21L	elf.h	1911;"	d
R_PARISC_TLS_LDM14R	elf.h	1901;"	d
R_PARISC_TLS_LDM21L	elf.h	1900;"	d
R_PARISC_TLS_LDMCALL	elf.h	1902;"	d
R_PARISC_TLS_LDO14R	elf.h	1904;"	d
R_PARISC_TLS_LDO21L	elf.h	1903;"	d
R_PARISC_TLS_LE14R	elf.h	1910;"	d
R_PARISC_TLS_LE21L	elf.h	1909;"	d
R_PARISC_TLS_TPREL32	elf.h	1913;"	d
R_PARISC_TLS_TPREL64	elf.h	1914;"	d
R_PARISC_TPREL14DR	elf.h	1885;"	d
R_PARISC_TPREL14R	elf.h	1879;"	d
R_PARISC_TPREL14WR	elf.h	1884;"	d
R_PARISC_TPREL16DF	elf.h	1888;"	d
R_PARISC_TPREL16F	elf.h	1886;"	d
R_PARISC_TPREL16WF	elf.h	1887;"	d
R_PARISC_TPREL21L	elf.h	1878;"	d
R_PARISC_TPREL32	elf.h	1877;"	d
R_PARISC_TPREL64	elf.h	1883;"	d
R_PPC64_ADDR14	elf.h	2153;"	d
R_PPC64_ADDR14_BRNTAKEN	elf.h	2155;"	d
R_PPC64_ADDR14_BRTAKEN	elf.h	2154;"	d
R_PPC64_ADDR16	elf.h	2149;"	d
R_PPC64_ADDR16_DS	elf.h	2203;"	d
R_PPC64_ADDR16_HA	elf.h	2152;"	d
R_PPC64_ADDR16_HI	elf.h	2151;"	d
R_PPC64_ADDR16_HIGHER	elf.h	2185;"	d
R_PPC64_ADDR16_HIGHERA	elf.h	2186;"	d
R_PPC64_ADDR16_HIGHEST	elf.h	2187;"	d
R_PPC64_ADDR16_HIGHESTA	elf.h	2188;"	d
R_PPC64_ADDR16_LO	elf.h	2150;"	d
R_PPC64_ADDR16_LO_DS	elf.h	2204;"	d
R_PPC64_ADDR24	elf.h	2148;"	d
R_PPC64_ADDR30	elf.h	2183;"	d
R_PPC64_ADDR32	elf.h	2147;"	d
R_PPC64_ADDR64	elf.h	2184;"	d
R_PPC64_COPY	elf.h	2165;"	d
R_PPC64_DTPMOD64	elf.h	2217;"	d
R_PPC64_DTPREL16	elf.h	2223;"	d
R_PPC64_DTPREL16_DS	elf.h	2250;"	d
R_PPC64_DTPREL16_HA	elf.h	2226;"	d
R_PPC64_DTPREL16_HI	elf.h	2225;"	d
R_PPC64_DTPREL16_HIGHER	elf.h	2252;"	d
R_PPC64_DTPREL16_HIGHERA	elf.h	2253;"	d
R_PPC64_DTPREL16_HIGHEST	elf.h	2254;"	d
R_PPC64_DTPREL16_HIGHESTA	elf.h	2255;"	d
R_PPC64_DTPREL16_LO	elf.h	2224;"	d
R_PPC64_DTPREL16_LO_DS	elf.h	2251;"	d
R_PPC64_DTPREL64	elf.h	2227;"	d
R_PPC64_GLOB_DAT	elf.h	2166;"	d
R_PPC64_GOT16	elf.h	2160;"	d
R_PPC64_GOT16_DS	elf.h	2205;"	d
R_PPC64_GOT16_HA	elf.h	2163;"	d
R_PPC64_GOT16_HI	elf.h	2162;"	d
R_PPC64_GOT16_LO	elf.h	2161;"	d
R_PPC64_GOT16_LO_DS	elf.h	2206;"	d
R_PPC64_GOT_DTPREL16_DS	elf.h	2240;"	d
R_PPC64_GOT_DTPREL16_HA	elf.h	2243;"	d
R_PPC64_GOT_DTPREL16_HI	elf.h	2242;"	d
R_PPC64_GOT_DTPREL16_LO_DS	elf.h	2241;"	d
R_PPC64_GOT_TLSGD16	elf.h	2228;"	d
R_PPC64_GOT_TLSGD16_HA	elf.h	2231;"	d
R_PPC64_GOT_TLSGD16_HI	elf.h	2230;"	d
R_PPC64_GOT_TLSGD16_LO	elf.h	2229;"	d
R_PPC64_GOT_TLSLD16	elf.h	2232;"	d
R_PPC64_GOT_TLSLD16_HA	elf.h	2235;"	d
R_PPC64_GOT_TLSLD16_HI	elf.h	2234;"	d
R_PPC64_GOT_TLSLD16_LO	elf.h	2233;"	d
R_PPC64_GOT_TPREL16_DS	elf.h	2236;"	d
R_PPC64_GOT_TPREL16_HA	elf.h	2239;"	d
R_PPC64_GOT_TPREL16_HI	elf.h	2238;"	d
R_PPC64_GOT_TPREL16_LO_DS	elf.h	2237;"	d
R_PPC64_IRELATIVE	elf.h	2259;"	d
R_PPC64_JMP_IREL	elf.h	2258;"	d
R_PPC64_JMP_SLOT	elf.h	2167;"	d
R_PPC64_NONE	elf.h	2146;"	d
R_PPC64_PLT16_HA	elf.h	2177;"	d
R_PPC64_PLT16_HI	elf.h	2176;"	d
R_PPC64_PLT16_LO	elf.h	2175;"	d
R_PPC64_PLT16_LO_DS	elf.h	2207;"	d
R_PPC64_PLT32	elf.h	2173;"	d
R_PPC64_PLT64	elf.h	2191;"	d
R_PPC64_PLTGOT16	elf.h	2198;"	d
R_PPC64_PLTGOT16_DS	elf.h	2212;"	d
R_PPC64_PLTGOT16_HA	elf.h	2201;"	d
R_PPC64_PLTGOT16_HI	elf.h	2200;"	d
R_PPC64_PLTGOT16_LO	elf.h	2199;"	d
R_PPC64_PLTGOT16_LO_DS	elf.h	2213;"	d
R_PPC64_PLTREL32	elf.h	2174;"	d
R_PPC64_PLTREL64	elf.h	2192;"	d
R_PPC64_REL14	elf.h	2157;"	d
R_PPC64_REL14_BRNTAKEN	elf.h	2159;"	d
R_PPC64_REL14_BRTAKEN	elf.h	2158;"	d
R_PPC64_REL16	elf.h	2260;"	d
R_PPC64_REL16_HA	elf.h	2263;"	d
R_PPC64_REL16_HI	elf.h	2262;"	d
R_PPC64_REL16_LO	elf.h	2261;"	d
R_PPC64_REL24	elf.h	2156;"	d
R_PPC64_REL32	elf.h	2172;"	d
R_PPC64_REL64	elf.h	2190;"	d
R_PPC64_RELATIVE	elf.h	2168;"	d
R_PPC64_SECTOFF	elf.h	2179;"	d
R_PPC64_SECTOFF_DS	elf.h	2208;"	d
R_PPC64_SECTOFF_HA	elf.h	2182;"	d
R_PPC64_SECTOFF_HI	elf.h	2181;"	d
R_PPC64_SECTOFF_LO	elf.h	2180;"	d
R_PPC64_SECTOFF_LO_DS	elf.h	2209;"	d
R_PPC64_TLS	elf.h	2216;"	d
R_PPC64_TOC	elf.h	2197;"	d
R_PPC64_TOC16	elf.h	2193;"	d
R_PPC64_TOC16_DS	elf.h	2210;"	d
R_PPC64_TOC16_HA	elf.h	2196;"	d
R_PPC64_TOC16_HI	elf.h	2195;"	d
R_PPC64_TOC16_LO	elf.h	2194;"	d
R_PPC64_TOC16_LO_DS	elf.h	2211;"	d
R_PPC64_TPREL16	elf.h	2218;"	d
R_PPC64_TPREL16_DS	elf.h	2244;"	d
R_PPC64_TPREL16_HA	elf.h	2221;"	d
R_PPC64_TPREL16_HI	elf.h	2220;"	d
R_PPC64_TPREL16_HIGHER	elf.h	2246;"	d
R_PPC64_TPREL16_HIGHERA	elf.h	2247;"	d
R_PPC64_TPREL16_HIGHEST	elf.h	2248;"	d
R_PPC64_TPREL16_HIGHESTA	elf.h	2249;"	d
R_PPC64_TPREL16_LO	elf.h	2219;"	d
R_PPC64_TPREL16_LO_DS	elf.h	2245;"	d
R_PPC64_TPREL64	elf.h	2222;"	d
R_PPC64_UADDR16	elf.h	2171;"	d
R_PPC64_UADDR32	elf.h	2170;"	d
R_PPC64_UADDR64	elf.h	2189;"	d
R_PPC_ADDR14	elf.h	2040;"	d
R_PPC_ADDR14_BRNTAKEN	elf.h	2042;"	d
R_PPC_ADDR14_BRTAKEN	elf.h	2041;"	d
R_PPC_ADDR16	elf.h	2036;"	d
R_PPC_ADDR16_HA	elf.h	2039;"	d
R_PPC_ADDR16_HI	elf.h	2038;"	d
R_PPC_ADDR16_LO	elf.h	2037;"	d
R_PPC_ADDR24	elf.h	2035;"	d
R_PPC_ADDR32	elf.h	2034;"	d
R_PPC_COPY	elf.h	2052;"	d
R_PPC_DIAB_RELSDA_HA	elf.h	2126;"	d
R_PPC_DIAB_RELSDA_HI	elf.h	2125;"	d
R_PPC_DIAB_RELSDA_LO	elf.h	2124;"	d
R_PPC_DIAB_SDA21_HA	elf.h	2123;"	d
R_PPC_DIAB_SDA21_HI	elf.h	2122;"	d
R_PPC_DIAB_SDA21_LO	elf.h	2121;"	d
R_PPC_DTPMOD32	elf.h	2073;"	d
R_PPC_DTPREL16	elf.h	2079;"	d
R_PPC_DTPREL16_HA	elf.h	2082;"	d
R_PPC_DTPREL16_HI	elf.h	2081;"	d
R_PPC_DTPREL16_LO	elf.h	2080;"	d
R_PPC_DTPREL32	elf.h	2083;"	d
R_PPC_EMB_BIT_FLD	elf.h	2117;"	d
R_PPC_EMB_MRKREF	elf.h	2112;"	d
R_PPC_EMB_NADDR16	elf.h	2104;"	d
R_PPC_EMB_NADDR16_HA	elf.h	2107;"	d
R_PPC_EMB_NADDR16_HI	elf.h	2106;"	d
R_PPC_EMB_NADDR16_LO	elf.h	2105;"	d
R_PPC_EMB_NADDR32	elf.h	2103;"	d
R_PPC_EMB_RELSDA	elf.h	2118;"	d
R_PPC_EMB_RELSEC16	elf.h	2113;"	d
R_PPC_EMB_RELST_HA	elf.h	2116;"	d
R_PPC_EMB_RELST_HI	elf.h	2115;"	d
R_PPC_EMB_RELST_LO	elf.h	2114;"	d
R_PPC_EMB_SDA21	elf.h	2111;"	d
R_PPC_EMB_SDA2I16	elf.h	2109;"	d
R_PPC_EMB_SDA2REL	elf.h	2110;"	d
R_PPC_EMB_SDAI16	elf.h	2108;"	d
R_PPC_GLOB_DAT	elf.h	2053;"	d
R_PPC_GOT16	elf.h	2047;"	d
R_PPC_GOT16_HA	elf.h	2050;"	d
R_PPC_GOT16_HI	elf.h	2049;"	d
R_PPC_GOT16_LO	elf.h	2048;"	d
R_PPC_GOT_DTPREL16	elf.h	2096;"	d
R_PPC_GOT_DTPREL16_HA	elf.h	2099;"	d
R_PPC_GOT_DTPREL16_HI	elf.h	2098;"	d
R_PPC_GOT_DTPREL16_LO	elf.h	2097;"	d
R_PPC_GOT_TLSGD16	elf.h	2084;"	d
R_PPC_GOT_TLSGD16_HA	elf.h	2087;"	d
R_PPC_GOT_TLSGD16_HI	elf.h	2086;"	d
R_PPC_GOT_TLSGD16_LO	elf.h	2085;"	d
R_PPC_GOT_TLSLD16	elf.h	2088;"	d
R_PPC_GOT_TLSLD16_HA	elf.h	2091;"	d
R_PPC_GOT_TLSLD16_HI	elf.h	2090;"	d
R_PPC_GOT_TLSLD16_LO	elf.h	2089;"	d
R_PPC_GOT_TPREL16	elf.h	2092;"	d
R_PPC_GOT_TPREL16_HA	elf.h	2095;"	d
R_PPC_GOT_TPREL16_HI	elf.h	2094;"	d
R_PPC_GOT_TPREL16_LO	elf.h	2093;"	d
R_PPC_IRELATIVE	elf.h	2129;"	d
R_PPC_JMP_SLOT	elf.h	2054;"	d
R_PPC_LOCAL24PC	elf.h	2056;"	d
R_PPC_NONE	elf.h	2033;"	d
R_PPC_PLT16_HA	elf.h	2064;"	d
R_PPC_PLT16_HI	elf.h	2063;"	d
R_PPC_PLT16_LO	elf.h	2062;"	d
R_PPC_PLT32	elf.h	2060;"	d
R_PPC_PLTREL24	elf.h	2051;"	d
R_PPC_PLTREL32	elf.h	2061;"	d
R_PPC_REL14	elf.h	2044;"	d
R_PPC_REL14_BRNTAKEN	elf.h	2046;"	d
R_PPC_REL14_BRTAKEN	elf.h	2045;"	d
R_PPC_REL16	elf.h	2132;"	d
R_PPC_REL16_HA	elf.h	2135;"	d
R_PPC_REL16_HI	elf.h	2134;"	d
R_PPC_REL16_LO	elf.h	2133;"	d
R_PPC_REL24	elf.h	2043;"	d
R_PPC_REL32	elf.h	2059;"	d
R_PPC_RELATIVE	elf.h	2055;"	d
R_PPC_SDAREL16	elf.h	2065;"	d
R_PPC_SECTOFF	elf.h	2066;"	d
R_PPC_SECTOFF_HA	elf.h	2069;"	d
R_PPC_SECTOFF_HI	elf.h	2068;"	d
R_PPC_SECTOFF_LO	elf.h	2067;"	d
R_PPC_TLS	elf.h	2072;"	d
R_PPC_TOC16	elf.h	2139;"	d
R_PPC_TPREL16	elf.h	2074;"	d
R_PPC_TPREL16_HA	elf.h	2077;"	d
R_PPC_TPREL16_HI	elf.h	2076;"	d
R_PPC_TPREL16_LO	elf.h	2075;"	d
R_PPC_TPREL32	elf.h	2078;"	d
R_PPC_UADDR16	elf.h	2058;"	d
R_PPC_UADDR32	elf.h	2057;"	d
R_RELATIVE	x86_64-link.c	11;"	d	file:
R_SH_ALIGN	elf.h	2712;"	d
R_SH_CODE	elf.h	2713;"	d
R_SH_COPY	elf.h	2729;"	d
R_SH_COUNT	elf.h	2711;"	d
R_SH_DATA	elf.h	2714;"	d
R_SH_DIR32	elf.h	2699;"	d
R_SH_DIR8BP	elf.h	2705;"	d
R_SH_DIR8L	elf.h	2707;"	d
R_SH_DIR8W	elf.h	2706;"	d
R_SH_DIR8WPL	elf.h	2703;"	d
R_SH_DIR8WPN	elf.h	2701;"	d
R_SH_DIR8WPZ	elf.h	2704;"	d
R_SH_GLOB_DAT	elf.h	2730;"	d
R_SH_GNU_VTENTRY	elf.h	2718;"	d
R_SH_GNU_VTINHERIT	elf.h	2717;"	d
R_SH_GOT32	elf.h	2727;"	d
R_SH_GOTOFF	elf.h	2733;"	d
R_SH_GOTPC	elf.h	2734;"	d
R_SH_IND12W	elf.h	2702;"	d
R_SH_JMP_SLOT	elf.h	2731;"	d
R_SH_LABEL	elf.h	2715;"	d
R_SH_NONE	elf.h	2698;"	d
R_SH_NUM	elf.h	2736;"	d
R_SH_PLT32	elf.h	2728;"	d
R_SH_REL32	elf.h	2700;"	d
R_SH_RELATIVE	elf.h	2732;"	d
R_SH_SWITCH16	elf.h	2708;"	d
R_SH_SWITCH32	elf.h	2709;"	d
R_SH_SWITCH8	elf.h	2716;"	d
R_SH_TLS_DTPMOD32	elf.h	2724;"	d
R_SH_TLS_DTPOFF32	elf.h	2725;"	d
R_SH_TLS_GD_32	elf.h	2719;"	d
R_SH_TLS_IE_32	elf.h	2722;"	d
R_SH_TLS_LDO_32	elf.h	2721;"	d
R_SH_TLS_LD_32	elf.h	2720;"	d
R_SH_TLS_LE_32	elf.h	2723;"	d
R_SH_TLS_TPOFF32	elf.h	2726;"	d
R_SH_USES	elf.h	2710;"	d
R_SPARC_10	elf.h	1307;"	d
R_SPARC_11	elf.h	1308;"	d
R_SPARC_13	elf.h	1285;"	d
R_SPARC_16	elf.h	1276;"	d
R_SPARC_22	elf.h	1284;"	d
R_SPARC_32	elf.h	1277;"	d
R_SPARC_5	elf.h	1321;"	d
R_SPARC_6	elf.h	1322;"	d
R_SPARC_64	elf.h	1309;"	d
R_SPARC_7	elf.h	1320;"	d
R_SPARC_8	elf.h	1275;"	d
R_SPARC_COPY	elf.h	1293;"	d
R_SPARC_DISP16	elf.h	1279;"	d
R_SPARC_DISP32	elf.h	1280;"	d
R_SPARC_DISP64	elf.h	1323;"	d
R_SPARC_DISP8	elf.h	1278;"	d
R_SPARC_GLOB_DAT	elf.h	1294;"	d
R_SPARC_GLOB_JMP	elf.h	1319;"	d
R_SPARC_GNU_VTENTRY	elf.h	1369;"	d
R_SPARC_GNU_VTINHERIT	elf.h	1368;"	d
R_SPARC_GOT10	elf.h	1287;"	d
R_SPARC_GOT13	elf.h	1288;"	d
R_SPARC_GOT22	elf.h	1289;"	d
R_SPARC_GOTDATA_HIX22	elf.h	1357;"	d
R_SPARC_GOTDATA_LOX10	elf.h	1358;"	d
R_SPARC_GOTDATA_OP	elf.h	1361;"	d
R_SPARC_GOTDATA_OP_HIX22	elf.h	1359;"	d
R_SPARC_GOTDATA_OP_LOX10	elf.h	1360;"	d
R_SPARC_H34	elf.h	1362;"	d
R_SPARC_H44	elf.h	1327;"	d
R_SPARC_HH22	elf.h	1311;"	d
R_SPARC_HI22	elf.h	1283;"	d
R_SPARC_HIPLT22	elf.h	1302;"	d
R_SPARC_HIX22	elf.h	1325;"	d
R_SPARC_HM10	elf.h	1312;"	d
R_SPARC_IRELATIVE	elf.h	1367;"	d
R_SPARC_JMP_IREL	elf.h	1366;"	d
R_SPARC_JMP_SLOT	elf.h	1295;"	d
R_SPARC_L44	elf.h	1329;"	d
R_SPARC_LM22	elf.h	1313;"	d
R_SPARC_LO10	elf.h	1286;"	d
R_SPARC_LOPLT10	elf.h	1303;"	d
R_SPARC_LOX10	elf.h	1326;"	d
R_SPARC_M44	elf.h	1328;"	d
R_SPARC_NONE	elf.h	1274;"	d
R_SPARC_NUM	elf.h	1372;"	d
R_SPARC_OLO10	elf.h	1310;"	d
R_SPARC_PC10	elf.h	1290;"	d
R_SPARC_PC22	elf.h	1291;"	d
R_SPARC_PCPLT10	elf.h	1306;"	d
R_SPARC_PCPLT22	elf.h	1305;"	d
R_SPARC_PCPLT32	elf.h	1304;"	d
R_SPARC_PC_HH22	elf.h	1314;"	d
R_SPARC_PC_HM10	elf.h	1315;"	d
R_SPARC_PC_LM22	elf.h	1316;"	d
R_SPARC_PLT32	elf.h	1301;"	d
R_SPARC_PLT64	elf.h	1324;"	d
R_SPARC_REGISTER	elf.h	1330;"	d
R_SPARC_RELATIVE	elf.h	1296;"	d
R_SPARC_REV32	elf.h	1370;"	d
R_SPARC_SIZE32	elf.h	1363;"	d
R_SPARC_SIZE64	elf.h	1364;"	d
R_SPARC_TLS_DTPMOD32	elf.h	1351;"	d
R_SPARC_TLS_DTPMOD64	elf.h	1352;"	d
R_SPARC_TLS_DTPOFF32	elf.h	1353;"	d
R_SPARC_TLS_DTPOFF64	elf.h	1354;"	d
R_SPARC_TLS_GD_ADD	elf.h	1335;"	d
R_SPARC_TLS_GD_CALL	elf.h	1336;"	d
R_SPARC_TLS_GD_HI22	elf.h	1333;"	d
R_SPARC_TLS_GD_LO10	elf.h	1334;"	d
R_SPARC_TLS_IE_ADD	elf.h	1348;"	d
R_SPARC_TLS_IE_HI22	elf.h	1344;"	d
R_SPARC_TLS_IE_LD	elf.h	1346;"	d
R_SPARC_TLS_IE_LDX	elf.h	1347;"	d
R_SPARC_TLS_IE_LO10	elf.h	1345;"	d
R_SPARC_TLS_LDM_ADD	elf.h	1339;"	d
R_SPARC_TLS_LDM_CALL	elf.h	1340;"	d
R_SPARC_TLS_LDM_HI22	elf.h	1337;"	d
R_SPARC_TLS_LDM_LO10	elf.h	1338;"	d
R_SPARC_TLS_LDO_ADD	elf.h	1343;"	d
R_SPARC_TLS_LDO_HIX22	elf.h	1341;"	d
R_SPARC_TLS_LDO_LOX10	elf.h	1342;"	d
R_SPARC_TLS_LE_HIX22	elf.h	1349;"	d
R_SPARC_TLS_LE_LOX10	elf.h	1350;"	d
R_SPARC_TLS_TPOFF32	elf.h	1355;"	d
R_SPARC_TLS_TPOFF64	elf.h	1356;"	d
R_SPARC_UA16	elf.h	1332;"	d
R_SPARC_UA32	elf.h	1297;"	d
R_SPARC_UA64	elf.h	1331;"	d
R_SPARC_WDISP10	elf.h	1365;"	d
R_SPARC_WDISP16	elf.h	1317;"	d
R_SPARC_WDISP19	elf.h	1318;"	d
R_SPARC_WDISP22	elf.h	1282;"	d
R_SPARC_WDISP30	elf.h	1281;"	d
R_SPARC_WPLT30	elf.h	1292;"	d
R_TILEGX_16	elf.h	3113;"	d
R_TILEGX_16_PCREL	elf.h	3117;"	d
R_TILEGX_32	elf.h	3112;"	d
R_TILEGX_32_PCREL	elf.h	3116;"	d
R_TILEGX_64	elf.h	3111;"	d
R_TILEGX_64_PCREL	elf.h	3115;"	d
R_TILEGX_8	elf.h	3114;"	d
R_TILEGX_8_PCREL	elf.h	3118;"	d
R_TILEGX_BROFF_X1	elf.h	3130;"	d
R_TILEGX_COPY	elf.h	3126;"	d
R_TILEGX_DEST_IMM8_X1	elf.h	3137;"	d
R_TILEGX_GLOB_DAT	elf.h	3127;"	d
R_TILEGX_GNU_VTENTRY	elf.h	3232;"	d
R_TILEGX_GNU_VTINHERIT	elf.h	3231;"	d
R_TILEGX_HW0	elf.h	3119;"	d
R_TILEGX_HW0_LAST	elf.h	3123;"	d
R_TILEGX_HW1	elf.h	3120;"	d
R_TILEGX_HW1_LAST	elf.h	3124;"	d
R_TILEGX_HW2	elf.h	3121;"	d
R_TILEGX_HW2_LAST	elf.h	3125;"	d
R_TILEGX_HW3	elf.h	3122;"	d
R_TILEGX_IMM16_X0_HW0	elf.h	3146;"	d
R_TILEGX_IMM16_X0_HW0_GOT	elf.h	3174;"	d
R_TILEGX_IMM16_X0_HW0_LAST	elf.h	3154;"	d
R_TILEGX_IMM16_X0_HW0_LAST_GOT	elf.h	3182;"	d
R_TILEGX_IMM16_X0_HW0_LAST_PCREL	elf.h	3168;"	d
R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL	elf.h	3203;"	d
R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD	elf.h	3196;"	d
R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE	elf.h	3209;"	d
R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE	elf.h	3192;"	d
R_TILEGX_IMM16_X0_HW0_PCREL	elf.h	3160;"	d
R_TILEGX_IMM16_X0_HW0_PLT_PCREL	elf.h	3176;"	d
R_TILEGX_IMM16_X0_HW0_TLS_GD	elf.h	3188;"	d
R_TILEGX_IMM16_X0_HW0_TLS_IE	elf.h	3201;"	d
R_TILEGX_IMM16_X0_HW0_TLS_LE	elf.h	3190;"	d
R_TILEGX_IMM16_X0_HW1	elf.h	3148;"	d
R_TILEGX_IMM16_X0_HW1_LAST	elf.h	3156;"	d
R_TILEGX_IMM16_X0_HW1_LAST_GOT	elf.h	3184;"	d
R_TILEGX_IMM16_X0_HW1_LAST_PCREL	elf.h	3170;"	d
R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL	elf.h	3205;"	d
R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD	elf.h	3198;"	d
R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE	elf.h	3211;"	d
R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE	elf.h	3194;"	d
R_TILEGX_IMM16_X0_HW1_PCREL	elf.h	3162;"	d
R_TILEGX_IMM16_X0_HW1_PLT_PCREL	elf.h	3178;"	d
R_TILEGX_IMM16_X0_HW2	elf.h	3150;"	d
R_TILEGX_IMM16_X0_HW2_LAST	elf.h	3158;"	d
R_TILEGX_IMM16_X0_HW2_LAST_PCREL	elf.h	3172;"	d
R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL	elf.h	3207;"	d
R_TILEGX_IMM16_X0_HW2_PCREL	elf.h	3164;"	d
R_TILEGX_IMM16_X0_HW2_PLT_PCREL	elf.h	3180;"	d
R_TILEGX_IMM16_X0_HW3	elf.h	3152;"	d
R_TILEGX_IMM16_X0_HW3_PCREL	elf.h	3166;"	d
R_TILEGX_IMM16_X0_HW3_PLT_PCREL	elf.h	3186;"	d
R_TILEGX_IMM16_X1_HW0	elf.h	3147;"	d
R_TILEGX_IMM16_X1_HW0_GOT	elf.h	3175;"	d
R_TILEGX_IMM16_X1_HW0_LAST	elf.h	3155;"	d
R_TILEGX_IMM16_X1_HW0_LAST_GOT	elf.h	3183;"	d
R_TILEGX_IMM16_X1_HW0_LAST_PCREL	elf.h	3169;"	d
R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL	elf.h	3204;"	d
R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD	elf.h	3197;"	d
R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE	elf.h	3210;"	d
R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE	elf.h	3193;"	d
R_TILEGX_IMM16_X1_HW0_PCREL	elf.h	3161;"	d
R_TILEGX_IMM16_X1_HW0_PLT_PCREL	elf.h	3177;"	d
R_TILEGX_IMM16_X1_HW0_TLS_GD	elf.h	3189;"	d
R_TILEGX_IMM16_X1_HW0_TLS_IE	elf.h	3202;"	d
R_TILEGX_IMM16_X1_HW0_TLS_LE	elf.h	3191;"	d
R_TILEGX_IMM16_X1_HW1	elf.h	3149;"	d
R_TILEGX_IMM16_X1_HW1_LAST	elf.h	3157;"	d
R_TILEGX_IMM16_X1_HW1_LAST_GOT	elf.h	3185;"	d
R_TILEGX_IMM16_X1_HW1_LAST_PCREL	elf.h	3171;"	d
R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL	elf.h	3206;"	d
R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD	elf.h	3199;"	d
R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE	elf.h	3212;"	d
R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE	elf.h	3195;"	d
R_TILEGX_IMM16_X1_HW1_PCREL	elf.h	3163;"	d
R_TILEGX_IMM16_X1_HW1_PLT_PCREL	elf.h	3179;"	d
R_TILEGX_IMM16_X1_HW2	elf.h	3151;"	d
R_TILEGX_IMM16_X1_HW2_LAST	elf.h	3159;"	d
R_TILEGX_IMM16_X1_HW2_LAST_PCREL	elf.h	3173;"	d
R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL	elf.h	3208;"	d
R_TILEGX_IMM16_X1_HW2_PCREL	elf.h	3165;"	d
R_TILEGX_IMM16_X1_HW2_PLT_PCREL	elf.h	3181;"	d
R_TILEGX_IMM16_X1_HW3	elf.h	3153;"	d
R_TILEGX_IMM16_X1_HW3_PCREL	elf.h	3167;"	d
R_TILEGX_IMM16_X1_HW3_PLT_PCREL	elf.h	3187;"	d
R_TILEGX_IMM8_X0	elf.h	3133;"	d
R_TILEGX_IMM8_X0_TLS_ADD	elf.h	3226;"	d
R_TILEGX_IMM8_X0_TLS_GD_ADD	elf.h	3221;"	d
R_TILEGX_IMM8_X1	elf.h	3135;"	d
R_TILEGX_IMM8_X1_TLS_ADD	elf.h	3227;"	d
R_TILEGX_IMM8_X1_TLS_GD_ADD	elf.h	3222;"	d
R_TILEGX_IMM8_Y0	elf.h	3134;"	d
R_TILEGX_IMM8_Y0_TLS_ADD	elf.h	3228;"	d
R_TILEGX_IMM8_Y0_TLS_GD_ADD	elf.h	3223;"	d
R_TILEGX_IMM8_Y1	elf.h	3136;"	d
R_TILEGX_IMM8_Y1_TLS_ADD	elf.h	3229;"	d
R_TILEGX_IMM8_Y1_TLS_GD_ADD	elf.h	3224;"	d
R_TILEGX_JMP_SLOT	elf.h	3128;"	d
R_TILEGX_JUMPOFF_X1	elf.h	3131;"	d
R_TILEGX_JUMPOFF_X1_PLT	elf.h	3132;"	d
R_TILEGX_MF_IMM14_X1	elf.h	3139;"	d
R_TILEGX_MMEND_X0	elf.h	3141;"	d
R_TILEGX_MMSTART_X0	elf.h	3140;"	d
R_TILEGX_MT_IMM14_X1	elf.h	3138;"	d
R_TILEGX_NONE	elf.h	3110;"	d
R_TILEGX_NUM	elf.h	3234;"	d
R_TILEGX_RELATIVE	elf.h	3129;"	d
R_TILEGX_SHAMT_X0	elf.h	3142;"	d
R_TILEGX_SHAMT_X1	elf.h	3143;"	d
R_TILEGX_SHAMT_Y0	elf.h	3144;"	d
R_TILEGX_SHAMT_Y1	elf.h	3145;"	d
R_TILEGX_TLS_DTPMOD32	elf.h	3217;"	d
R_TILEGX_TLS_DTPMOD64	elf.h	3214;"	d
R_TILEGX_TLS_DTPOFF32	elf.h	3218;"	d
R_TILEGX_TLS_DTPOFF64	elf.h	3215;"	d
R_TILEGX_TLS_GD_CALL	elf.h	3220;"	d
R_TILEGX_TLS_IE_LOAD	elf.h	3225;"	d
R_TILEGX_TLS_TPOFF32	elf.h	3219;"	d
R_TILEGX_TLS_TPOFF64	elf.h	3216;"	d
R_TILEPRO_16	elf.h	3014;"	d
R_TILEPRO_16_PCREL	elf.h	3017;"	d
R_TILEPRO_32	elf.h	3013;"	d
R_TILEPRO_32_PCREL	elf.h	3016;"	d
R_TILEPRO_8	elf.h	3015;"	d
R_TILEPRO_8_PCREL	elf.h	3018;"	d
R_TILEPRO_BROFF_X1	elf.h	3026;"	d
R_TILEPRO_COPY	elf.h	3022;"	d
R_TILEPRO_DEST_IMM8_X1	elf.h	3067;"	d
R_TILEPRO_GLOB_DAT	elf.h	3023;"	d
R_TILEPRO_GNU_VTENTRY	elf.h	3104;"	d
R_TILEPRO_GNU_VTINHERIT	elf.h	3103;"	d
R_TILEPRO_HA16	elf.h	3021;"	d
R_TILEPRO_HI16	elf.h	3020;"	d
R_TILEPRO_IMM16_X0	elf.h	3035;"	d
R_TILEPRO_IMM16_X0_GOT	elf.h	3051;"	d
R_TILEPRO_IMM16_X0_GOT_HA	elf.h	3057;"	d
R_TILEPRO_IMM16_X0_GOT_HI	elf.h	3055;"	d
R_TILEPRO_IMM16_X0_GOT_LO	elf.h	3053;"	d
R_TILEPRO_IMM16_X0_HA	elf.h	3041;"	d
R_TILEPRO_IMM16_X0_HA_PCREL	elf.h	3049;"	d
R_TILEPRO_IMM16_X0_HI	elf.h	3039;"	d
R_TILEPRO_IMM16_X0_HI_PCREL	elf.h	3047;"	d
R_TILEPRO_IMM16_X0_LO	elf.h	3037;"	d
R_TILEPRO_IMM16_X0_LO_PCREL	elf.h	3045;"	d
R_TILEPRO_IMM16_X0_PCREL	elf.h	3043;"	d
R_TILEPRO_IMM16_X0_TLS_GD	elf.h	3075;"	d
R_TILEPRO_IMM16_X0_TLS_GD_HA	elf.h	3081;"	d
R_TILEPRO_IMM16_X0_TLS_GD_HI	elf.h	3079;"	d
R_TILEPRO_IMM16_X0_TLS_GD_LO	elf.h	3077;"	d
R_TILEPRO_IMM16_X0_TLS_IE	elf.h	3083;"	d
R_TILEPRO_IMM16_X0_TLS_IE_HA	elf.h	3089;"	d
R_TILEPRO_IMM16_X0_TLS_IE_HI	elf.h	3087;"	d
R_TILEPRO_IMM16_X0_TLS_IE_LO	elf.h	3085;"	d
R_TILEPRO_IMM16_X0_TLS_LE	elf.h	3094;"	d
R_TILEPRO_IMM16_X0_TLS_LE_HA	elf.h	3100;"	d
R_TILEPRO_IMM16_X0_TLS_LE_HI	elf.h	3098;"	d
R_TILEPRO_IMM16_X0_TLS_LE_LO	elf.h	3096;"	d
R_TILEPRO_IMM16_X1	elf.h	3036;"	d
R_TILEPRO_IMM16_X1_GOT	elf.h	3052;"	d
R_TILEPRO_IMM16_X1_GOT_HA	elf.h	3058;"	d
R_TILEPRO_IMM16_X1_GOT_HI	elf.h	3056;"	d
R_TILEPRO_IMM16_X1_GOT_LO	elf.h	3054;"	d
R_TILEPRO_IMM16_X1_HA	elf.h	3042;"	d
R_TILEPRO_IMM16_X1_HA_PCREL	elf.h	3050;"	d
R_TILEPRO_IMM16_X1_HI	elf.h	3040;"	d
R_TILEPRO_IMM16_X1_HI_PCREL	elf.h	3048;"	d
R_TILEPRO_IMM16_X1_LO	elf.h	3038;"	d
R_TILEPRO_IMM16_X1_LO_PCREL	elf.h	3046;"	d
R_TILEPRO_IMM16_X1_PCREL	elf.h	3044;"	d
R_TILEPRO_IMM16_X1_TLS_GD	elf.h	3076;"	d
R_TILEPRO_IMM16_X1_TLS_GD_HA	elf.h	3082;"	d
R_TILEPRO_IMM16_X1_TLS_GD_HI	elf.h	3080;"	d
R_TILEPRO_IMM16_X1_TLS_GD_LO	elf.h	3078;"	d
R_TILEPRO_IMM16_X1_TLS_IE	elf.h	3084;"	d
R_TILEPRO_IMM16_X1_TLS_IE_HA	elf.h	3090;"	d
R_TILEPRO_IMM16_X1_TLS_IE_HI	elf.h	3088;"	d
R_TILEPRO_IMM16_X1_TLS_IE_LO	elf.h	3086;"	d
R_TILEPRO_IMM16_X1_TLS_LE	elf.h	3095;"	d
R_TILEPRO_IMM16_X1_TLS_LE_HA	elf.h	3101;"	d
R_TILEPRO_IMM16_X1_TLS_LE_HI	elf.h	3099;"	d
R_TILEPRO_IMM16_X1_TLS_LE_LO	elf.h	3097;"	d
R_TILEPRO_IMM8_X0	elf.h	3029;"	d
R_TILEPRO_IMM8_X0_TLS_GD_ADD	elf.h	3070;"	d
R_TILEPRO_IMM8_X1	elf.h	3031;"	d
R_TILEPRO_IMM8_X1_TLS_GD_ADD	elf.h	3071;"	d
R_TILEPRO_IMM8_Y0	elf.h	3030;"	d
R_TILEPRO_IMM8_Y0_TLS_GD_ADD	elf.h	3072;"	d
R_TILEPRO_IMM8_Y1	elf.h	3032;"	d
R_TILEPRO_IMM8_Y1_TLS_GD_ADD	elf.h	3073;"	d
R_TILEPRO_JMP_SLOT	elf.h	3024;"	d
R_TILEPRO_JOFFLONG_X1	elf.h	3027;"	d
R_TILEPRO_JOFFLONG_X1_PLT	elf.h	3028;"	d
R_TILEPRO_LO16	elf.h	3019;"	d
R_TILEPRO_MF_IMM15_X1	elf.h	3034;"	d
R_TILEPRO_MMEND_X0	elf.h	3060;"	d
R_TILEPRO_MMEND_X1	elf.h	3062;"	d
R_TILEPRO_MMSTART_X0	elf.h	3059;"	d
R_TILEPRO_MMSTART_X1	elf.h	3061;"	d
R_TILEPRO_MT_IMM15_X1	elf.h	3033;"	d
R_TILEPRO_NONE	elf.h	3012;"	d
R_TILEPRO_NUM	elf.h	3106;"	d
R_TILEPRO_RELATIVE	elf.h	3025;"	d
R_TILEPRO_SHAMT_X0	elf.h	3063;"	d
R_TILEPRO_SHAMT_X1	elf.h	3064;"	d
R_TILEPRO_SHAMT_Y0	elf.h	3065;"	d
R_TILEPRO_SHAMT_Y1	elf.h	3066;"	d
R_TILEPRO_TLS_DTPMOD32	elf.h	3091;"	d
R_TILEPRO_TLS_DTPOFF32	elf.h	3092;"	d
R_TILEPRO_TLS_GD_CALL	elf.h	3069;"	d
R_TILEPRO_TLS_IE_LOAD	elf.h	3074;"	d
R_TILEPRO_TLS_TPOFF32	elf.h	3093;"	d
R_X86_64_16	elf.h	2869;"	d
R_X86_64_32	elf.h	2867;"	d
R_X86_64_32S	elf.h	2868;"	d
R_X86_64_64	elf.h	2857;"	d
R_X86_64_8	elf.h	2871;"	d
R_X86_64_COPY	elf.h	2861;"	d
R_X86_64_DTPMOD64	elf.h	2873;"	d
R_X86_64_DTPOFF32	elf.h	2880;"	d
R_X86_64_DTPOFF64	elf.h	2874;"	d
R_X86_64_GLOB_DAT	elf.h	2862;"	d
R_X86_64_GOT32	elf.h	2859;"	d
R_X86_64_GOT64	elf.h	2888;"	d
R_X86_64_GOTOFF64	elf.h	2885;"	d
R_X86_64_GOTPC32	elf.h	2886;"	d
R_X86_64_GOTPC32_TLSDESC	elf.h	2897;"	d
R_X86_64_GOTPC64	elf.h	2891;"	d
R_X86_64_GOTPCREL	elf.h	2865;"	d
R_X86_64_GOTPCREL64	elf.h	2889;"	d
R_X86_64_GOTPCRELX	elf.h	2903;"	d
R_X86_64_GOTPLT64	elf.h	2892;"	d
R_X86_64_GOTTPOFF	elf.h	2881;"	d
R_X86_64_IRELATIVE	elf.h	2901;"	d
R_X86_64_JUMP_SLOT	elf.h	2863;"	d
R_X86_64_NONE	elf.h	2856;"	d
R_X86_64_NUM	elf.h	2908;"	d
R_X86_64_PC16	elf.h	2870;"	d
R_X86_64_PC32	elf.h	2858;"	d
R_X86_64_PC64	elf.h	2884;"	d
R_X86_64_PC8	elf.h	2872;"	d
R_X86_64_PLT32	elf.h	2860;"	d
R_X86_64_PLTOFF64	elf.h	2893;"	d
R_X86_64_RELATIVE	elf.h	2864;"	d
R_X86_64_RELATIVE64	elf.h	2902;"	d
R_X86_64_REX_GOTPCRELX	elf.h	2905;"	d
R_X86_64_SIZE32	elf.h	2895;"	d
R_X86_64_SIZE64	elf.h	2896;"	d
R_X86_64_TLSDESC	elf.h	2900;"	d
R_X86_64_TLSDESC_CALL	elf.h	2898;"	d
R_X86_64_TLSGD	elf.h	2876;"	d
R_X86_64_TLSLD	elf.h	2878;"	d
R_X86_64_TPOFF32	elf.h	2883;"	d
R_X86_64_TPOFF64	elf.h	2875;"	d
SA_SIGINFO	tccrun.c	542;"	d	file:
SELFMAG	elf.h	131;"	d
SHF_ALLOC	elf.h	369;"	d
SHF_ALPHA_GPREL	elf.h	1966;"	d
SHF_ARM_COMDEF	elf.h	2317;"	d
SHF_ARM_ENTRYSECT	elf.h	2316;"	d
SHF_COMPRESSED	elf.h	379;"	d
SHF_DYNSYM	tccelf.c	51;"	d	file:
SHF_EXCLUDE	elf.h	384;"	d
SHF_EXECINSTR	elf.h	370;"	d
SHF_GROUP	elf.h	377;"	d
SHF_IA_64_NORECOV	elf.h	2582;"	d
SHF_IA_64_SHORT	elf.h	2581;"	d
SHF_INFO_LINK	elf.h	373;"	d
SHF_LINK_ORDER	elf.h	374;"	d
SHF_MASKOS	elf.h	380;"	d
SHF_MASKPROC	elf.h	381;"	d
SHF_MERGE	elf.h	371;"	d
SHF_MIPS_ADDR	elf.h	1466;"	d
SHF_MIPS_GPREL	elf.h	1464;"	d
SHF_MIPS_LOCAL	elf.h	1469;"	d
SHF_MIPS_MERGE	elf.h	1465;"	d
SHF_MIPS_NAMES	elf.h	1470;"	d
SHF_MIPS_NODUPE	elf.h	1471;"	d
SHF_MIPS_NOSTRIP	elf.h	1468;"	d
SHF_MIPS_STRINGS	elf.h	1467;"	d
SHF_ORDERED	elf.h	382;"	d
SHF_OS_NONCONFORMING	elf.h	375;"	d
SHF_PARISC_HUGE	elf.h	1794;"	d
SHF_PARISC_SBP	elf.h	1795;"	d
SHF_PARISC_SHORT	elf.h	1793;"	d
SHF_PRIVATE	tccelf.c	49;"	d	file:
SHF_STRINGS	elf.h	372;"	d
SHF_TLS	elf.h	378;"	d
SHF_WRITE	elf.h	368;"	d
SHN_ABS	elf.h	322;"	d
SHN_AFTER	elf.h	317;"	d
SHN_BEFORE	elf.h	315;"	d
SHN_COMMON	elf.h	323;"	d
SHN_HIOS	elf.h	321;"	d
SHN_HIPROC	elf.h	319;"	d
SHN_HIRESERVE	elf.h	325;"	d
SHN_LOOS	elf.h	320;"	d
SHN_LOPROC	elf.h	314;"	d
SHN_LORESERVE	elf.h	313;"	d
SHN_MIPS_ACOMMON	elf.h	1414;"	d
SHN_MIPS_DATA	elf.h	1416;"	d
SHN_MIPS_SCOMMON	elf.h	1417;"	d
SHN_MIPS_SUNDEFINED	elf.h	1418;"	d
SHN_MIPS_TEXT	elf.h	1415;"	d
SHN_PARISC_ANSI_COMMON	elf.h	1781;"	d
SHN_PARISC_HUGE_COMMON	elf.h	1783;"	d
SHN_UNDEF	elf.h	312;"	d
SHN_XINDEX	elf.h	324;"	d
SHT_ALPHA_DEBUG	elf.h	1961;"	d
SHT_ALPHA_REGINFO	elf.h	1962;"	d
SHT_ARM_ATTRIBUTES	elf.h	2332;"	d
SHT_ARM_EXIDX	elf.h	2330;"	d
SHT_ARM_PREEMPTMAP	elf.h	2331;"	d
SHT_CHECKSUM	elf.h	351;"	d
SHT_DYNAMIC	elf.h	335;"	d
SHT_DYNSYM	elf.h	340;"	d
SHT_FINI_ARRAY	elf.h	342;"	d
SHT_GNU_ATTRIBUTES	elf.h	348;"	d
SHT_GNU_HASH	elf.h	349;"	d
SHT_GNU_LIBLIST	elf.h	350;"	d
SHT_GNU_verdef	elf.h	356;"	d
SHT_GNU_verneed	elf.h	357;"	d
SHT_GNU_versym	elf.h	358;"	d
SHT_GROUP	elf.h	344;"	d
SHT_HASH	elf.h	334;"	d
SHT_HIOS	elf.h	360;"	d
SHT_HIPROC	elf.h	362;"	d
SHT_HISUNW	elf.h	359;"	d
SHT_HIUSER	elf.h	364;"	d
SHT_IA_64_EXT	elf.h	2577;"	d
SHT_IA_64_UNWIND	elf.h	2578;"	d
SHT_INIT_ARRAY	elf.h	341;"	d
SHT_LOOS	elf.h	347;"	d
SHT_LOPROC	elf.h	361;"	d
SHT_LOSUNW	elf.h	352;"	d
SHT_LOUSER	elf.h	363;"	d
SHT_MIPS_AUXSYM	elf.h	1441;"	d
SHT_MIPS_CONFLICT	elf.h	1424;"	d
SHT_MIPS_CONTENT	elf.h	1433;"	d
SHT_MIPS_DEBUG	elf.h	1427;"	d
SHT_MIPS_DELTACLASS	elf.h	1448;"	d
SHT_MIPS_DELTADECL	elf.h	1450;"	d
SHT_MIPS_DELTAINST	elf.h	1447;"	d
SHT_MIPS_DELTASYM	elf.h	1446;"	d
SHT_MIPS_DENSE	elf.h	1438;"	d
SHT_MIPS_DWARF	elf.h	1449;"	d
SHT_MIPS_EH_REGION	elf.h	1458;"	d
SHT_MIPS_EVENTS	elf.h	1452;"	d
SHT_MIPS_EXTSYM	elf.h	1437;"	d
SHT_MIPS_FDESC	elf.h	1436;"	d
SHT_MIPS_GPTAB	elf.h	1425;"	d
SHT_MIPS_IFACE	elf.h	1432;"	d
SHT_MIPS_LIBLIST	elf.h	1422;"	d
SHT_MIPS_LINE	elf.h	1444;"	d
SHT_MIPS_LOCSTR	elf.h	1443;"	d
SHT_MIPS_LOCSYM	elf.h	1440;"	d
SHT_MIPS_MSYM	elf.h	1423;"	d
SHT_MIPS_OPTIONS	elf.h	1434;"	d
SHT_MIPS_OPTSYM	elf.h	1442;"	d
SHT_MIPS_PACKAGE	elf.h	1429;"	d
SHT_MIPS_PACKSYM	elf.h	1430;"	d
SHT_MIPS_PDESC	elf.h	1439;"	d
SHT_MIPS_PDR_EXCEPTION	elf.h	1460;"	d
SHT_MIPS_PIXIE	elf.h	1454;"	d
SHT_MIPS_REGINFO	elf.h	1428;"	d
SHT_MIPS_RELD	elf.h	1431;"	d
SHT_MIPS_RFDESC	elf.h	1445;"	d
SHT_MIPS_SHDR	elf.h	1435;"	d
SHT_MIPS_SYMBOL_LIB	elf.h	1451;"	d
SHT_MIPS_TRANSLATE	elf.h	1453;"	d
SHT_MIPS_UCODE	elf.h	1426;"	d
SHT_MIPS_WHIRL	elf.h	1457;"	d
SHT_MIPS_XLATE	elf.h	1455;"	d
SHT_MIPS_XLATE_DEBUG	elf.h	1456;"	d
SHT_MIPS_XLATE_OLD	elf.h	1459;"	d
SHT_NOBITS	elf.h	337;"	d
SHT_NOTE	elf.h	336;"	d
SHT_NULL	elf.h	329;"	d
SHT_NUM	elf.h	346;"	d
SHT_PARISC_DOC	elf.h	1789;"	d
SHT_PARISC_EXT	elf.h	1787;"	d
SHT_PARISC_UNWIND	elf.h	1788;"	d
SHT_PREINIT_ARRAY	elf.h	343;"	d
SHT_PROGBITS	elf.h	330;"	d
SHT_REL	elf.h	338;"	d
SHT_RELA	elf.h	333;"	d
SHT_RELX	tcc.h	360;"	d
SHT_RELX	tcc.h	367;"	d
SHT_SHLIB	elf.h	339;"	d
SHT_STRTAB	elf.h	332;"	d
SHT_SUNW_COMDAT	elf.h	354;"	d
SHT_SUNW_move	elf.h	353;"	d
SHT_SUNW_syminfo	elf.h	355;"	d
SHT_SYMTAB	elf.h	331;"	d
SHT_SYMTAB_SHNDX	elf.h	345;"	d
SIGN	lib/libtcc1.c	58;"	d	file:
SIGNBIT	lib/libtcc1.c	56;"	d	file:
SIGND	lib/libtcc1.c	67;"	d	file:
SIGNLD	lib/libtcc1.c	77;"	d	file:
STATIC_DATA_WANTED	tccgen.c	55;"	d	file:
STB_GLOBAL	elf.h	458;"	d
STB_GNU_UNIQUE	elf.h	462;"	d
STB_HIOS	elf.h	463;"	d
STB_HIPROC	elf.h	465;"	d
STB_LOCAL	elf.h	457;"	d
STB_LOOS	elf.h	461;"	d
STB_LOPROC	elf.h	464;"	d
STB_MIPS_SPLIT_COMMON	elf.h	1485;"	d
STB_NUM	elf.h	460;"	d
STB_WEAK	elf.h	459;"	d
STN_UNDEF	elf.h	488;"	d
STO_ALPHA_NOPV	elf.h	1969;"	d
STO_ALPHA_STD_GPLOAD	elf.h	1970;"	d
STO_MIPS_DEFAULT	elf.h	1477;"	d
STO_MIPS_HIDDEN	elf.h	1479;"	d
STO_MIPS_INTERNAL	elf.h	1478;"	d
STO_MIPS_PLT	elf.h	1481;"	d
STO_MIPS_PROTECTED	elf.h	1480;"	d
STO_MIPS_SC_ALIGN_UNUSED	elf.h	1482;"	d
STRING_MAX_SIZE	tcc.h	385;"	d
STRIP_yes	Makefile	/^STRIP_yes = -s$/;"	m
STT_ARM_16BIT	elf.h	2313;"	d
STT_ARM_TFUNC	elf.h	2312;"	d
STT_COMMON	elf.h	474;"	d
STT_FILE	elf.h	473;"	d
STT_FUNC	elf.h	471;"	d
STT_GNU_IFUNC	elf.h	478;"	d
STT_HIOS	elf.h	479;"	d
STT_HIPROC	elf.h	481;"	d
STT_HP_OPAQUE	elf.h	1801;"	d
STT_HP_STUB	elf.h	1802;"	d
STT_LOOS	elf.h	477;"	d
STT_LOPROC	elf.h	480;"	d
STT_NOTYPE	elf.h	469;"	d
STT_NUM	elf.h	476;"	d
STT_OBJECT	elf.h	470;"	d
STT_PARISC_MILLICODE	elf.h	1799;"	d
STT_SECTION	elf.h	472;"	d
STT_SPARC_REGISTER	elf.h	1257;"	d
STT_TLS	elf.h	475;"	d
STV_DEFAULT	elf.h	499;"	d
STV_HIDDEN	elf.h	501;"	d
STV_INTERNAL	elf.h	500;"	d
STV_PROTECTED	elf.h	502;"	d
ST_ASM_SET	tcc.h	1632;"	d
ST_DATA	tcc.h	1667;"	d
ST_DATA	tcc.h	1669;"	d
ST_DATA	tcc.h	1671;"	d
ST_DATA	tcc.h	307;"	d
ST_DATA	tcc.h	311;"	d
ST_FUNC	tcc.h	306;"	d
ST_FUNC	tcc.h	310;"	d
ST_INLN	tcc.h	305;"	d
ST_INLN	tcc.h	309;"	d
ST_PE_EXPORT	tcc.h	1627;"	d
ST_PE_IMPORT	tcc.h	1628;"	d
ST_PE_STDCALL	tcc.h	1629;"	d
SValue	tcc.h	/^typedef struct SValue {$/;"	s
SValue	tcc.h	/^} SValue;$/;"	t	typeref:struct:SValue
SYMINFO_BT_LOWRESERVE	elf.h	430;"	d
SYMINFO_BT_PARENT	elf.h	429;"	d
SYMINFO_BT_SELF	elf.h	428;"	d
SYMINFO_CURRENT	elf.h	440;"	d
SYMINFO_FLG_COPY	elf.h	435;"	d
SYMINFO_FLG_DIRECT	elf.h	433;"	d
SYMINFO_FLG_LAZYLOAD	elf.h	436;"	d
SYMINFO_FLG_PASSTHRU	elf.h	434;"	d
SYMINFO_NONE	elf.h	439;"	d
SYMINFO_NUM	elf.h	441;"	d
SYM_FIELD	tcc.h	536;"	d
SYM_FIRST_ANOM	tcc.h	537;"	d
SYM_POOL_NB	tcc.h	1285;"	d
SYM_STRUCT	tcc.h	535;"	d
Section	tcc.h	/^typedef struct Section {$/;"	s
Section	tcc.h	/^} Section;$/;"	t	typeref:struct:Section
SectionMergeInfo	tccelf.c	/^typedef struct SectionMergeInfo {$/;"	s	file:
SectionMergeInfo	tccelf.c	/^} SectionMergeInfo;$/;"	t	typeref:struct:SectionMergeInfo	file:
Stab_Sym	tcc.h	/^} Stab_Sym;$/;"	t	typeref:struct:__anon63
Sym	tcc.h	/^typedef struct Sym {$/;"	s
Sym	tcc.h	/^} Sym;$/;"	t	typeref:struct:Sym
SymAttr	tcc.h	/^struct SymAttr {$/;"	s
T	Makefile	/^T = $(or $(CROSS_TARGET),$(NATIVE_TARGET),unknown)$/;"	m
T	i386-asm.c	226;"	d	file:
T	lib/Makefile	/^T = $(or $(CROSS_TARGET),$(NATIVE_TARGET),unknown)$/;"	m
TAGFILES	Makefile	/^TAGFILES = *.[ch] include\/*.h lib\/*.[chS]$/;"	m
TAL_DEBUG	tccpp.c	127;"	d	file:
TAL_DEBUG_FILE_LEN	tccpp.c	132;"	d	file:
TAL_DEBUG_PARAMS	tccpp.c	125;"	d	file:
TAL_DEBUG_PARAMS	tccpp.c	131;"	d	file:
TARGET_DEFS_ONLY	tcc.h	321;"	d
TARGET_DEFS_ONLY	tcc.h	351;"	d
TCC	Makefile	/^TCC = $(TOP)\/tcc$(EXESUF) $(TCCFLAGS)$/;"	m
TCC-VERSION	Makefile	/^TCC-VERSION = tcc-$(VERSION)$/;"	m
TCCDOCS	Makefile	/^TCCDOCS = tcc.1 tcc-doc.html tcc-doc.info$/;"	m
TCCFLAGS	Makefile	/^TCCFLAGS = $(TCCFLAGS$(CFGWIN))$/;"	m
TCCFLAGS-unx	Makefile	/^TCCFLAGS-unx = -B$(TOP) -I$(TOPSRC)\/include -I$(TOPSRC) -I$(TOP)$/;"	m
TCCFLAGS-win	Makefile	/^TCCFLAGS-win = -B$(TOPSRC)\/win32 -I$(TOPSRC)\/include -I$(TOPSRC) -I$(TOP) -L$(TOP)$/;"	m
TCCLIBS	Makefile	/^TCCLIBS = $(LIBTCC1) $(LIBTCC) $(LIBTCCDEF)$/;"	m
TCCOption	libtcc.c	/^typedef struct TCCOption {$/;"	s	file:
TCCOption	libtcc.c	/^} TCCOption;$/;"	t	typeref:struct:TCCOption	file:
TCCSYM	tccrun.c	820;"	d	file:
TCCSYM	tccrun.c	825;"	d	file:
TCCState	libtcc.h	/^typedef struct TCCState TCCState;$/;"	t	typeref:struct:TCCState
TCCState	tcc.h	/^struct TCCState {$/;"	s
TCCSyms	tccrun.c	/^typedef struct TCCSyms {$/;"	s	file:
TCCSyms	tccrun.c	/^} TCCSyms;$/;"	t	typeref:struct:TCCSyms	file:
TCC_ARM_EABI	tcc.h	147;"	d
TCC_ARM_HARDFLOAT	tcc.h	148;"	d
TCC_FILES	Makefile	/^    TCC_FILES = $(X)tcc.o $(LIBTCC_OBJ)$/;"	m
TCC_FILES	Makefile	/^    TCC_FILES = $(X)tcc.o$/;"	m
TCC_IS_NATIVE	tcc.h	162;"	d
TCC_IS_NATIVE	tcc.h	164;"	d
TCC_IS_NATIVE	tcc.h	166;"	d
TCC_IS_NATIVE	tcc.h	168;"	d
TCC_IS_NATIVE_387	tccgen.c	122;"	d	file:
TCC_LIBGCC	tcc.h	285;"	d
TCC_LIBTCC1	tcc.h	280;"	d
TCC_OPTION_B	libtcc.c	/^    TCC_OPTION_B,$/;"	e	enum:__anon54	file:
TCC_OPTION_D	libtcc.c	/^    TCC_OPTION_D,$/;"	e	enum:__anon54	file:
TCC_OPTION_E	libtcc.c	/^    TCC_OPTION_E,$/;"	e	enum:__anon54	file:
TCC_OPTION_HAS_ARG	libtcc.c	1495;"	d	file:
TCC_OPTION_HELP	libtcc.c	/^    TCC_OPTION_HELP,$/;"	e	enum:__anon54	file:
TCC_OPTION_HELP2	libtcc.c	/^    TCC_OPTION_HELP2,$/;"	e	enum:__anon54	file:
TCC_OPTION_I	libtcc.c	/^    TCC_OPTION_I,$/;"	e	enum:__anon54	file:
TCC_OPTION_L	libtcc.c	/^    TCC_OPTION_L,$/;"	e	enum:__anon54	file:
TCC_OPTION_MD	libtcc.c	/^    TCC_OPTION_MD,$/;"	e	enum:__anon54	file:
TCC_OPTION_MF	libtcc.c	/^    TCC_OPTION_MF,$/;"	e	enum:__anon54	file:
TCC_OPTION_NOSEP	libtcc.c	1496;"	d	file:
TCC_OPTION_O	libtcc.c	/^    TCC_OPTION_O,$/;"	e	enum:__anon54	file:
TCC_OPTION_P	libtcc.c	/^    TCC_OPTION_P,$/;"	e	enum:__anon54	file:
TCC_OPTION_U	libtcc.c	/^    TCC_OPTION_U,$/;"	e	enum:__anon54	file:
TCC_OPTION_W	libtcc.c	/^    TCC_OPTION_W,$/;"	e	enum:__anon54	file:
TCC_OPTION_Wl	libtcc.c	/^    TCC_OPTION_Wl,$/;"	e	enum:__anon54	file:
TCC_OPTION_Wp	libtcc.c	/^    TCC_OPTION_Wp,$/;"	e	enum:__anon54	file:
TCC_OPTION_ar	libtcc.c	/^    TCC_OPTION_ar,$/;"	e	enum:__anon54	file:
TCC_OPTION_b	libtcc.c	/^    TCC_OPTION_b,$/;"	e	enum:__anon54	file:
TCC_OPTION_bench	libtcc.c	/^    TCC_OPTION_bench,$/;"	e	enum:__anon54	file:
TCC_OPTION_bt	libtcc.c	/^    TCC_OPTION_bt,$/;"	e	enum:__anon54	file:
TCC_OPTION_c	libtcc.c	/^    TCC_OPTION_c,$/;"	e	enum:__anon54	file:
TCC_OPTION_d	libtcc.c	/^    TCC_OPTION_d,$/;"	e	enum:__anon54	file:
TCC_OPTION_dumpversion	libtcc.c	/^    TCC_OPTION_dumpversion,$/;"	e	enum:__anon54	file:
TCC_OPTION_f	libtcc.c	/^    TCC_OPTION_f,$/;"	e	enum:__anon54	file:
TCC_OPTION_g	libtcc.c	/^    TCC_OPTION_g,$/;"	e	enum:__anon54	file:
TCC_OPTION_impdef	libtcc.c	/^    TCC_OPTION_impdef$/;"	e	enum:__anon54	file:
TCC_OPTION_include	libtcc.c	/^    TCC_OPTION_include,$/;"	e	enum:__anon54	file:
TCC_OPTION_isystem	libtcc.c	/^    TCC_OPTION_isystem,$/;"	e	enum:__anon54	file:
TCC_OPTION_iwithprefix	libtcc.c	/^    TCC_OPTION_iwithprefix,$/;"	e	enum:__anon54	file:
TCC_OPTION_l	libtcc.c	/^    TCC_OPTION_l,$/;"	e	enum:__anon54	file:
TCC_OPTION_m	libtcc.c	/^    TCC_OPTION_m,$/;"	e	enum:__anon54	file:
TCC_OPTION_mfloat_abi	libtcc.c	/^    TCC_OPTION_mfloat_abi,$/;"	e	enum:__anon54	file:
TCC_OPTION_nostdinc	libtcc.c	/^    TCC_OPTION_nostdinc,$/;"	e	enum:__anon54	file:
TCC_OPTION_nostdlib	libtcc.c	/^    TCC_OPTION_nostdlib,$/;"	e	enum:__anon54	file:
TCC_OPTION_o	libtcc.c	/^    TCC_OPTION_o,$/;"	e	enum:__anon54	file:
TCC_OPTION_param	libtcc.c	/^    TCC_OPTION_param,$/;"	e	enum:__anon54	file:
TCC_OPTION_pedantic	libtcc.c	/^    TCC_OPTION_pedantic,$/;"	e	enum:__anon54	file:
TCC_OPTION_pipe	libtcc.c	/^    TCC_OPTION_pipe,$/;"	e	enum:__anon54	file:
TCC_OPTION_print_search_dirs	libtcc.c	/^    TCC_OPTION_print_search_dirs,$/;"	e	enum:__anon54	file:
TCC_OPTION_pthread	libtcc.c	/^    TCC_OPTION_pthread,$/;"	e	enum:__anon54	file:
TCC_OPTION_r	libtcc.c	/^    TCC_OPTION_r,$/;"	e	enum:__anon54	file:
TCC_OPTION_rdynamic	libtcc.c	/^    TCC_OPTION_rdynamic,$/;"	e	enum:__anon54	file:
TCC_OPTION_run	libtcc.c	/^    TCC_OPTION_run,$/;"	e	enum:__anon54	file:
TCC_OPTION_s	libtcc.c	/^    TCC_OPTION_s,$/;"	e	enum:__anon54	file:
TCC_OPTION_shared	libtcc.c	/^    TCC_OPTION_shared,$/;"	e	enum:__anon54	file:
TCC_OPTION_soname	libtcc.c	/^    TCC_OPTION_soname,$/;"	e	enum:__anon54	file:
TCC_OPTION_static	libtcc.c	/^    TCC_OPTION_static,$/;"	e	enum:__anon54	file:
TCC_OPTION_std	libtcc.c	/^    TCC_OPTION_std,$/;"	e	enum:__anon54	file:
TCC_OPTION_traditional	libtcc.c	/^    TCC_OPTION_traditional,$/;"	e	enum:__anon54	file:
TCC_OPTION_v	libtcc.c	/^    TCC_OPTION_v,$/;"	e	enum:__anon54	file:
TCC_OPTION_w	libtcc.c	/^    TCC_OPTION_w,$/;"	e	enum:__anon54	file:
TCC_OPTION_x	libtcc.c	/^    TCC_OPTION_x,$/;"	e	enum:__anon54	file:
TCC_OUTPUT_DLL	libtcc.h	63;"	d
TCC_OUTPUT_EXE	libtcc.h	62;"	d
TCC_OUTPUT_FORMAT_BINARY	tcc.h	1370;"	d
TCC_OUTPUT_FORMAT_COFF	tcc.h	1371;"	d
TCC_OUTPUT_FORMAT_ELF	tcc.h	1369;"	d
TCC_OUTPUT_MEMORY	libtcc.h	61;"	d
TCC_OUTPUT_OBJ	libtcc.h	64;"	d
TCC_OUTPUT_PREPROCESS	libtcc.h	65;"	d
TCC_RELOCATE_AUTO	libtcc.h	91;"	d
TCC_TARGET_ARM	tcc.h	146;"	d
TCC_TARGET_ARM64	tcc.h	150;"	d
TCC_TARGET_COFF	tcc.h	345;"	d
TCC_TARGET_I386	tcc.h	152;"	d
TCC_TARGET_PE	tcc.h	155;"	d
TCC_TARGET_X86_64	tcc.h	144;"	d
TCC_X	Makefile	/^TCC_X = i386 x86_64 i386-win32 x86_64-win32 x86_64-osx arm arm64 arm-wince c67$/;"	m
TOKSTR_MAX_SIZE	tcc.h	386;"	d
TOKSTR_TAL_LIMIT	tccpp.c	139;"	d	file:
TOKSTR_TAL_SIZE	tccpp.c	136;"	d	file:
TOKSYM_TAL_LIMIT	tccpp.c	138;"	d	file:
TOKSYM_TAL_SIZE	tccpp.c	135;"	d	file:
TOK_ADDC1	tcc.h	963;"	d
TOK_ADDC2	tcc.h	964;"	d
TOK_ALLOC_INCR	tcc.h	390;"	d
TOK_ARROW	tcc.h	967;"	d
TOK_ASMDIR_FIRST	tcc.h	1001;"	d
TOK_ASMDIR_LAST	tcc.h	1002;"	d
TOK_ASM_alllast	i386-asm.c	28;"	d	file:
TOK_ASM_first	i386-asm.c	26;"	d	file:
TOK_ASM_int	tcc.h	999;"	d
TOK_ASM_last	i386-asm.c	27;"	d	file:
TOK_A_ADD	tcc.h	984;"	d
TOK_A_AND	tcc.h	982;"	d
TOK_A_DIV	tcc.h	986;"	d
TOK_A_MOD	tcc.h	981;"	d
TOK_A_MUL	tcc.h	983;"	d
TOK_A_OR	tcc.h	988;"	d
TOK_A_SAR	tcc.h	990;"	d
TOK_A_SHL	tcc.h	989;"	d
TOK_A_SUB	tcc.h	985;"	d
TOK_A_XOR	tcc.h	987;"	d
TOK_CCHAR	tcc.h	945;"	d
TOK_CDOUBLE	tcc.h	954;"	d
TOK_CFLOAT	tcc.h	953;"	d
TOK_CINT	tcc.h	947;"	d
TOK_CLDOUBLE	tcc.h	955;"	d
TOK_CLLONG	tcc.h	949;"	d
TOK_CLONG	tcc.h	974;"	d
TOK_CUINT	tcc.h	948;"	d
TOK_CULLONG	tcc.h	950;"	d
TOK_CULONG	tcc.h	975;"	d
TOK_DEC	tcc.h	937;"	d
TOK_DOTS	tcc.h	968;"	d
TOK_EOF	tcc.h	992;"	d
TOK_EQ	tcc.h	924;"	d
TOK_FLAG_BOF	tcc.h	1216;"	d
TOK_FLAG_BOL	tcc.h	1215;"	d
TOK_FLAG_ENDIF	tcc.h	1217;"	d
TOK_FLAG_EOF	tcc.h	1218;"	d
TOK_GE	tcc.h	931;"	d
TOK_GET	tccpp.c	/^static inline void TOK_GET(int *t, const int **pp, CValue *cv)$/;"	f	file:
TOK_GT	tcc.h	933;"	d
TOK_HASH_FUNC	tccpp.c	444;"	d	file:
TOK_HASH_INIT	tccpp.c	443;"	d	file:
TOK_HASH_SIZE	tcc.h	389;"	d
TOK_IDENT	tcc.h	996;"	d
TOK_INC	tcc.h	939;"	d
TOK_LAND	tcc.h	935;"	d
TOK_LAST	tcc.h	/^    TOK_LAST = TOK_IDENT - 1$/;"	e	enum:tcc_token
TOK_LCHAR	tcc.h	946;"	d
TOK_LE	tcc.h	932;"	d
TOK_LINEFEED	tcc.h	993;"	d
TOK_LINENUM	tcc.h	958;"	d
TOK_LOR	tcc.h	936;"	d
TOK_LSTR	tcc.h	952;"	d
TOK_LT	tcc.h	930;"	d
TOK_MAX_SIZE	tcc.h	391;"	d
TOK_MID	tcc.h	938;"	d
TOK_NE	tcc.h	925;"	d
TOK_NOSUBST	tcc.h	972;"	d
TOK_Nclear	tcc.h	929;"	d
TOK_Nset	tcc.h	928;"	d
TOK_PDIV	tcc.h	942;"	d
TOK_PLCHLDR	tcc.h	971;"	d
TOK_PPJOIN	tcc.h	973;"	d
TOK_PPNUM	tcc.h	956;"	d
TOK_PPSTR	tcc.h	957;"	d
TOK_SAR	tcc.h	978;"	d
TOK_SHL	tcc.h	977;"	d
TOK_SHR	tcc.h	969;"	d
TOK_STR	tcc.h	951;"	d
TOK_SUBC1	tcc.h	965;"	d
TOK_SUBC2	tcc.h	966;"	d
TOK_TWODOTS	tcc.h	959;"	d
TOK_TWOSHARPS	tcc.h	970;"	d
TOK_UDIV	tcc.h	940;"	d
TOK_UGE	tcc.h	923;"	d
TOK_UGT	tcc.h	927;"	d
TOK_UIDENT	tcc.h	1091;"	d
TOK_ULE	tcc.h	926;"	d
TOK_ULT	tcc.h	922;"	d
TOK_UMOD	tcc.h	941;"	d
TOK_UMULL	tcc.h	962;"	d
TOP	Makefile	/^    TOP = .$/;"	m
TOP	lib/Makefile	/^TOP = ..$/;"	m
TREG_MEM	x86_64-gen.c	/^    TREG_MEM = 0x20$/;"	e	enum:__anon55	file:
TREG_R10	x86_64-gen.c	/^    TREG_R10 = 10,$/;"	e	enum:__anon55	file:
TREG_R11	x86_64-gen.c	/^    TREG_R11 = 11,$/;"	e	enum:__anon55	file:
TREG_R8	x86_64-gen.c	/^    TREG_R8  = 8,$/;"	e	enum:__anon55	file:
TREG_R9	x86_64-gen.c	/^    TREG_R9  = 9,$/;"	e	enum:__anon55	file:
TREG_RAX	x86_64-gen.c	/^    TREG_RAX = 0,$/;"	e	enum:__anon55	file:
TREG_RCX	x86_64-gen.c	/^    TREG_RCX = 1,$/;"	e	enum:__anon55	file:
TREG_RDI	x86_64-gen.c	/^    TREG_RDI = 7,$/;"	e	enum:__anon55	file:
TREG_RDX	x86_64-gen.c	/^    TREG_RDX = 2,$/;"	e	enum:__anon55	file:
TREG_RSI	x86_64-gen.c	/^    TREG_RSI = 6,$/;"	e	enum:__anon55	file:
TREG_RSP	x86_64-gen.c	/^    TREG_RSP = 4,$/;"	e	enum:__anon55	file:
TREG_ST0	x86_64-gen.c	/^    TREG_ST0 = 24,$/;"	e	enum:__anon55	file:
TREG_XAX	i386-asm.c	140;"	d	file:
TREG_XAX	i386-asm.c	144;"	d	file:
TREG_XCX	i386-asm.c	141;"	d	file:
TREG_XCX	i386-asm.c	145;"	d	file:
TREG_XDX	i386-asm.c	142;"	d	file:
TREG_XDX	i386-asm.c	146;"	d	file:
TREG_XMM0	x86_64-gen.c	/^    TREG_XMM0 = 16,$/;"	e	enum:__anon55	file:
TREG_XMM1	x86_64-gen.c	/^    TREG_XMM1 = 17,$/;"	e	enum:__anon55	file:
TREG_XMM2	x86_64-gen.c	/^    TREG_XMM2 = 18,$/;"	e	enum:__anon55	file:
TREG_XMM3	x86_64-gen.c	/^    TREG_XMM3 = 19,$/;"	e	enum:__anon55	file:
TREG_XMM4	x86_64-gen.c	/^    TREG_XMM4 = 20,$/;"	e	enum:__anon55	file:
TREG_XMM5	x86_64-gen.c	/^    TREG_XMM5 = 21,$/;"	e	enum:__anon55	file:
TREG_XMM6	x86_64-gen.c	/^    TREG_XMM6 = 22,$/;"	e	enum:__anon55	file:
TREG_XMM7	x86_64-gen.c	/^    TREG_XMM7 = 23,$/;"	e	enum:__anon55	file:
TRIPLET	conftest.c	39;"	d	file:
TRIPLET	conftest.c	41;"	d	file:
TRIPLET	conftest.c	43;"	d	file:
TRIPLET_ABI	conftest.c	30;"	d	file:
TRIPLET_ABI	conftest.c	32;"	d	file:
TRIPLET_ABI	conftest.c	35;"	d	file:
TRIPLET_ARCH	conftest.c	11;"	d	file:
TRIPLET_ARCH	conftest.c	13;"	d	file:
TRIPLET_ARCH	conftest.c	5;"	d	file:
TRIPLET_ARCH	conftest.c	7;"	d	file:
TRIPLET_ARCH	conftest.c	9;"	d	file:
TRIPLET_OS	conftest.c	18;"	d	file:
TRIPLET_OS	conftest.c	20;"	d	file:
TRIPLET_OS	conftest.c	22;"	d	file:
TRIPLET_OS	conftest.c	24;"	d	file:
TYPE_ABSTRACT	tcc.h	562;"	d
TYPE_DIRECT	tcc.h	563;"	d
TinyAlloc	tccpp.c	/^typedef struct TinyAlloc {$/;"	s	file:
TinyAlloc	tccpp.c	/^} TinyAlloc;$/;"	t	typeref:struct:TinyAlloc	file:
TokenString	tcc.h	/^typedef struct TokenString {$/;"	s
TokenString	tcc.h	/^} TokenString;$/;"	t	typeref:struct:TokenString
TokenSym	tcc.h	/^typedef struct TokenSym {$/;"	s
TokenSym	tcc.h	/^} TokenSym;$/;"	t	typeref:struct:TokenSym
UDWtype	lib/libtcc1.c	/^typedef unsigned long long UDWtype;$/;"	t	file:
UINT_MAX	lib/armeabi.c	25;"	d	file:
ULLONG_MAX	lib/armeabi.c	31;"	d	file:
ULONG_MAX	lib/armeabi.c	28;"	d	file:
USE_TAL	tccpp.c	114;"	d	file:
USE_TRIPLET	tcc.h	192;"	d
USE_TRIPLET	tcc.h	195;"	d
USItype	lib/libtcc1.c	/^typedef unsigned int USItype;$/;"	t	file:
UWtype	lib/libtcc1.c	/^typedef unsigned int UWtype;$/;"	t	file:
VER_DEF_CURRENT	elf.h	861;"	d
VER_DEF_NONE	elf.h	860;"	d
VER_DEF_NUM	elf.h	862;"	d
VER_FLG_BASE	elf.h	865;"	d
VER_FLG_WEAK	elf.h	866;"	d
VER_FLG_WEAK	elf.h	945;"	d
VER_NDX_ELIMINATE	elf.h	872;"	d
VER_NDX_GLOBAL	elf.h	870;"	d
VER_NDX_LOCAL	elf.h	869;"	d
VER_NDX_LORESERVE	elf.h	871;"	d
VER_NEED_CURRENT	elf.h	918;"	d
VER_NEED_NONE	elf.h	917;"	d
VER_NEED_NUM	elf.h	919;"	d
VPATH	Makefile	/^VPATH = $(TOPSRC)$/;"	m
VPATH	lib/Makefile	/^VPATH = $(TOPSRC)\/lib $(TOPSRC)\/win32\/lib$/;"	m
VSTACK_SIZE	tcc.h	384;"	d
VT_ARRAY	tcc.h	884;"	d
VT_ASM	tcc.h	916;"	d
VT_BITFIELD	tcc.h	885;"	d
VT_BOOL	tcc.h	878;"	d
VT_BOUNDED	tcc.h	858;"	d
VT_BTYPE	tcc.h	866;"	d
VT_BYTE	tcc.h	868;"	d
VT_CMP	tcc.h	849;"	d
VT_CONST	tcc.h	846;"	d
VT_CONSTANT	tcc.h	886;"	d
VT_DEFSIGN	tcc.h	883;"	d
VT_DOUBLE	tcc.h	876;"	d
VT_ENUM	tcc.h	904;"	d
VT_ENUM_VAL	tcc.h	905;"	d
VT_EXTERN	tcc.h	892;"	d
VT_FLOAT	tcc.h	875;"	d
VT_FUNC	tcc.h	873;"	d
VT_INLINE	tcc.h	895;"	d
VT_INT	tcc.h	870;"	d
VT_JMP	tcc.h	850;"	d
VT_JMPI	tcc.h	851;"	d
VT_LDOUBLE	tcc.h	877;"	d
VT_LLOCAL	tcc.h	847;"	d
VT_LLONG	tcc.h	871;"	d
VT_LOCAL	tcc.h	848;"	d
VT_LONG	tcc.h	889;"	d
VT_LVAL	tcc.h	852;"	d
VT_LVAL_BYTE	tcc.h	860;"	d
VT_LVAL_SHORT	tcc.h	861;"	d
VT_LVAL_TYPE	tcc.h	863;"	d
VT_LVAL_UNSIGNED	tcc.h	862;"	d
VT_MUSTBOUND	tcc.h	856;"	d
VT_MUSTCAST	tcc.h	854;"	d
VT_PTR	tcc.h	872;"	d
VT_QFLOAT	tcc.h	880;"	d
VT_QLONG	tcc.h	879;"	d
VT_SHORT	tcc.h	869;"	d
VT_STATIC	tcc.h	893;"	d
VT_STORAGE	tcc.h	912;"	d
VT_STRUCT	tcc.h	874;"	d
VT_STRUCT_MASK	tcc.h	899;"	d
VT_STRUCT_SHIFT	tcc.h	898;"	d
VT_SYM	tcc.h	853;"	d
VT_TYPE	tcc.h	913;"	d
VT_TYPEDEF	tcc.h	894;"	d
VT_UNION	tcc.h	903;"	d
VT_UNSIGNED	tcc.h	882;"	d
VT_VALMASK	tcc.h	845;"	d
VT_VLA	tcc.h	888;"	d
VT_VOID	tcc.h	867;"	d
VT_VOLATILE	tcc.h	887;"	d
WD_ALL	libtcc.c	1196;"	d	file:
WIN_O	lib/Makefile	/^WIN_O = crt1.o crt1w.o wincrt1.o wincrt1w.o dllcrt1.o dllmain.o$/;"	m
WORD_SIZE	lib/libtcc1.c	51;"	d	file:
W_TYPE_SIZE	lib/libtcc1.c	31;"	d	file:
Wtype	lib/libtcc1.c	/^typedef int Wtype;$/;"	t	file:
X	Makefile	/^X = $(if $(CROSS_TARGET),$(CROSS_TARGET)-)$/;"	m
X	lib/Makefile	/^X = $(if $(CROSS_TARGET),$(CROSS_TARGET)-)$/;"	m
X86_64_Mode	x86_64-gen.c	/^typedef enum X86_64_Mode {$/;"	g	file:
X86_64_Mode	x86_64-gen.c	/^} X86_64_Mode;$/;"	t	typeref:enum:X86_64_Mode	file:
X86_64_O	lib/Makefile	/^X86_64_O = libtcc1.o alloca86_64.o alloca86_64-bt.o$/;"	m
XAR	lib/Makefile	/^ XAR = $(AR)$/;"	m
XAR	lib/Makefile	/^XAR = $(XTCC) -ar$/;"	m
XCC	lib/Makefile	/^ XCC = $(CC)$/;"	m
XCC	lib/Makefile	/^XCC = $(XTCC)$/;"	m
XCFG	lib/Makefile	/^XCFG = $(or $(findstring -win,$T),-unx)$/;"	m
XFLAGS	lib/Makefile	/^ XFLAGS = $(CFLAGS) -fPIC$/;"	m
XFLAGS	lib/Makefile	/^XFLAGS = $(XFLAGS$(XCFG))$/;"	m
XFLAGS-unx	lib/Makefile	/^XFLAGS-unx = -B$(TOPSRC)$/;"	m
XFLAGS-win	lib/Makefile	/^XFLAGS-win = -B$(TOPSRC)\/win32 -I$(TOPSRC)\/include$/;"	m
XFtype	lib/libtcc1.c	/^typedef long double XFtype;$/;"	t	file:
XTCC	Makefile	/^XTCC ?= .\/tcc$(EXESUF)$/;"	m
XTCC	lib/Makefile	/^XTCC ?= $(TOP)\/$(X)tcc$(EXESUF)$/;"	m
_CRT_glob	conftest.c	/^int _CRT_glob = 0;$/;"	v
_CRT_glob	tcctools.c	/^int _CRT_glob = 1;$/;"	v
_ELF_H	elf.h	20;"	d
_FLOAT_H_	include/float.h	2;"	d
_GNU_SOURCE	lib/armflush.c	36;"	d	file:
_GNU_SOURCE	tcc.h	24;"	d
_STDARG_H	include/stdarg.h	2;"	d
_STDBOOL_H	include/stdbool.h	2;"	d
_STDDEF_H	include/stddef.h	2;"	d
_TCC_H	tcc.h	22;"	d
_VARARGS_H	include/varargs.h	7;"	d
_VA_LIST_DEFINED	include/stdarg.h	77;"	d
_VA_LIST_T	include/stdarg.h	31;"	d
_WINT_T	include/stddef.h	50;"	d
__AEABI_XDIVMOD	lib/armeabi.c	375;"	d	file:
__AEABI_XL2D	lib/armeabi.c	263;"	d	file:
__ARM_NR_BASE	lib/armflush.c	31;"	d	file:
__ARM_NR_cacheflush	lib/armflush.c	32;"	d	file:
__NR_SYSCALL_BASE	lib/armflush.c	27;"	d	file:
__NR_SYSCALL_BASE	lib/armflush.c	29;"	d	file:
__addtf3	lib/lib-arm64.c	/^long double __addtf3(long double a, long double b)$/;"	f
__aeabi_idiv	lib/armeabi.c	/^int __aeabi_idiv(int numerator, int denominator)$/;"	f
__aeabi_lasr	lib/armeabi.c	/^void __aeabi_lasr(unsigned_int_struct val, int shift)$/;"	f
__aeabi_llsl	lib/armeabi.c	/^void __aeabi_llsl(double_unsigned_struct val, int shift)$/;"	f
__aeabi_llsr	lib/armeabi.c	/^void __aeabi_llsr(double_unsigned_struct val, int shift)$/;"	f
__aeabi_uidiv	lib/armeabi.c	/^unsigned __aeabi_uidiv(unsigned num, unsigned den)$/;"	f
__aeabi_uidivmod	lib/armeabi.c	/^void __aeabi_uidivmod(unsigned num, unsigned den)$/;"	f
__ashldi3	lib/libtcc1.c	/^long long __ashldi3(long long a, int b)$/;"	f
__ashrdi3	lib/libtcc1.c	/^long long __ashrdi3(long long a, int b)$/;"	f
__attribute__	lib/bcheck.c	99;"	d	file:
__bool_true_false_are_defined	include/stdbool.h	9;"	d
__bound_alloca	lib/alloca86-bt.S	/^__bound_alloca:$/;"	l
__bound_alloca	lib/alloca86_64-bt.S	/^__bound_alloca:$/;"	l
__bound_calloc	lib/bcheck.c	/^void *__bound_calloc(size_t nmemb, size_t size)$/;"	f
__bound_check	lib/bcheck.c	/^static void __bound_check(const void *p, size_t size)$/;"	f	file:
__bound_delete_region	lib/bcheck.c	/^int __bound_delete_region(void *p)$/;"	f
__bound_empty_t2	lib/bcheck.c	/^static BoundEntry *__bound_empty_t2;   \/* empty page, for unused pages *\/$/;"	v	file:
__bound_error_msg	lib/bcheck.c	/^const char *__bound_error_msg;$/;"	v
__bound_exit	lib/bcheck.c	/^void __bound_exit(void)$/;"	f
__bound_find_region	lib/bcheck.c	/^static BoundEntry *__bound_find_region(BoundEntry *e1, void *p)$/;"	f	file:
__bound_free	lib/bcheck.c	/^void __bound_free(void *ptr, const void *caller)$/;"	f
__bound_init	lib/bcheck.c	/^void __bound_init(void)$/;"	f
__bound_invalid_t2	lib/bcheck.c	/^static BoundEntry *__bound_invalid_t2; \/* invalid page, for invalid pointers *\/$/;"	v	file:
__bound_local_delete	lib/bcheck.c	/^void FASTCALL __bound_local_delete(void *p1) $/;"	f
__bound_local_new	lib/bcheck.c	/^void FASTCALL __bound_local_new(void *p1) $/;"	f
__bound_main_arg	lib/bcheck.c	/^void __bound_main_arg(void **p)$/;"	f
__bound_malloc	lib/bcheck.c	/^void *__bound_malloc(size_t size, const void *caller)$/;"	f
__bound_memalign	lib/bcheck.c	/^void *__bound_memalign(size_t size, size_t align, const void *caller)$/;"	f
__bound_memcpy	lib/bcheck.c	/^void *__bound_memcpy(void *dst, const void *src, size_t size)$/;"	f
__bound_memmove	lib/bcheck.c	/^void *__bound_memmove(void *dst, const void *src, size_t size)$/;"	f
__bound_memset	lib/bcheck.c	/^void *__bound_memset(void *dst, int c, size_t size)$/;"	f
__bound_new_page	lib/bcheck.c	/^static BoundEntry *__bound_new_page(void)$/;"	f	file:
__bound_new_region	lib/bcheck.c	/^void __bound_new_region(void *p, size_t size)$/;"	f
__bound_ptr_add	lib/bcheck.c	/^void * FASTCALL __bound_ptr_add(void *p, size_t offset)$/;"	f
__bound_realloc	lib/bcheck.c	/^void *__bound_realloc(void *ptr, size_t size, const void *caller)$/;"	f
__bound_strcpy	lib/bcheck.c	/^char *__bound_strcpy(char *dst, const char *src)$/;"	f
__bound_strlen	lib/bcheck.c	/^int __bound_strlen(const char *s)$/;"	f
__bound_t1	lib/bcheck.c	/^static BoundEntry **__bound_t1; \/* page table *\/$/;"	v	file:
__bound_t1	lib/bcheck.c	/^static BoundEntry *__bound_t1[BOUND_T1_SIZE]; \/* page table *\/$/;"	v	file:
__clear_cache	lib/armflush.c	/^void __clear_cache(void *beginning, void *end)$/;"	f
__clear_cache	lib/lib-arm64.c	/^void __clear_cache(void *beg, void *end)$/;"	f
__divdi3	lib/libtcc1.c	/^long long __divdi3(long long u, long long v)$/;"	f
__divtf3	lib/lib-arm64.c	/^long double __divtf3(long double fa, long double fb)$/;"	f
__eqtf2	lib/lib-arm64.c	/^int __eqtf2(long double a, long double b)$/;"	f
__extenddftf2	lib/lib-arm64.c	/^long double __extenddftf2(double f)$/;"	f
__extendsftf2	lib/lib-arm64.c	/^long double __extendsftf2(float f)$/;"	f
__fixdfdi	lib/libtcc1.c	/^long long __fixdfdi (double a1)$/;"	f
__fixsfdi	lib/libtcc1.c	/^long long __fixsfdi (float a1)$/;"	f
__fixtfdi	lib/lib-arm64.c	/^int64_t __fixtfdi(long double fa)$/;"	f
__fixtfsi	lib/lib-arm64.c	/^int32_t __fixtfsi(long double fa)$/;"	f
__fixunsdfdi	lib/libtcc1.c	/^unsigned long long __fixunsdfdi (double a1)$/;"	f
__fixunssfdi	lib/libtcc1.c	/^unsigned long long __fixunssfdi (float a1)$/;"	f
__fixunstfdi	lib/lib-arm64.c	/^uint64_t __fixunstfdi(long double fa)$/;"	f
__fixunstfsi	lib/lib-arm64.c	/^uint32_t __fixunstfsi(long double fa)$/;"	f
__fixunsxfdi	lib/libtcc1.c	/^unsigned long long __fixunsxfdi (long double a1)$/;"	f
__fixxfdi	lib/libtcc1.c	/^long long __fixxfdi (long double a1)$/;"	f
__floatditf	lib/lib-arm64.c	/^long double __floatditf(int64_t a)$/;"	f
__floatsitf	lib/lib-arm64.c	/^long double __floatsitf(int32_t a)$/;"	f
__floatundidf	lib/libtcc1.c	/^double __floatundidf(unsigned long long a)$/;"	f
__floatundisf	lib/libtcc1.c	/^float __floatundisf(unsigned long long a)$/;"	f
__floatunditf	lib/lib-arm64.c	/^long double __floatunditf(uint64_t a)$/;"	f
__floatundixf	lib/libtcc1.c	/^long double __floatundixf(unsigned long long a)$/;"	f
__floatunsitf	lib/lib-arm64.c	/^long double __floatunsitf(uint32_t a)$/;"	f
__getf2	lib/lib-arm64.c	/^int __getf2(long double a, long double b)$/;"	f
__gnuc_va_list	include/stdarg.h	/^typedef va_list __gnuc_va_list;$/;"	t
__gr_offs	include/stdarg.h	/^    int   __gr_offs;$/;"	m	struct:__anon11
__gr_top	include/stdarg.h	/^    void *__gr_top;$/;"	m	struct:__anon11
__gttf2	lib/lib-arm64.c	/^int __gttf2(long double a, long double b)$/;"	f
__int8_t_defined	elf.h	26;"	d
__int8_t_defined	include/stddef.h	12;"	d
__letf2	lib/lib-arm64.c	/^int __letf2(long double a, long double b)$/;"	f
__lshrdi3	lib/libtcc1.c	/^unsigned long long __lshrdi3(unsigned long long a, int b)$/;"	f
__lttf2	lib/lib-arm64.c	/^int __lttf2(long double a, long double b)$/;"	f
__moddi3	lib/libtcc1.c	/^long long __moddi3(long long u, long long v)$/;"	f
__multf3	lib/lib-arm64.c	/^long double __multf3(long double fa, long double fb)$/;"	f
__need_wint_t	include/stddef.h	53;"	d
__negdi2	lib/libtcc1.c	364;"	d	file:
__netf2	lib/lib-arm64.c	/^int __netf2(long double a, long double b)$/;"	f
__stack	include/stdarg.h	/^    void *__stack;$/;"	m	struct:__anon11
__subtf3	lib/lib-arm64.c	/^long double __subtf3(long double a, long double b)$/;"	f
__sym_malloc	tccgen.c	/^static Sym *__sym_malloc(void)$/;"	f	file:
__trunctfdf2	lib/lib-arm64.c	/^double __trunctfdf2(long double f)$/;"	f
__trunctfsf2	lib/lib-arm64.c	/^float __trunctfsf2(long double f)$/;"	f
__udivdi3	lib/libtcc1.c	/^unsigned long long __udivdi3(unsigned long long u, unsigned long long v)$/;"	f
__udivmoddi4	lib/libtcc1.c	/^static UDWtype __udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	f	file:
__umoddi3	lib/libtcc1.c	/^unsigned long long __umoddi3(unsigned long long u, unsigned long long v)$/;"	f
__va_arg	lib/va_list.c	/^void *__va_arg(__va_list_struct *ap,$/;"	f
__va_arg_type	lib/va_list.c	/^enum __va_arg_type {$/;"	g	file:
__va_float_reg	lib/va_list.c	/^    __va_gen_reg, __va_float_reg, __va_stack$/;"	e	enum:__va_arg_type	file:
__va_gen_reg	lib/va_list.c	/^    __va_gen_reg, __va_float_reg, __va_stack$/;"	e	enum:__va_arg_type	file:
__va_list_struct	include/stdarg.h	/^} __va_list_struct;$/;"	t	typeref:struct:__anon9
__va_list_struct	lib/va_list.c	/^} __va_list_struct;$/;"	t	typeref:struct:__anon7	file:
__va_stack	lib/va_list.c	/^    __va_gen_reg, __va_float_reg, __va_stack$/;"	e	enum:__va_arg_type	file:
__va_start	lib/va_list.c	/^void __va_start(__va_list_struct *ap, void *fp)$/;"	f
__vr_offs	include/stdarg.h	/^    int   __vr_offs;$/;"	m	struct:__anon11
__vr_top	include/stdarg.h	/^    void *__vr_top;$/;"	m	struct:__anon11
__vstack	tcc.h	/^ST_DATA SValue __vstack[1+\/*to make bcheck happy*\/ VSTACK_SIZE], *vtop, *pvtop;$/;"	v
__vstack	tccgen.c	/^ST_DATA SValue __vstack[1+VSTACK_SIZE], *vtop, *pvtop;$/;"	v
_dowildcard	tcctools.c	/^int _dowildcard = 1;$/;"	v
_tcc_align	include/stdarg.h	45;"	d
_tcc_alignof	include/stdarg.h	44;"	d
a	tcc.h	/^    struct SymAttr a; \/* symbol attributes *\/$/;"	m	struct:Sym	typeref:struct:Sym::SymAttr
a	tcc.h	/^    struct SymAttr a;$/;"	m	struct:AttributeDef	typeref:struct:AttributeDef::SymAttr
a_type	elf.h	/^  uint32_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon38
a_type	elf.h	/^  uint64_t a_type;		\/* Entry type *\/$/;"	m	struct:__anon40
a_un	elf.h	/^    } a_un;$/;"	m	struct:__anon38	typeref:union:__anon38::__anon39
a_un	elf.h	/^    } a_un;$/;"	m	struct:__anon40	typeref:union:__anon40::__anon41
a_val	elf.h	/^      uint32_t a_val;		\/* Integer value *\/$/;"	m	union:__anon38::__anon39
a_val	elf.h	/^      uint64_t a_val;		\/* Integer value *\/$/;"	m	union:__anon40::__anon41
ab_month_name	tccpp.c	/^static char const ab_month_name[12][4] =$/;"	v	file:
add32le	tcc.h	/^static inline void add32le(unsigned char *p, int32_t x) {$/;"	f
add64le	tcc.h	/^static inline void add64le(unsigned char *p, int64_t x) {$/;"	f
add_char	tccpp.c	/^static void add_char(CString *cstr, int c)$/;"	f	file:
add_footnote	texi2pod.pl	/^sub add_footnote$/;"	s
add_init_array_defines	tccelf.c	/^static void add_init_array_defines(TCCState *s1, const char *section_name)$/;"	f	file:
add_region	lib/bcheck.c	/^static inline void add_region(BoundEntry *e, $/;"	f	file:
addr_t	tcc.h	371;"	d
adjust_bf	tccgen.c	/^static int adjust_bf(SValue *sv, int bit_pos, int bit_size)$/;"	f	file:
aeabi_lsr	lib/armeabi.c	441;"	d	file:
alacarte	tcc.h	/^    char alacarte;$/;"	m	struct:filespec
alacarte_link	tcc.h	/^    int alacarte_link; \/* if true, only link in referenced objects from archive *\/$/;"	m	struct:TCCState
alias_target	tcc.h	/^    int alias_target; \/* token *\/$/;"	m	struct:AttributeDef
aligned	tcc.h	/^    aligned     : 5, \/* alignment as log2+1 (0 == unspecified) *\/$/;"	m	struct:SymAttr
alloc	tcc.h	/^    char alloc;$/;"	m	struct:TokenString
alloc_sec_names	tccelf.c	/^static int alloc_sec_names(TCCState *s1, int file_type, Section *strsec)$/;"	f	file:
alloca	lib/alloca-arm.S	/^alloca:$/;"	l
alloca	lib/alloca86.S	/^alloca:$/;"	l
alloca	lib/alloca86_64.S	/^alloca:$/;"	l
allocated_len	tcc.h	/^    int allocated_len;$/;"	m	struct:TokenString
anon_sym	tcc.h	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
anon_sym	tccgen.c	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
ar_date	tccelf.c	/^    char ar_date[12];           \/* file mtime *\/$/;"	m	struct:ArchiveHeader	file:
ar_date	tcctools.c	/^    char ar_date[12];$/;"	m	struct:__anon56	file:
ar_fmag	tccelf.c	/^    char ar_fmag[2];            \/* should contain ARFMAG *\/$/;"	m	struct:ArchiveHeader	file:
ar_fmag	tcctools.c	/^    char ar_fmag[2];$/;"	m	struct:__anon56	file:
ar_gid	tccelf.c	/^    char ar_gid[6];             \/* owner gid; printed as decimal *\/$/;"	m	struct:ArchiveHeader	file:
ar_gid	tcctools.c	/^    char ar_gid[6];$/;"	m	struct:__anon56	file:
ar_mode	tccelf.c	/^    char ar_mode[8];            \/* file mode, printed as octal   *\/$/;"	m	struct:ArchiveHeader	file:
ar_mode	tcctools.c	/^    char ar_mode[8];$/;"	m	struct:__anon56	file:
ar_name	tccelf.c	/^    char ar_name[16];           \/* name of this member *\/$/;"	m	struct:ArchiveHeader	file:
ar_name	tcctools.c	/^    char ar_name[16];$/;"	m	struct:__anon56	file:
ar_size	tccelf.c	/^    char ar_size[10];           \/* file size, printed as decimal *\/$/;"	m	struct:ArchiveHeader	file:
ar_size	tcctools.c	/^    char ar_size[10];$/;"	m	struct:__anon56	file:
ar_uid	tccelf.c	/^    char ar_uid[6];             \/* owner uid; printed as decimal *\/$/;"	m	struct:ArchiveHeader	file:
ar_uid	tcctools.c	/^    char ar_uid[6];$/;"	m	struct:__anon56	file:
ar_usage	tcctools.c	/^static int ar_usage(int ret) {$/;"	f	file:
arg_prepare_reg	x86_64-gen.c	/^static int arg_prepare_reg(int idx) {$/;"	f	file:
arg_regs	x86_64-gen.c	/^static const uint8_t arg_regs[REGN] = {$/;"	v	file:
argc	tcc.h	/^    int argc;$/;"	m	struct:TCCState
args_parser_add_file	libtcc.c	/^static void args_parser_add_file(TCCState *s, const char* filename, int filetype)$/;"	f	file:
args_parser_listfile	libtcc.c	/^static void args_parser_listfile(TCCState *s,$/;"	f	file:
args_parser_make_argv	libtcc.c	/^static int args_parser_make_argv(const char *r, int *argc, char ***argv)$/;"	f	file:
argv	tcc.h	/^    char **argv;$/;"	m	struct:TCCState
arm-libtcc1-usegcc	lib/Makefile	/^arm-libtcc1-usegcc ?= no$/;"	m
arm-wince_FILES	Makefile	/^arm-wince_FILES = $(arm_FILES) tccpe.c$/;"	m
arm64_FILES	Makefile	/^arm64_FILES = $(CORE_FILES) arm64-gen.c arm64-link.c$/;"	m
arm_FILES	Makefile	/^arm_FILES = $(CORE_FILES) arm-gen.c arm-link.c arm-asm.c$/;"	m
asm_clobber	i386-asm.c	/^ST_FUNC void asm_clobber(uint8_t *clobber_regs, const char *str)$/;"	f
asm_compute_constraints	i386-asm.c	/^ST_FUNC void asm_compute_constraints(ASMOperand *operands,$/;"	f
asm_expr	tccasm.c	/^ST_FUNC void asm_expr(TCCState *s1, ExprValue *pe)$/;"	f
asm_expr_cmp	tccasm.c	/^static inline void asm_expr_cmp(TCCState *s1, ExprValue *pe)$/;"	f	file:
asm_expr_logic	tccasm.c	/^static void asm_expr_logic(TCCState *s1, ExprValue *pe)$/;"	f	file:
asm_expr_prod	tccasm.c	/^static void asm_expr_prod(TCCState *s1, ExprValue *pe)$/;"	f	file:
asm_expr_sum	tccasm.c	/^static inline void asm_expr_sum(TCCState *s1, ExprValue *pe)$/;"	f	file:
asm_expr_unary	tccasm.c	/^static void asm_expr_unary(TCCState *s1, ExprValue *pe)$/;"	f	file:
asm_gen_code	i386-asm.c	/^ST_FUNC void asm_gen_code(ASMOperand *operands, int nb_operands,$/;"	f
asm_get_local_label_name	tccasm.c	/^ST_FUNC int asm_get_local_label_name(TCCState *s1, unsigned int n)$/;"	f
asm_global_instr	libtcc.c	/^ST_FUNC void asm_global_instr(void)$/;"	f
asm_global_instr	tccasm.c	/^ST_FUNC void asm_global_instr(void)$/;"	f
asm_instr	libtcc.c	/^ST_FUNC void asm_instr(void)$/;"	f
asm_instr	tccasm.c	/^ST_FUNC void asm_instr(void)$/;"	f
asm_instrs	i386-asm.c	/^static const ASMInstr asm_instrs[] = {$/;"	v	file:
asm_int_expr	tccasm.c	/^ST_FUNC int asm_int_expr(TCCState *s1)$/;"	f
asm_label	tcc.h	/^        int asm_label; \/* associated asm label *\/$/;"	m	union:Sym::__anon61
asm_label	tcc.h	/^    int asm_label; \/* associated asm label *\/$/;"	m	struct:AttributeDef
asm_label_find	tccasm.c	/^static Sym *asm_label_find(int v)$/;"	f	file:
asm_label_instr	tccgen.c	/^static int asm_label_instr(void)$/;"	f	file:
asm_label_push	tccasm.c	/^static Sym *asm_label_push(int v)$/;"	f	file:
asm_modrm	i386-asm.c	/^static inline int asm_modrm(int reg, Operand *op)$/;"	f	file:
asm_new_label	tccasm.c	/^static Sym* asm_new_label(TCCState *s1, int label, int is_local)$/;"	f	file:
asm_new_label1	tccasm.c	/^static Sym* asm_new_label1(TCCState *s1, int label, int is_local,$/;"	f	file:
asm_opcode	i386-asm.c	/^ST_FUNC void asm_opcode(TCCState *s1, int opcode)$/;"	f
asm_parse_directive	tccasm.c	/^static void asm_parse_directive(TCCState *s1, int global)$/;"	f	file:
asm_parse_numeric_reg	i386-asm.c	/^static int asm_parse_numeric_reg(int t, unsigned int *type)$/;"	f	file:
asm_parse_reg	i386-asm.c	/^static int asm_parse_reg(unsigned int *type)$/;"	f	file:
asm_parse_regvar	i386-asm.c	/^ST_FUNC int asm_parse_regvar (int t)$/;"	f
asm_rex	i386-asm.c	/^static void asm_rex(int width64, Operand *ops, int nb_ops, int *op_type,$/;"	f	file:
asm_section_sym	tccasm.c	/^static Sym* asm_section_sym(TCCState *s1, Section *sec)$/;"	f	file:
asm_str	tcc.h	/^    char asm_str[16]; \/* computed asm string for operand *\/$/;"	m	struct:ASMOperand
attr_mode	tcc.h	/^    char attr_mode; \/* __attribute__((__mode__(...))) *\/$/;"	m	struct:AttributeDef
auxtype	tcc.h	/^                int auxtype; \/* bitfield access type *\/$/;"	m	union:Sym::__anon58::__anon59::__anon60
barrier	lib/bcheck.c	733;"	d	file:
begin_macro	tccpp.c	/^ST_FUNC void begin_macro(TokenString *str, int alloc)$/;"	f
bind_exe_dynsyms	tccelf.c	/^static void bind_exe_dynsyms(TCCState *s1)$/;"	f	file:
bind_libs_dynsyms	tccelf.c	/^static void bind_libs_dynsyms(TCCState *s1)$/;"	f	file:
block	tccgen.c	/^static void block(int *bsym, int *csym, int is_expr)$/;"	f	file:
bn_lshift	tccpp.c	/^static void bn_lshift(unsigned int *bn, int shift, int or_val)$/;"	f	file:
bn_zero	tccpp.c	/^static void bn_zero(unsigned int *bn)$/;"	f	file:
bool	include/stdbool.h	6;"	d
bound_alloc_error	lib/bcheck.c	/^static void bound_alloc_error(void)$/;"	f	file:
bound_error	lib/bcheck.c	/^static void bound_error(const char *fmt, ...)$/;"	f	file:
bound_free_entry	lib/bcheck.c	/^static void bound_free_entry(BoundEntry *e)$/;"	f	file:
bound_new_entry	lib/bcheck.c	/^static BoundEntry *bound_new_entry(void)$/;"	f	file:
bounds_section	tcc.h	/^	ST_DATA Section *bounds_section; \/* contains global data bound description *\/$/;"	v
bounds_section	tccelf.c	/^ST_DATA Section *bounds_section; \/* contains global data bound description *\/$/;"	v
bss_addr	tccelf.c	/^    addr_t bss_addr;$/;"	m	struct:dyn_inf	file:
bss_section	tcc.h	/^ST_DATA Section *text_section, *data_section, *bss_section; \/* predefined sections *\/$/;"	v
bss_section	tccelf.c	/^ST_DATA Section *text_section, *data_section, *bss_section; \/* predefined sections *\/$/;"	v
bss_size	tccelf.c	/^    addr_t bss_size;$/;"	m	struct:dyn_inf	file:
buf_end	tcc.h	/^    uint8_t *buf_end;$/;"	m	struct:BufferedFile
buf_ptr	tcc.h	/^    uint8_t *buf_ptr;$/;"	m	struct:BufferedFile
buffer	tcc.h	/^    unsigned char buffer[1]; \/* extra size for CH_EOB char *\/$/;"	m	struct:BufferedFile
buffer	tccpp.c	/^    uint8_t *buffer;$/;"	m	struct:TinyAlloc	file:
build_got	tccelf.c	/^static void build_got(TCCState *s1)$/;"	f	file:
build_got_entries	tccelf.c	/^ST_FUNC void build_got_entries(TCCState *s1)$/;"	f
c	tcc.h	/^            int c; \/* associated number or Elf symbol index *\/$/;"	m	struct:Sym::__anon58::__anon59
c	tcc.h	/^    CValue c;              \/* constant, if VT_CONST *\/$/;"	m	struct:SValue
c67_FILES	Makefile	/^c67_FILES = $(CORE_FILES) c67-gen.c c67-link.c tcccoff.c$/;"	m
cached_includes	tcc.h	/^    CachedInclude **cached_includes;$/;"	m	struct:TCCState
cached_includes_hash	tcc.h	/^    int cached_includes_hash[CACHED_INCLUDES_HASH_SIZE];$/;"	m	struct:TCCState
case_cmp	tccgen.c	/^static int case_cmp(const void *pa, const void *pb)$/;"	f	file:
case_t	tccgen.c	/^    struct case_t {$/;"	s	struct:switch_t	file:
ch	tcc.h	/^ST_DATA int ch, tok;$/;"	v
ch	tccpp.c	/^ST_DATA int ch, tok;$/;"	v
char_is_unsigned	tcc.h	/^    int char_is_unsigned;$/;"	m	struct:TCCState
char_pointer_type	tcc.h	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type;$/;"	v
char_pointer_type	tccgen.c	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type, ptrdiff_type;$/;"	v
check_comparison_pointer_types	tccgen.c	/^static void check_comparison_pointer_types(SValue *p1, SValue *p2, int op)$/;"	f	file:
check_space	tccpp.c	/^static inline int check_space(int t, int *spc) $/;"	f	file:
check_vstack	tccgen.c	/^ST_FUNC void check_vstack(void)$/;"	f
cinp	tccpp.c	833;"	d	file:
classify_x86_64_arg	x86_64-gen.c	/^static X86_64_Mode classify_x86_64_arg(CType *ty, CType *ret, int *psize, int *palign, int *reg_count)$/;"	f	file:
classify_x86_64_inner	x86_64-gen.c	/^static X86_64_Mode classify_x86_64_inner(CType *ty)$/;"	f	file:
classify_x86_64_merge	x86_64-gen.c	/^static X86_64_Mode classify_x86_64_merge(X86_64_Mode a, X86_64_Mode b)$/;"	f	file:
classify_x86_64_va_arg	x86_64-gen.c	/^ST_FUNC int classify_x86_64_va_arg(CType *ty)$/;"	f
cmd_include_files	tcc.h	/^    char **cmd_include_files;$/;"	m	struct:TCCState
code_reloc	x86_64-link.c	/^int code_reloc (int reloc_type)$/;"	f
common_section	tcc.h	/^ST_DATA Section *common_section;$/;"	v
common_section	tccelf.c	/^ST_DATA Section *common_section;$/;"	v
compare_types	tccgen.c	/^static int compare_types(CType *type1, CType *type2, int unqualified)$/;"	f	file:
condition_3way	tccgen.c	/^static int condition_3way(void)$/;"	f	file:
const_wanted	tcc.h	/^ST_DATA int const_wanted; \/* true if constant wanted *\/$/;"	v
const_wanted	tccgen.c	/^ST_DATA int const_wanted; \/* true if constant wanted *\/$/;"	v
constraint	tcc.h	/^    char *constraint;$/;"	m	struct:ASMOperand
constraint_priority	i386-asm.c	/^static inline int constraint_priority(const char *str)$/;"	f	file:
contains_any	tcctools.c	/^static int contains_any(const char *s, const char *list) {$/;"	f	file:
convert_parameter_type	tccgen.c	/^static inline void convert_parameter_type(CType *pt)$/;"	f	file:
copy_linker_arg	libtcc.c	/^static void copy_linker_arg(char **pp, const char *s, int sep)$/;"	f	file:
count_leading_zeros	lib/libtcc1.c	135;"	d	file:
countof	tcc.h	96;"	d
cpu_exception_handler	tccrun.c	/^static long __stdcall cpu_exception_handler(EXCEPTION_POINTERS *ex_info)$/;"	f	file:
create_plt_entry	x86_64-link.c	/^ST_FUNC unsigned create_plt_entry(TCCState *s1, unsigned got_offset, struct sym_attr *attr)$/;"	f
crt_paths	tcc.h	/^    char **crt_paths;$/;"	m	struct:TCCState
cstr_alloc	tccpp.c	/^static struct TinyAlloc *cstr_alloc;$/;"	v	typeref:struct:TinyAlloc	file:
cstr_buf	tccpp.c	/^static CString cstr_buf;$/;"	v	file:
cstr_cat	tccpp.c	/^ST_FUNC void cstr_cat(CString *cstr, const char *str, int len)$/;"	f
cstr_ccat	tccpp.c	/^ST_INLN void cstr_ccat(CString *cstr, int ch)$/;"	f
cstr_free	tccpp.c	/^ST_FUNC void cstr_free(CString *cstr)$/;"	f
cstr_new	tccpp.c	/^ST_FUNC void cstr_new(CString *cstr)$/;"	f
cstr_realloc	tccpp.c	/^static void cstr_realloc(CString *cstr, int new_size)$/;"	f	file:
cstr_reset	tccpp.c	/^ST_FUNC void cstr_reset(CString *cstr)$/;"	f
cstr_wccat	tccpp.c	/^ST_FUNC void cstr_wccat(CString *cstr, int ch)$/;"	f
cur_switch	tccgen.c	/^} *cur_switch; \/* current switch *\/$/;"	v	typeref:struct:switch_t
cur_text_section	tcc.h	/^ST_DATA Section *cur_text_section; \/* current section where function code is generated *\/$/;"	v
cur_text_section	tccelf.c	/^ST_DATA Section *cur_text_section; \/* current section where function code is generated *\/$/;"	v
d	lib/libtcc1.c	/^    double d;$/;"	m	union:double_long	file:
d	tcc.h	/^        int *d; \/* define token stream *\/$/;"	m	union:Sym::__anon58
d	tcc.h	/^    double d;$/;"	m	union:CValue
d_ptr	elf.h	/^      Elf32_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon26::__anon27
d_ptr	elf.h	/^      Elf64_Addr d_ptr;			\/* Address value *\/$/;"	m	union:__anon28::__anon29
d_tag	elf.h	/^  Elf32_Sword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon26
d_tag	elf.h	/^  Elf64_Sxword	d_tag;			\/* Dynamic entry type *\/$/;"	m	struct:__anon28
d_un	elf.h	/^    } d_un;$/;"	m	struct:__anon26	typeref:union:__anon26::__anon27
d_un	elf.h	/^    } d_un;$/;"	m	struct:__anon28	typeref:union:__anon28::__anon29
d_val	elf.h	/^      Elf32_Word d_val;			\/* Integer value *\/$/;"	m	union:__anon26::__anon27
d_val	elf.h	/^      Elf64_Xword d_val;		\/* Integer value *\/$/;"	m	union:__anon28::__anon29
data	tcc.h	/^        const void *data;$/;"	m	struct:CValue::__anon57
data	tcc.h	/^    unsigned char *data;       \/* section data *\/$/;"	m	struct:Section
data	tcc.h	/^    void *data; \/* either 'char *' or 'nwchar_t *' *\/$/;"	m	struct:CString
data_allocated	tcc.h	/^    unsigned long data_allocated; \/* used for realloc() handling *\/$/;"	m	struct:Section
data_offset	tcc.h	/^    unsigned long data_offset; \/* current data offset *\/$/;"	m	struct:Section
data_offset	tccelf.c	/^    unsigned long data_offset;$/;"	m	struct:dyn_inf	file:
data_section	tcc.h	/^ST_DATA Section *text_section, *data_section, *bss_section; \/* predefined sections *\/$/;"	v
data_section	tccelf.c	/^ST_DATA Section *text_section, *data_section, *bss_section; \/* predefined sections *\/$/;"	v
decl	tccgen.c	/^static void decl(int l)$/;"	f	file:
decl0	tccgen.c	/^static int decl0(int l, int is_for_loop_init, Sym *func_sym)$/;"	f	file:
decl_designator	tccgen.c	/^static int decl_designator(CType *type, Section *sec, unsigned long c,$/;"	f	file:
decl_initializer	tccgen.c	/^static void decl_initializer(CType *type, Section *sec, unsigned long c, $/;"	f	file:
decl_initializer_alloc	tccgen.c	/^static void decl_initializer_alloc(CType *type, AttributeDef *ad, int r, $/;"	f	file:
def_sym	tccgen.c	/^    int def_sym; \/* default symbol *\/$/;"	m	struct:switch_t	file:
default_outputfile	tcc.c	/^static char *default_outputfile(TCCState *s, const char *first_file)$/;"	f	file:
define_aeabi_xdivmod_signed_type	lib/armeabi.c	/^define_aeabi_xdivmod_signed_type(int, idiv_t);$/;"	v
define_aeabi_xdivmod_signed_type	lib/armeabi.c	340;"	d	file:
define_aeabi_xdivmod_unsigned_type	lib/armeabi.c	346;"	d	file:
define_find	tccpp.c	/^ST_INLN Sym *define_find(int v)$/;"	f
define_print	tccpp.c	/^static void define_print(TCCState *s1, int v)$/;"	f	file:
define_push	tccpp.c	/^ST_INLN void define_push(int v, int macro_type, int *str, Sym *first_arg)$/;"	f
define_stack	tcc.h	/^ST_DATA Sym *define_stack;$/;"	v
define_stack	tccgen.c	/^ST_DATA Sym *define_stack;$/;"	v
define_undef	tccpp.c	/^ST_FUNC void define_undef(Sym *s)$/;"	f
delete_region	lib/bcheck.c	/^static inline void delete_region(BoundEntry *e, void *p, size_t empty_size)$/;"	f	file:
deps_outfile	tcc.h	/^    char *deps_outfile; \/* option -MF *\/$/;"	m	struct:TCCState
dflag	tcc.h	/^    char dflag; \/* -dX value *\/$/;"	m	struct:TCCState
dlclose	tccrun.c	/^ST_FUNC void dlclose(void *p)$/;"	f
dlerror	tccrun.c	/^ST_FUNC const char *dlerror(void)$/;"	f
dllexport	tcc.h	/^    dllexport   : 1,$/;"	m	struct:SymAttr
dllimport	tcc.h	/^    dllimport   : 1,$/;"	m	struct:SymAttr
dlopen	tccrun.c	/^ST_FUNC void *dlopen(const char *filename, int flag)$/;"	f
dlsym	tccrun.c	/^ST_FUNC void *dlsym(void *handle, const char *symbol)$/;"	f
do_bench	tcc.h	/^    int do_bench; \/* option -bench *\/$/;"	m	struct:TCCState
do_bounds_check	tcc.h	/^    int do_bounds_check;$/;"	m	struct:TCCState
do_debug	tcc.h	/^    int do_debug;$/;"	m	struct:TCCState
dollars_in_identifiers	tcc.h	/^    int dollars_in_identifiers;	\/* allows '$' char in identifiers *\/$/;"	m	struct:TCCState
double_long	lib/libtcc1.c	/^union double_long {$/;"	u	file:
double_unsigned_struct	lib/armeabi.c	/^typedef struct double_unsigned_struct {$/;"	s	file:
double_unsigned_struct	lib/armeabi.c	/^} double_unsigned_struct;$/;"	t	typeref:struct:double_unsigned_struct	file:
dprintf	lib/bcheck.c	40;"	d	file:
dprintf	lib/bcheck.c	42;"	d	file:
dyn_index	tcc.h	/^    int dyn_index;$/;"	m	struct:sym_attr
dyn_inf	tccelf.c	/^struct dyn_inf {$/;"	s	file:
dynamic	tccelf.c	/^    Section *dynamic;$/;"	m	struct:dyn_inf	file:
dynarray_add	libtcc.c	/^ST_FUNC void dynarray_add(void *ptab, int *nb_ptr, void *data)$/;"	f
dynarray_reset	libtcc.c	/^ST_FUNC void dynarray_reset(void *pp, int *n)$/;"	f
dynstr	tccelf.c	/^    Section *dynstr;$/;"	m	struct:dyn_inf	file:
dynsym	tcc.h	/^    Section *dynsym;$/;"	m	struct:TCCState
dynsymtab_section	tcc.h	/^    Section *dynsymtab_section;$/;"	m	struct:TCCState
e	i386-asm.c	/^    ExprValue e;$/;"	m	struct:Operand	file:
e_ehsize	elf.h	/^  Elf32_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon12
e_ehsize	elf.h	/^  Elf64_Half	e_ehsize;		\/* ELF header size in bytes *\/$/;"	m	struct:__anon13
e_entry	elf.h	/^  Elf32_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon12
e_entry	elf.h	/^  Elf64_Addr	e_entry;		\/* Entry point virtual address *\/$/;"	m	struct:__anon13
e_flags	elf.h	/^  Elf32_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon12
e_flags	elf.h	/^  Elf64_Word	e_flags;		\/* Processor-specific flags *\/$/;"	m	struct:__anon13
e_ident	elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon12
e_ident	elf.h	/^  unsigned char	e_ident[EI_NIDENT];	\/* Magic number and other info *\/$/;"	m	struct:__anon13
e_machine	elf.h	/^  Elf32_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon12
e_machine	elf.h	/^  Elf64_Half	e_machine;		\/* Architecture *\/$/;"	m	struct:__anon13
e_phentsize	elf.h	/^  Elf32_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon12
e_phentsize	elf.h	/^  Elf64_Half	e_phentsize;		\/* Program header table entry size *\/$/;"	m	struct:__anon13
e_phnum	elf.h	/^  Elf32_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon12
e_phnum	elf.h	/^  Elf64_Half	e_phnum;		\/* Program header table entry count *\/$/;"	m	struct:__anon13
e_phoff	elf.h	/^  Elf32_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon12
e_phoff	elf.h	/^  Elf64_Off	e_phoff;		\/* Program header table file offset *\/$/;"	m	struct:__anon13
e_shentsize	elf.h	/^  Elf32_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon12
e_shentsize	elf.h	/^  Elf64_Half	e_shentsize;		\/* Section header table entry size *\/$/;"	m	struct:__anon13
e_shnum	elf.h	/^  Elf32_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon12
e_shnum	elf.h	/^  Elf64_Half	e_shnum;		\/* Section header table entry count *\/$/;"	m	struct:__anon13
e_shoff	elf.h	/^  Elf32_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon12
e_shoff	elf.h	/^  Elf64_Off	e_shoff;		\/* Section header table file offset *\/$/;"	m	struct:__anon13
e_shstrndx	elf.h	/^  Elf32_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon12
e_shstrndx	elf.h	/^  Elf64_Half	e_shstrndx;		\/* Section header string table index *\/$/;"	m	struct:__anon13
e_type	elf.h	/^  Elf32_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon12
e_type	elf.h	/^  Elf64_Half	e_type;			\/* Object file type *\/$/;"	m	struct:__anon13
e_version	elf.h	/^  Elf32_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon12
e_version	elf.h	/^  Elf64_Word	e_version;		\/* Object file version *\/$/;"	m	struct:__anon13
elf_hash	tccelf.c	/^static unsigned long elf_hash(const unsigned char *name)$/;"	f	file:
elf_output_file	tccelf.c	/^static int elf_output_file(TCCState *s1, const char *filename)$/;"	f	file:
elfsym	tccgen.c	/^ST_FUNC ElfSym *elfsym(Sym *s)$/;"	f
enable_new_dtags	tcc.h	/^    int enable_new_dtags; \/* ditto, (-Wl,--enable-new-dtags) *\/$/;"	m	struct:TCCState
end_macro	tccpp.c	/^ST_FUNC void end_macro(void)$/;"	f
enum_val	tcc.h	/^        long long enum_val; \/* enum constant if IS_ENUM_VAL *\/$/;"	m	union:Sym::__anon58
error1	libtcc.c	/^static void error1(TCCState *s1, int is_warning, const char *fmt, va_list ap)$/;"	f	file:
error_func	tcc.h	/^    void (*error_func)(void *opaque, const char *msg);$/;"	m	struct:TCCState
error_jmp_buf	tcc.h	/^    jmp_buf error_jmp_buf;$/;"	m	struct:TCCState
error_opaque	tcc.h	/^    void *error_opaque;$/;"	m	struct:TCCState
error_set_jmp_enabled	tcc.h	/^    int error_set_jmp_enabled;$/;"	m	struct:TCCState
exact_log2p1	tccgen.c	/^static int exact_log2p1(int i)$/;"	f	file:
execvp	tcctools.c	479;"	d	file:
execvp_win32	tcctools.c	/^static int execvp_win32(const char *prog, char **argv)$/;"	f	file:
expect	tccpp.c	/^ST_FUNC void expect(const char *msg)$/;"	f
export_global_syms	tccelf.c	/^static void export_global_syms(TCCState *s1)$/;"	f	file:
expr_and	tccgen.c	/^static void expr_and(void)$/;"	f	file:
expr_cmp	tccgen.c	/^static void expr_cmp(void)$/;"	f	file:
expr_cmpeq	tccgen.c	/^static void expr_cmpeq(void)$/;"	f	file:
expr_cond	tccgen.c	/^static void expr_cond(void)$/;"	f	file:
expr_const	tccgen.c	/^ST_FUNC int expr_const(void)$/;"	f
expr_const1	tccgen.c	/^static void expr_const1(void)$/;"	f	file:
expr_const64	tccgen.c	/^static inline int64_t expr_const64(void)$/;"	f	file:
expr_eq	tccgen.c	/^static void expr_eq(void)$/;"	f	file:
expr_land	tccgen.c	/^static void expr_land(void)$/;"	f	file:
expr_lor	tccgen.c	/^static void expr_lor(void)$/;"	f	file:
expr_or	tccgen.c	/^static void expr_or(void)$/;"	f	file:
expr_preprocess	tccpp.c	/^static int expr_preprocess(void)$/;"	f	file:
expr_prod	tccgen.c	/^ST_FUNC void expr_prod(void)$/;"	f
expr_shift	tccgen.c	/^static void expr_shift(void)$/;"	f	file:
expr_sum	tccgen.c	/^ST_FUNC void expr_sum(void)$/;"	f
expr_type	tccgen.c	/^static void expr_type(CType *type, void (*expr_fn)(void))$/;"	f	file:
expr_xor	tccgen.c	/^static void expr_xor(void)$/;"	f	file:
external_global_sym	tccgen.c	/^ST_FUNC Sym *external_global_sym(int v, CType *type, int r)$/;"	f
external_sym	tccgen.c	/^static Sym *external_sym(int v, CType *type, int r, AttributeDef *ad)$/;"	f	file:
f	lib/libtcc1.c	/^    float f;$/;"	m	union:float_long	file:
f	tcc.h	/^                struct FuncAttr f; \/* function attributes *\/$/;"	m	union:Sym::__anon58::__anon59::__anon60	typeref:struct:Sym::__anon58::__anon59::__anon60::FuncAttr
f	tcc.h	/^    float f;$/;"	m	union:CValue
f	tcc.h	/^    struct FuncAttr f;$/;"	m	struct:AttributeDef	typeref:struct:AttributeDef::FuncAttr
f3_NaN	lib/lib-arm64.c	/^static long double f3_NaN(void)$/;"	f	file:
f3_add	lib/lib-arm64.c	/^static long double f3_add(long double fa, long double fb, int neg)$/;"	f	file:
f3_cmp	lib/lib-arm64.c	/^static int f3_cmp(long double fa, long double fb)$/;"	f	file:
f3_infinity	lib/lib-arm64.c	/^static long double f3_infinity(int sgn)$/;"	f	file:
f3_normalise	lib/lib-arm64.c	/^static u128_t f3_normalise(int32_t *exp, u128_t mnt)$/;"	f	file:
f3_round	lib/lib-arm64.c	/^static long double f3_round(int sgn, int32_t exp, u128_t x)$/;"	f	file:
f3_sticky_shift	lib/lib-arm64.c	/^static u128_t f3_sticky_shift(int32_t sh, u128_t x)$/;"	f	file:
f3_unpack	lib/lib-arm64.c	/^static void f3_unpack(int *sgn, int32_t *exp, u128_t *mnt, long double f)$/;"	f	file:
f3_zero	lib/lib-arm64.c	/^static long double f3_zero(int sgn)$/;"	f	file:
false	include/stdbool.h	8;"	d
fcho	configure	/^fcho() { if test -n "$2"; then echo "$1$2"; fi }$/;"	f
fd	tcc.h	/^    int fd;$/;"	m	struct:BufferedFile
file	tcc.h	/^ST_DATA struct BufferedFile *file;$/;"	v	typeref:struct:BufferedFile
file	tccpp.c	/^ST_DATA struct BufferedFile *file;$/;"	v	typeref:struct:BufferedFile
file_name	libtcc.c	/^    char file_name[MEM_DEBUG_FILE_LEN + 1];$/;"	m	struct:mem_debug_header	file:
file_name	tccpp.c	/^    char    file_name[TAL_DEBUG_FILE_LEN + 1];$/;"	m	struct:tal_header_t	file:
filename	tcc.h	/^    char filename[1024];    \/* filename *\/$/;"	m	struct:BufferedFile
filename	tcc.h	/^    char filename[1]; \/* path specified in #include *\/$/;"	m	struct:CachedInclude
filename	tcc.h	/^    char filename[1];$/;"	m	struct:InlineFunc
files	tcc.h	/^    struct filespec **files; \/* files seen on command line *\/$/;"	m	struct:TCCState	typeref:struct:TCCState::filespec
filespec	tcc.h	/^struct filespec {$/;"	s
filetype	tcc.h	/^    int filetype;$/;"	m	struct:TCCState
fill_dynamic	tccelf.c	/^static void fill_dynamic(TCCState *s1, struct dyn_inf *dyninf)$/;"	f	file:
fill_got	tccelf.c	/^ST_FUNC void fill_got(TCCState *s1)$/;"	f
fill_got_entry	tccelf.c	/^ST_FUNC void fill_got_entry(TCCState *s1, ElfW_Rel *rel)$/;"	f
fill_local_got_entries	tccelf.c	/^static void fill_local_got_entries(TCCState *s1)$/;"	f	file:
final_sections_reloc	tccelf.c	/^static int final_sections_reloc(TCCState *s1)$/;"	f	file:
find_constraint	tccasm.c	/^ST_FUNC int find_constraint(ASMOperand *operands, int nb_operands, $/;"	f
find_elf_sym	tccelf.c	/^ST_FUNC int find_elf_sym(Section *s, const char *name)$/;"	f
find_field	tccgen.c	/^static Sym * find_field (CType *type, int v)$/;"	f	file:
find_section	tccelf.c	/^ST_FUNC Section *find_section(TCCState *s1, const char *name)$/;"	f
fini_symbol	tcc.h	/^    char *fini_symbol; \/* symbols to call at unload-time (not used currently) *\/$/;"	m	struct:TCCState
flags	libtcc.c	/^    uint16_t flags;$/;"	m	struct:FlagDef	file:
flags	libtcc.c	/^    uint16_t flags;$/;"	m	struct:TCCOption	file:
float_abi	tcc.h	/^    enum float_abi float_abi; \/* float ABI of the generated code*\/$/;"	m	struct:TCCState	typeref:enum:TCCState::float_abi
float_long	lib/libtcc1.c	/^union float_long {$/;"	u	file:
fn_makelink	configure	/^fn_makelink()$/;"	f
for_each_elem	tccelf.c	711;"	d	file:
force_charshort_cast	tccgen.c	/^static void force_charshort_cast(int t)$/;"	f	file:
fp3_convert_NaN	lib/lib-arm64.c	/^static int fp3_convert_NaN(long double *f, int sgn, u128_t mnt)$/;"	f	file:
fp3_detect_NaNs	lib/lib-arm64.c	/^static int fp3_detect_NaNs(long double *f,$/;"	f	file:
fp_offset	include/stdarg.h	/^    unsigned int fp_offset;$/;"	m	struct:__anon9
fp_offset	lib/va_list.c	/^    unsigned int fp_offset;$/;"	m	struct:__anon7	file:
free	libtcc.c	200;"	d	file:
free	libtcc.c	403;"	d	file:
free	tcc.h	1128;"	d
free_defines	tccpp.c	/^ST_FUNC void free_defines(Sym *b)$/;"	f
free_inline_functions	tccgen.c	/^ST_FUNC void free_inline_functions(TCCState *s)$/;"	f
free_section	tccelf.c	/^static void free_section(Section *s)$/;"	f	file:
func_alloca	x86_64-gen.c	/^static int func_scratch, func_alloca;$/;"	v	file:
func_args	tcc.h	/^    func_args   : 8; \/* PE __stdcall args *\/$/;"	m	struct:FuncAttr
func_bound_ind	x86_64-gen.c	/^static unsigned long func_bound_ind;$/;"	v	file:
func_bound_offset	x86_64-gen.c	/^static addr_t func_bound_offset;$/;"	v	file:
func_call	tcc.h	/^    func_call   : 3, \/* calling convention (0..5), see below *\/$/;"	m	struct:FuncAttr
func_ind	tcc.h	/^ST_DATA int last_line_num, last_ind, func_ind; \/* debug last line number and pc *\/$/;"	v
func_ind	tccgen.c	/^ST_DATA int last_line_num, last_ind, func_ind; \/* debug last line number and pc *\/$/;"	v
func_old_type	tcc.h	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type;$/;"	v
func_old_type	tccgen.c	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type, ptrdiff_type;$/;"	v
func_ret_sub	x86_64-gen.c	/^static int func_ret_sub;$/;"	v	file:
func_scratch	x86_64-gen.c	/^static int func_scratch, func_alloca;$/;"	v	file:
func_str	tcc.h	/^    TokenString *func_str;$/;"	m	struct:InlineFunc
func_sub_sp_offset	x86_64-gen.c	/^static unsigned long func_sub_sp_offset;$/;"	v	file:
func_type	tcc.h	/^    func_type   : 2, \/* FUNC_OLD\/NEW\/ELLIPSIS *\/$/;"	m	struct:FuncAttr
func_var	tcc.h	/^ST_DATA int func_var; \/* true if current function is variadic *\/$/;"	v
func_var	tccgen.c	/^ST_DATA int func_var; \/* true if current function is variadic (used by return instruction) *\/$/;"	v
func_vc	tcc.h	/^ST_DATA int func_vc;$/;"	v
func_vc	tccgen.c	/^ST_DATA int func_vc;$/;"	v
func_vt	tcc.h	/^ST_DATA CType func_vt; \/* current function return type (used by return instruction) *\/$/;"	v
func_vt	tccgen.c	/^ST_DATA CType func_vt; \/* current function return type (used by return instruction) *\/$/;"	v
funcname	tcc.h	/^ST_DATA const char *funcname;$/;"	v
funcname	tccgen.c	/^ST_DATA const char *funcname;$/;"	v
g	x86_64-gen.c	/^ST_FUNC void g(int c)$/;"	f
g_debug	tcc.h	/^ST_DATA int g_debug;$/;"	v
g_debug	tccgen.c	/^ST_DATA int g_debug;$/;"	v
gadd_sp	x86_64-gen.c	/^static void gadd_sp(int val)$/;"	f	file:
gaddrof	tccgen.c	/^ST_FUNC void gaddrof(void)$/;"	f
gbound	tccgen.c	/^static void gbound(void)$/;"	f	file:
gcall_or_jmp	x86_64-gen.c	/^static void gcall_or_jmp(int is_jmp)$/;"	f	file:
gcase	tccgen.c	/^static void gcase(struct case_t **base, int len, int *bsym)$/;"	f	file:
gen_addr32	x86_64-gen.c	/^ST_FUNC void gen_addr32(int r, Sym *sym, int c)$/;"	f
gen_addr64	x86_64-gen.c	/^ST_FUNC void gen_addr64(int r, Sym *sym, int64_t c)$/;"	f
gen_addrpc32	x86_64-gen.c	/^ST_FUNC void gen_addrpc32(int r, Sym *sym, int c)$/;"	f
gen_assign_cast	tccgen.c	/^static void gen_assign_cast(CType *dt)$/;"	f	file:
gen_bounded_ptr_add	x86_64-gen.c	/^ST_FUNC void gen_bounded_ptr_add(void)$/;"	f
gen_bounded_ptr_deref	x86_64-gen.c	/^ST_FUNC void gen_bounded_ptr_deref(void)$/;"	f
gen_cast	tccgen.c	/^static void gen_cast(CType *type)$/;"	f	file:
gen_cast_s	tccgen.c	/^static void gen_cast_s(int t)$/;"	f	file:
gen_cvt_ftof	x86_64-gen.c	/^void gen_cvt_ftof(int t)$/;"	f
gen_cvt_ftoi	x86_64-gen.c	/^void gen_cvt_ftoi(int t)$/;"	f
gen_cvt_ftoi1	tccgen.c	/^static void gen_cvt_ftoi1(int t)$/;"	f	file:
gen_cvt_itof	x86_64-gen.c	/^void gen_cvt_itof(int t)$/;"	f
gen_cvt_itof1	tccgen.c	/^static void gen_cvt_itof1(int t)$/;"	f	file:
gen_deps	tcc.h	/^    int gen_deps; \/* option -MD  *\/$/;"	m	struct:TCCState
gen_disp32	i386-asm.c	/^static void gen_disp32(ExprValue *pe)$/;"	f	file:
gen_expr32	i386-asm.c	/^ST_FUNC void gen_expr32(ExprValue *pe)$/;"	f
gen_expr64	i386-asm.c	/^ST_FUNC void gen_expr64(ExprValue *pe)$/;"	f
gen_function	tccgen.c	/^static void gen_function(Sym *sym)$/;"	f	file:
gen_gotpcrel	x86_64-gen.c	/^static void gen_gotpcrel(int r, Sym *sym, int c)$/;"	f	file:
gen_inline_functions	tccgen.c	/^static void gen_inline_functions(TCCState *s)$/;"	f	file:
gen_le16	x86_64-gen.c	/^ST_FUNC void gen_le16(int v)$/;"	f
gen_le32	x86_64-gen.c	/^ST_FUNC void gen_le32(int c)$/;"	f
gen_le64	x86_64-gen.c	/^ST_FUNC void gen_le64(int64_t c)$/;"	f
gen_makedeps	tcctools.c	/^ST_FUNC void gen_makedeps(TCCState *s, const char *target, const char *filename)$/;"	f
gen_modrm	x86_64-gen.c	/^static void gen_modrm(int op_reg, int r, Sym *sym, int c)$/;"	f	file:
gen_modrm64	x86_64-gen.c	/^static void gen_modrm64(int opcode, int op_reg, int r, Sym *sym, int c)$/;"	f	file:
gen_modrm_impl	x86_64-gen.c	/^static void gen_modrm_impl(int op_reg, int r, Sym *sym, int c, int is_got)$/;"	f	file:
gen_offs_sp	x86_64-gen.c	/^static void gen_offs_sp(int b, int r, int d)$/;"	f	file:
gen_op	tccgen.c	/^ST_FUNC void gen_op(int op)$/;"	f
gen_opf	x86_64-gen.c	/^void gen_opf(int op)$/;"	f
gen_opi	x86_64-gen.c	/^void gen_opi(int op)$/;"	f
gen_opic	tccgen.c	/^static void gen_opic(int op)$/;"	f	file:
gen_opic_lt	tccgen.c	/^static int gen_opic_lt(uint64_t a, uint64_t b)$/;"	f	file:
gen_opic_sdiv	tccgen.c	/^static uint64_t gen_opic_sdiv(uint64_t a, uint64_t b)$/;"	f	file:
gen_opif	tccgen.c	/^static void gen_opif(int op)$/;"	f	file:
gen_opl	tccgen.c	/^static void gen_opl(int op)$/;"	f	file:
gen_opl	x86_64-gen.c	/^void gen_opl(int op)$/;"	f
gen_static_call	x86_64-gen.c	/^static void gen_static_call(int v)$/;"	f	file:
gen_vla_alloc	x86_64-gen.c	/^ST_FUNC void gen_vla_alloc(CType *type, int align) {$/;"	f
gen_vla_result	x86_64-gen.c	/^ST_FUNC void gen_vla_result(int addr) {$/;"	f
gen_vla_sp_restore	x86_64-gen.c	/^ST_FUNC void gen_vla_sp_restore(int addr) {$/;"	f
gen_vla_sp_save	x86_64-gen.c	/^ST_FUNC void gen_vla_sp_save(int addr) {$/;"	f
gensym	texi2pod.pl	/^    sub gensym$/;"	s
get_asm_sym	tccasm.c	/^ST_FUNC Sym* get_asm_sym(int name, Sym *csym)$/;"	f
get_be32	tccelf.c	/^static int get_be32(const uint8_t *b)$/;"	f	file:
get_be64	tccelf.c	/^static long get_be64(const uint8_t *b)$/;"	f	file:
get_elf_sym_addr	tccelf.c	/^ST_FUNC addr_t get_elf_sym_addr(TCCState *s, const char *name, int err)$/;"	f
get_page	lib/bcheck.c	/^static BoundEntry *get_page(size_t index)$/;"	f	file:
get_reg	tccgen.c	/^ST_FUNC int get_reg(int rc)$/;"	f
get_reg_ex	tccgen.c	/^ST_FUNC int get_reg_ex(int rc, int rc2)$/;"	f
get_reg_shift	i386-asm.c	/^static inline int get_reg_shift(TCCState *s1)$/;"	f	file:
get_region_size	lib/bcheck.c	/^static size_t get_region_size(void *p)$/;"	f	file:
get_sym_attr	tccelf.c	/^ST_FUNC struct sym_attr *get_sym_attr(TCCState *s1, int index, int alloc)$/;"	f
get_sym_ref	tccgen.c	/^ST_FUNC Sym *get_sym_ref(CType *type, Section *sec, unsigned long offset, unsigned long size)$/;"	f
get_tok_str	tccpp.c	/^ST_FUNC const char *get_tok_str(int v, CValue *cv)$/;"	f
getclock_ms	tcc.c	/^static unsigned getclock_ms(void)$/;"	f	file:
gexpr	tccgen.c	/^ST_FUNC void gexpr(void)$/;"	f
gfunc_arg_size	x86_64-gen.c	/^static int gfunc_arg_size(CType *type) {$/;"	f	file:
gfunc_call	x86_64-gen.c	/^void gfunc_call(int nb_args)$/;"	f
gfunc_epilog	x86_64-gen.c	/^void gfunc_epilog(void)$/;"	f
gfunc_param_typed	tccgen.c	/^static void gfunc_param_typed(Sym *func, Sym *arg)$/;"	f	file:
gfunc_prolog	x86_64-gen.c	/^void gfunc_prolog(CType *func_type)$/;"	f
gfunc_return	tccgen.c	/^static void gfunc_return(CType *func_type)$/;"	f	file:
gfunc_sret	x86_64-gen.c	/^ST_FUNC int gfunc_sret(CType *vt, int variadic, CType *ret, int *ret_align, int *regsize)$/;"	f
ggoto	x86_64-gen.c	/^void ggoto(void)$/;"	f
gjmp	x86_64-gen.c	/^int gjmp(int t)$/;"	f
gjmp2	x86_64-gen.c	240;"	d	file:
gjmp_addr	x86_64-gen.c	/^void gjmp_addr(int a)$/;"	f
global_expr	tcc.h	/^ST_DATA int global_expr;  \/* true if compound literals must be allocated globally (used during initializers parsing *\/$/;"	v
global_expr	tccgen.c	/^ST_DATA int global_expr;  \/* true if compound literals must be allocated globally (used during initializers parsing *\/$/;"	v
global_identifier_push	tccgen.c	/^ST_FUNC Sym *global_identifier_push(int v, int t, int c)$/;"	f
global_label_stack	tcc.h	/^ST_DATA Sym *global_label_stack;$/;"	v
global_label_stack	tccgen.c	/^ST_DATA Sym *global_label_stack;$/;"	v
global_stack	tcc.h	/^ST_DATA Sym *global_stack;$/;"	v
global_stack	tccgen.c	/^ST_DATA Sym *global_stack;$/;"	v
gnu_ext	libtcc.c	/^ST_DATA int gnu_ext = 1;$/;"	v
gnu_ext	tcc.h	/^ST_DATA int gnu_ext;$/;"	v
got	tcc.h	/^    Section *got;$/;"	m	struct:TCCState
got_offset	tcc.h	/^    unsigned got_offset;$/;"	m	struct:sym_attr
gotplt_entry	tcc.h	/^enum gotplt_entry {$/;"	g
gotplt_entry_type	x86_64-link.c	/^int gotplt_entry_type (int reloc_type)$/;"	f
gp_offset	include/stdarg.h	/^    unsigned int gp_offset;$/;"	m	struct:__anon9
gp_offset	lib/va_list.c	/^    unsigned int gp_offset;$/;"	m	struct:__anon7	file:
greloc	tccgen.c	/^ST_FUNC void greloc(Section *s, Sym *sym, unsigned long offset, int type)$/;"	f
greloca	tccgen.c	/^ST_FUNC void greloca(Section *s, Sym *sym, unsigned long offset, int type,$/;"	f
gsym	x86_64-gen.c	/^void gsym(int t)$/;"	f
gsym_addr	x86_64-gen.c	/^ST_FUNC void gsym_addr(int t, int a)$/;"	f
gt_bytes	elf.h	/^      Elf32_Word gt_bytes;		\/* This many bytes would be used *\/$/;"	m	struct:__anon46::__anon48
gt_current_g_value	elf.h	/^      Elf32_Word gt_current_g_value;	\/* -G value used for compilation *\/$/;"	m	struct:__anon46::__anon47
gt_entry	elf.h	/^    } gt_entry;				\/* Subsequent entries in section *\/$/;"	m	union:__anon46	typeref:struct:__anon46::__anon48
gt_g_value	elf.h	/^      Elf32_Word gt_g_value;		\/* If this value were used for -G *\/$/;"	m	struct:__anon46::__anon48
gt_header	elf.h	/^    } gt_header;			\/* First entry in section *\/$/;"	m	union:__anon46	typeref:struct:__anon46::__anon47
gt_unused	elf.h	/^      Elf32_Word gt_unused;		\/* Not used *\/$/;"	m	struct:__anon46::__anon47
gtst	x86_64-gen.c	/^ST_FUNC int gtst(int inv, int t)$/;"	f
gtst_addr	tcc.h	1497;"	d
gtst_addr	x86_64-gen.c	/^ST_FUNC void gtst_addr(int inv, int a)$/;"	f
gv	tccgen.c	/^ST_FUNC int gv(int rc)$/;"	f
gv2	tccgen.c	/^ST_FUNC void gv2(int rc1, int rc2)$/;"	f
gv_dup	tccgen.c	/^static void gv_dup(void)$/;"	f	file:
gvtst	tccgen.c	/^ST_FUNC int gvtst(int inv, int t)$/;"	f
handle	tcc.h	/^    void *handle;$/;"	m	struct:DLLReference
handle_eob	tccpp.c	/^ST_FUNC int handle_eob(void)$/;"	f
handle_stray	tccpp.c	/^static void handle_stray(void)$/;"	f	file:
handle_stray1	tccpp.c	/^static int handle_stray1(uint8_t *p)$/;"	f	file:
handle_stray_noerror	tccpp.c	/^static int handle_stray_noerror(void)$/;"	f	file:
has_text_addr	tcc.h	/^    int has_text_addr;$/;"	m	struct:TCCState
hash	tcc.h	/^    struct Section *hash;    \/* hash table for symbols *\/$/;"	m	struct:Section	typeref:struct:Section::Section
hash_ident	tccpp.c	/^static TokenSym *hash_ident[TOK_HASH_SIZE];$/;"	v	file:
hash_next	tcc.h	/^    int hash_next; \/* -1 if none *\/$/;"	m	struct:CachedInclude
hash_next	tcc.h	/^    struct TokenSym *hash_next;$/;"	m	struct:TokenSym	typeref:struct:TokenSym::TokenSym
help	tcc.c	/^static const char help[] =$/;"	v	file:
help2	tcc.c	/^static const char help2[] =$/;"	v	file:
high	lib/armeabi.c	/^    int high;$/;"	m	struct:unsigned_int_struct	file:
high	lib/armeabi.c	/^    unsigned high;$/;"	m	struct:double_unsigned_struct	file:
high	lib/libtcc1.c	/^    Wtype low, high;$/;"	m	struct:DWstruct	file:
hwp_flags1	elf.h	/^  Elf32_Word hwp_flags1;	\/* Extra flags.  *\/$/;"	m	struct:__anon51
hwp_flags2	elf.h	/^  Elf32_Word hwp_flags2;	\/* Extra flags.  *\/$/;"	m	struct:__anon51
i	tcc.h	/^    uint64_t i;$/;"	m	union:CValue
i386-win32_FILES	Makefile	/^i386-win32_FILES = $(i386_FILES) tccpe.c$/;"	m
i386_FILES	Makefile	/^i386_FILES = $(CORE_FILES) i386-gen.c i386-link.c i386-asm.c i386-asm.h i386-tok.h$/;"	m
id	tcc.h	/^    int id; \/* GCC 3 optional identifier (0 if number only supported *\/$/;"	m	struct:ASMOperand
ieee_finite	tccgen.c	/^ST_FUNC int ieee_finite(double d)$/;"	f
ifdef_stack	tcc.h	/^    int ifdef_stack[IFDEF_STACK_SIZE];$/;"	m	struct:TCCState
ifdef_stack_ptr	tcc.h	/^    int *ifdef_stack_ptr; \/* ifdef_stack value at the start of the file *\/$/;"	m	struct:BufferedFile
ifdef_stack_ptr	tcc.h	/^    int *ifdef_stack_ptr;$/;"	m	struct:TCCState
ifndef_macro	tcc.h	/^    int ifndef_macro;  \/* #ifndef macro \/ #endif search *\/$/;"	m	struct:BufferedFile
ifndef_macro	tcc.h	/^    int ifndef_macro;$/;"	m	struct:CachedInclude
ifndef_macro_saved	tcc.h	/^    int ifndef_macro_saved; \/* saved ifndef_macro *\/$/;"	m	struct:BufferedFile
in_sizeof	tccgen.c	/^static int in_sizeof;$/;"	v	file:
inc	tccgen.c	/^ST_FUNC void inc(int post, int c)$/;"	f
include_next_index	tcc.h	/^    int include_next_index; \/* next search path *\/$/;"	m	struct:BufferedFile
include_paths	tcc.h	/^    char **include_paths;$/;"	m	struct:TCCState
include_stack	tcc.h	/^    BufferedFile *include_stack[INCLUDE_STACK_SIZE];$/;"	m	struct:TCCState
include_stack_ptr	tcc.h	/^    BufferedFile **include_stack_ptr;$/;"	m	struct:TCCState
incr_bf_adr	tccgen.c	/^static void incr_bf_adr(int o)$/;"	f	file:
ind	tcc.h	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
ind	tccgen.c	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
index	libtcc.c	/^    uint16_t index;$/;"	m	struct:TCCOption	file:
indir	tccgen.c	/^ST_FUNC void indir(void)$/;"	f
info	elf.h	/^  Elf32_Word info;		\/* Kind-specific information.  *\/$/;"	m	struct:__anon50
init_putv	tccgen.c	/^static void init_putv(CType *type, Section *sec, unsigned long c)$/;"	f	file:
init_putz	tccgen.c	/^static void init_putz(Section *sec, unsigned long c, int size)$/;"	f	file:
init_symbol	tcc.h	/^    char *init_symbol; \/* symbols to call at load-time (not used currently) *\/$/;"	m	struct:TCCState
inline	tcc.h	57;"	d
inline_fns	tcc.h	/^    struct InlineFunc **inline_fns;$/;"	m	struct:TCCState	typeref:struct:TCCState::InlineFunc
inp	tcc.h	73;"	d
inp	tccpp.c	/^ST_INLN void inp(void)$/;"	f
input_index	tcc.h	/^    int input_index; \/* if >= 0, gives reference to an input constraint *\/$/;"	m	struct:ASMOperand
install_malloc_hooks	lib/bcheck.c	/^static void install_malloc_hooks(void)$/;"	f	file:
instr_type	i386-asm.c	/^    uint16_t instr_type;$/;"	m	struct:ASMInstr	file:
int16_t	elf.h	/^typedef short int int16_t;$/;"	t
int16_t	include/stddef.h	/^typedef signed short int int16_t;$/;"	t
int16_t	lib/lib-arm64.c	/^typedef short int16_t;$/;"	t	file:
int32_t	elf.h	/^typedef int int32_t;$/;"	t
int32_t	include/stddef.h	/^typedef signed int int32_t;$/;"	t
int32_t	lib/lib-arm64.c	/^typedef int int32_t;$/;"	t	file:
int64_t	elf.h	/^typedef long long int int64_t;$/;"	t
int64_t	include/stddef.h	/^typedef signed long int int64_t;$/;"	t
int64_t	include/stddef.h	/^typedef signed long long int int64_t;$/;"	t
int64_t	lib/lib-arm64.c	/^typedef long long int64_t;$/;"	t	file:
int8_t	elf.h	/^typedef signed char int8_t;$/;"	t
int8_t	include/stddef.h	/^typedef signed char int8_t;$/;"	t
int8_t	lib/lib-arm64.c	/^typedef signed char int8_t;$/;"	t	file:
int_type	tcc.h	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type;$/;"	v
int_type	tccgen.c	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type, ptrdiff_type;$/;"	v
intptr_t	include/stddef.h	/^typedef __PTRDIFF_TYPE__ intptr_t;$/;"	t
is64_type	x86_64-gen.c	/^static int is64_type(int t)$/;"	f	file:
is_compatible_func	tccgen.c	/^static int is_compatible_func(CType *type1, CType *type2)$/;"	f	file:
is_compatible_types	tccgen.c	/^static int is_compatible_types(CType *type1, CType *type2)$/;"	f	file:
is_compatible_unqualified_types	tccgen.c	/^static int is_compatible_unqualified_types(CType *type1, CType *type2)$/;"	f	file:
is_float	tccgen.c	/^ST_INLN int is_float(int t)$/;"	f
is_integer_btype	tccgen.c	/^static inline int is_integer_btype(int bt)$/;"	f	file:
is_invalid	lib/bcheck.c	/^    size_t is_invalid; \/* true if pointers outside region are invalid *\/$/;"	m	struct:BoundEntry	file:
is_label	tccgen.c	/^static int is_label(void)$/;"	f	file:
is_llong	tcc.h	/^    int is_llong; \/* true if double register value *\/$/;"	m	struct:ASMOperand
is_memory	tcc.h	/^    int is_memory; \/* true if memory operand *\/$/;"	m	struct:ASMOperand
is_null_pointer	tccgen.c	/^static inline int is_null_pointer(SValue *p)$/;"	f	file:
is_reg_allocated	i386-asm.c	1223;"	d	file:
is_rw	tcc.h	/^    int is_rw;     \/* for '+' modifier *\/$/;"	m	struct:ASMOperand
is_space	tcc.h	/^static inline int is_space(int ch) {$/;"	f
is_sse_float	x86_64-gen.c	/^static int is_sse_float(int t) {$/;"	f	file:
isid	tcc.h	/^static inline int isid(int c) {$/;"	f
isidnum_table	tccpp.c	/^static unsigned char isidnum_table[256 - CH_EOF];$/;"	v	file:
isnum	tcc.h	/^static inline int isnum(int c) {$/;"	f
isoct	tcc.h	/^static inline int isoct(int c) {$/;"	f
jnext	tcc.h	/^                int jnext; \/* next jump label *\/$/;"	m	union:Sym::__anon58::__anon59::__anon60
kind	elf.h	/^  unsigned char kind;		\/* Determines interpretation of the$/;"	m	struct:__anon50
l	lib/libtcc1.c	/^    unsigned int l;$/;"	m	union:float_long	file:
l	lib/libtcc1.c	/^    } l;$/;"	m	union:double_long	typeref:struct:double_long::__anon4	file:
l	lib/libtcc1.c	/^    } l;$/;"	m	union:double_long	typeref:struct:double_long::__anon5	file:
l	lib/libtcc1.c	/^    } l;$/;"	m	union:ldouble_long	typeref:struct:ldouble_long::__anon3	file:
l_checksum	elf.h	/^  Elf32_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon52
l_checksum	elf.h	/^  Elf64_Word l_checksum;	\/* Checksum *\/$/;"	m	struct:__anon53
l_flags	elf.h	/^  Elf32_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon52
l_flags	elf.h	/^  Elf64_Word l_flags;		\/* Flags *\/$/;"	m	struct:__anon53
l_name	elf.h	/^  Elf32_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon52
l_name	elf.h	/^  Elf64_Word l_name;		\/* Name (string table index) *\/$/;"	m	struct:__anon53
l_time_stamp	elf.h	/^  Elf32_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon52
l_time_stamp	elf.h	/^  Elf64_Word l_time_stamp;	\/* Timestamp *\/$/;"	m	struct:__anon53
l_version	elf.h	/^  Elf32_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon52
l_version	elf.h	/^  Elf64_Word l_version;		\/* Interface version *\/$/;"	m	struct:__anon53
label_find	tccpp.c	/^ST_FUNC Sym *label_find(int v)$/;"	f
label_pop	tccpp.c	/^ST_FUNC void label_pop(Sym **ptop, Sym *slast, int keep)$/;"	f
label_push	tccpp.c	/^ST_FUNC Sym *label_push(Sym **ptop, int v, int flags)$/;"	f
last_ind	tcc.h	/^ST_DATA int last_line_num, last_ind, func_ind; \/* debug last line number and pc *\/$/;"	v
last_ind	tccgen.c	/^ST_DATA int last_line_num, last_ind, func_ind; \/* debug last line number and pc *\/$/;"	v
last_line_num	tcc.h	/^    int last_line_num;$/;"	m	struct:TokenString
last_line_num	tcc.h	/^ST_DATA int last_line_num, last_ind, func_ind; \/* debug last line number and pc *\/$/;"	v
last_line_num	tccgen.c	/^ST_DATA int last_line_num, last_ind, func_ind; \/* debug last line number and pc *\/$/;"	v
last_text_section	tcc.h	/^	ST_DATA Section *last_text_section; \/* to handle .previous asm directive *\/$/;"	v
last_text_section	tccelf.c	/^ST_DATA Section *last_text_section; \/* to handle .previous asm directive *\/$/;"	v
lastlen	tcc.h	/^    int lastlen;$/;"	m	struct:TokenString
layout_sections	tccelf.c	/^static int layout_sections(TCCState *s1, ElfW(Phdr) *phdr, int phnum,$/;"	f	file:
lbounds_section	tcc.h	/^	ST_DATA Section *lbounds_section; \/* contains local data bound description *\/$/;"	v
lbounds_section	tccelf.c	/^ST_DATA Section *lbounds_section; \/* contains local data bound description *\/$/;"	v
lbuild	tccgen.c	/^static void lbuild(int t)$/;"	f	file:
ld	lib/libtcc1.c	/^    long double ld;$/;"	m	union:ldouble_long	file:
ld	tcc.h	/^    long double ld;$/;"	m	union:CValue
ld_add_file	tccelf.c	/^static int ld_add_file(TCCState *s1, const char filename[])$/;"	f	file:
ld_add_file_list	tccelf.c	/^static int ld_add_file_list(TCCState *s1, const char *cmd, int as_needed)$/;"	f	file:
ld_next	tccelf.c	/^static int ld_next(TCCState *s1, char *name, int name_size)$/;"	f	file:
ldouble_long	lib/libtcc1.c	/^union ldouble_long {$/;"	u	file:
le2belong	tcctools.c	/^static unsigned long le2belong(unsigned long ul) {$/;"	f	file:
leading_underscore	tcc.h	/^    int leading_underscore;$/;"	m	struct:TCCState
len	tcc.h	/^    int len;$/;"	m	struct:TokenString
len	tcc.h	/^    int len;$/;"	m	struct:TokenSym
level	tcc.h	/^    int level;$/;"	m	struct:DLLReference
lexpand	tccgen.c	/^static void lexpand(void)$/;"	f	file:
lexpand_nr	tccgen.c	/^ST_FUNC void lexpand_nr(void)$/;"	f
libc_free	lib/bcheck.c	/^static void libc_free(void *ptr)$/;"	f	file:
libc_malloc	lib/bcheck.c	/^static void *libc_malloc(size_t size)$/;"	f	file:
library_paths	tcc.h	/^    char **library_paths;$/;"	m	struct:TCCState
limit	tccpp.c	/^    unsigned  limit;$/;"	m	struct:TinyAlloc	file:
line_num	libtcc.c	/^    int line_num;$/;"	m	struct:mem_debug_header	file:
line_num	tcc.h	/^    int line_num;    \/* current line number - here to simplify code *\/$/;"	m	struct:BufferedFile
line_num	tccpp.c	/^    int     line_num; \/* negative line_num used for double free check *\/$/;"	m	struct:tal_header_t	file:
line_ref	tcc.h	/^    int line_ref;    \/* tcc -E: last printed line *\/$/;"	m	struct:BufferedFile
link	tcc.h	/^    struct Section *link;    \/* link to another section *\/$/;"	m	struct:Section	typeref:struct:Section::Section
link_once	tccelf.c	/^    uint8_t link_once;         \/* true if link once section *\/$/;"	m	struct:SectionMergeInfo	file:
link_option	libtcc.c	/^static int link_option(const char *str, const char *val, const char **ptr)$/;"	f	file:
ll	lib/libtcc1.c	/^    long long ll;$/;"	m	union:double_long	file:
ll	lib/libtcc1.c	/^  DWtype ll;$/;"	m	union:__anon2	file:
load	x86_64-gen.c	/^void load(int r, SValue *sv)$/;"	f
load_data	tccelf.c	/^static void *load_data(int fd, unsigned long file_offset, unsigned long size)$/;"	f	file:
load_packed_bf	tccgen.c	/^static void load_packed_bf(CType *type, int bit_pos, int bit_size)$/;"	f	file:
loaded_dlls	tcc.h	/^    DLLReference **loaded_dlls;$/;"	m	struct:TCCState
loc	tcc.h	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
loc	tccgen.c	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
local_label_stack	tcc.h	/^ST_DATA Sym *local_label_stack;$/;"	v
local_label_stack	tccgen.c	/^ST_DATA Sym *local_label_stack;$/;"	v
local_scope	tccgen.c	/^static int local_scope;$/;"	v	file:
local_stack	tcc.h	/^ST_DATA Sym *local_stack;$/;"	v
local_stack	tccgen.c	/^ST_DATA Sym *local_stack;$/;"	v
low	lib/armeabi.c	/^    unsigned low;$/;"	m	struct:double_unsigned_struct	file:
low	lib/armeabi.c	/^    unsigned low;$/;"	m	struct:unsigned_int_struct	file:
low	lib/libtcc1.c	/^    Wtype low, high;$/;"	m	struct:DWstruct	file:
lower	lib/libtcc1.c	/^        unsigned int lower;$/;"	m	struct:double_long::__anon4	file:
lower	lib/libtcc1.c	/^        unsigned int lower;$/;"	m	struct:double_long::__anon5	file:
lower	lib/libtcc1.c	/^        unsigned long long lower;$/;"	m	struct:ldouble_long::__anon3	file:
lvalue_type	tccgen.c	/^ST_FUNC int lvalue_type(int t)$/;"	f
m_info	elf.h	/^  Elf32_Word m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon44
m_info	elf.h	/^  Elf64_Xword m_info;		\/* Size and index.  *\/$/;"	m	struct:__anon45
m_poffset	elf.h	/^  Elf32_Word m_poffset;		\/* Symbol offset.  *\/$/;"	m	struct:__anon44
m_poffset	elf.h	/^  Elf64_Xword m_poffset;	\/* Symbol offset.  *\/$/;"	m	struct:__anon45
m_repeat	elf.h	/^  Elf32_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon44
m_repeat	elf.h	/^  Elf64_Half m_repeat;		\/* Repeat count.  *\/$/;"	m	struct:__anon45
m_stride	elf.h	/^  Elf32_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon44
m_stride	elf.h	/^  Elf64_Half m_stride;		\/* Stride info.  *\/$/;"	m	struct:__anon45
m_value	elf.h	/^  Elf32_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon44
m_value	elf.h	/^  Elf64_Xword m_value;		\/* Symbol value.  *\/$/;"	m	struct:__anon45
macro_arg_subst	tccpp.c	/^static int *macro_arg_subst(Sym **nested_list, const int *macro_str, Sym *args)$/;"	f	file:
macro_equal_buf	tccpp.c	/^static CString macro_equal_buf;$/;"	v	file:
macro_is_equal	tccpp.c	/^static int macro_is_equal(const int *a, const int *b)$/;"	f	file:
macro_ptr	tcc.h	/^ST_DATA const int *macro_ptr;$/;"	v
macro_ptr	tccpp.c	/^ST_DATA const int *macro_ptr;$/;"	v
macro_stack	tccpp.c	/^static TokenString *macro_stack;$/;"	v	file:
macro_subst	tccpp.c	/^static void macro_subst($/;"	f	file:
macro_subst_tok	tccpp.c	/^static int macro_subst_tok($/;"	f	file:
macro_twosharps	tccpp.c	/^static inline int *macro_twosharps(const int *ptr0)$/;"	f	file:
magic1	libtcc.c	/^    unsigned magic1;$/;"	m	struct:mem_debug_header	file:
magic2	libtcc.c	/^    unsigned magic2;$/;"	m	struct:mem_debug_header	file:
magic3	libtcc.c	/^    ALIGNED(16) unsigned magic3;$/;"	m	struct:mem_debug_header	file:
main	conftest.c	/^int main(int argc, char *argv[])$/;"	f
main	tcc.c	/^int main(int argc0, char **argv0)$/;"	f
malloc	libtcc.c	201;"	d	file:
malloc	libtcc.c	404;"	d	file:
malloc	tcc.h	1129;"	d
malloc_check	libtcc.c	/^static mem_debug_header_t *malloc_check(void *ptr, const char *msg)$/;"	f	file:
mark_invalid	lib/bcheck.c	/^static void mark_invalid(size_t addr, size_t size)$/;"	f	file:
maybe_print_stats	i386-asm.c	/^static void maybe_print_stats (void)$/;"	f	file:
maybe_run_test	tccpp.c	/^static void maybe_run_test(TCCState *s)$/;"	f	file:
mem_cur_size	libtcc.c	/^static unsigned mem_cur_size;$/;"	v	file:
mem_debug_chain	libtcc.c	/^static mem_debug_header_t *mem_debug_chain;$/;"	v	file:
mem_debug_header	libtcc.c	/^struct mem_debug_header {$/;"	s	file:
mem_debug_header_t	libtcc.c	/^typedef struct mem_debug_header mem_debug_header_t;$/;"	t	typeref:struct:mem_debug_header	file:
mem_max_size	libtcc.c	/^static unsigned mem_max_size;$/;"	v	file:
minp	tccpp.c	/^ST_FUNC void minp(void)$/;"	f
mk_pointer	tccgen.c	/^ST_FUNC void mk_pointer(CType *type)$/;"	f
move_reg	tccgen.c	/^static void move_reg(int r, int s, int t)$/;"	f	file:
ms_bitfields	tcc.h	/^    int ms_bitfields; \/* if true, emulate MS algorithm for aligning bitfields *\/$/;"	m	struct:TCCState
ms_extensions	tcc.h	/^    int ms_extensions;	\/* allow nested named struct w\/o identifier behave like unnamed *\/$/;"	m	struct:TCCState
n	tccgen.c	/^    } **p; int n; \/* list of case ranges *\/$/;"	m	struct:switch_t	file:
n_desc	tcc.h	/^    unsigned short n_desc;        \/* description field *\/$/;"	m	struct:__anon63
n_descsz	elf.h	/^  Elf32_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon42
n_descsz	elf.h	/^  Elf64_Word n_descsz;			\/* Length of the note's descriptor.  *\/$/;"	m	struct:__anon43
n_namesz	elf.h	/^  Elf32_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon42
n_namesz	elf.h	/^  Elf64_Word n_namesz;			\/* Length of the note's name.  *\/$/;"	m	struct:__anon43
n_other	tcc.h	/^    unsigned char n_other;        \/* misc info (usually empty) *\/$/;"	m	struct:__anon63
n_strx	tcc.h	/^    unsigned int n_strx;         \/* index into string table of name *\/$/;"	m	struct:__anon63
n_type	elf.h	/^  Elf32_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon42
n_type	elf.h	/^  Elf64_Word n_type;			\/* Type of the note.  *\/$/;"	m	struct:__anon43
n_type	tcc.h	/^    unsigned char n_type;         \/* type of symbol *\/$/;"	m	struct:__anon63
n_value	tcc.h	/^    unsigned int n_value;        \/* value of symbol *\/$/;"	m	struct:__anon63
name	libtcc.c	/^    const char *name;$/;"	m	struct:FlagDef	file:
name	libtcc.c	/^    const char *name;$/;"	m	struct:TCCOption	file:
name	tcc.h	/^    char name[1];           \/* section name *\/$/;"	m	struct:Section
name	tcc.h	/^    char name[1];$/;"	m	struct:DLLReference
name	tcc.h	/^    char name[1];$/;"	m	struct:filespec
nb_allocs	tccpp.c	/^    unsigned  nb_allocs;$/;"	m	struct:TinyAlloc	file:
nb_cached_includes	tcc.h	/^    int nb_cached_includes;$/;"	m	struct:TCCState
nb_cmd_include_files	tcc.h	/^    int nb_cmd_include_files;$/;"	m	struct:TCCState
nb_crt_paths	tcc.h	/^    int nb_crt_paths;$/;"	m	struct:TCCState
nb_errors	tcc.h	/^    int nb_errors;$/;"	m	struct:TCCState
nb_files	tcc.h	/^    int nb_files; \/* number thereof *\/$/;"	m	struct:TCCState
nb_hashed_syms	tcc.h	/^    int nb_hashed_syms;      \/* used to resize the hash table *\/$/;"	m	struct:Section
nb_include_paths	tcc.h	/^    int nb_include_paths;$/;"	m	struct:TCCState
nb_inline_fns	tcc.h	/^    int nb_inline_fns;$/;"	m	struct:TCCState
nb_libraries	tcc.h	/^    int nb_libraries; \/* number of libs thereof *\/$/;"	m	struct:TCCState
nb_library_paths	tcc.h	/^    int nb_library_paths;$/;"	m	struct:TCCState
nb_loaded_dlls	tcc.h	/^    int nb_loaded_dlls;$/;"	m	struct:TCCState
nb_missed	tccpp.c	/^    unsigned  nb_missed;$/;"	m	struct:TinyAlloc	file:
nb_ops	i386-asm.c	/^    uint8_t nb_ops;$/;"	m	struct:ASMInstr	file:
nb_peak	tccpp.c	/^    unsigned  nb_peak;$/;"	m	struct:TinyAlloc	file:
nb_pragma_libs	tcc.h	/^    int nb_pragma_libs;$/;"	m	struct:TCCState
nb_priv_sections	tcc.h	/^    int nb_priv_sections; \/* number of private sections *\/$/;"	m	struct:TCCState
nb_runtime_mem	tcc.h	/^    int nb_runtime_mem;$/;"	m	struct:TCCState
nb_sections	tcc.h	/^    int nb_sections; \/* number of sections, including first dummy section *\/$/;"	m	struct:TCCState
nb_states	libtcc.c	/^static int nb_states;$/;"	v	file:
nb_sym_attrs	tcc.h	/^    int nb_sym_attrs;$/;"	m	struct:TCCState
nb_sym_pools	tcc.h	/^ST_DATA int nb_sym_pools;$/;"	v
nb_sym_pools	tccgen.c	/^ST_DATA int nb_sym_pools;$/;"	v
nb_sysinclude_paths	tcc.h	/^    int nb_sysinclude_paths;$/;"	m	struct:TCCState
nb_target_deps	tcc.h	/^    int nb_target_deps;$/;"	m	struct:TCCState
nb_total	tccpp.c	/^    unsigned  nb_total;$/;"	m	struct:TinyAlloc	file:
new_section	tccelf.c	/^    uint8_t new_section;       \/* true if section 's' was added *\/$/;"	m	struct:SectionMergeInfo	file:
new_section	tccelf.c	/^ST_FUNC Section *new_section(TCCState *s1, const char *name, int sh_type, int sh_flags)$/;"	f
new_symtab	tccelf.c	/^ST_FUNC Section *new_symtab(TCCState *s1,$/;"	f
new_undef_sym	tccelf.c	/^static int new_undef_sym = 0; \/* Is there a new undefined sym since last new_undef_sym() *\/$/;"	v	file:
new_undef_syms	tccelf.c	/^static inline int new_undef_syms(void)$/;"	f	file:
next	lib/bcheck.c	/^    struct BoundEntry *next;$/;"	m	struct:BoundEntry	typeref:struct:BoundEntry::BoundEntry	file:
next	libtcc.c	/^    struct mem_debug_header *next;$/;"	m	struct:mem_debug_header	typeref:struct:mem_debug_header::mem_debug_header	file:
next	tcc.h	/^        struct Sym *next; \/* next related symbol (for fields and anoms) *\/$/;"	m	union:Sym::__anon61	typeref:struct:Sym::__anon61::Sym
next	tccpp.c	/^    struct TinyAlloc *next, *top;$/;"	m	struct:TinyAlloc	typeref:struct:TinyAlloc::TinyAlloc	file:
next	tccpp.c	/^ST_FUNC void next(void)$/;"	f
next_argstream	tccpp.c	/^static int next_argstream(Sym **nested_list, TokenString *ws_str)$/;"	f	file:
next_nomacro	tccpp.c	/^ST_FUNC void next_nomacro(void)$/;"	f
next_nomacro1	tccpp.c	/^static inline void next_nomacro1(void)$/;"	f	file:
next_nomacro_spc	tccpp.c	/^static void next_nomacro_spc(void)$/;"	f	file:
no_flag	libtcc.c	/^static int no_flag(const char **pp)$/;"	f	file:
nocode_wanted	tcc.h	/^ST_DATA int nocode_wanted; \/* true if no code generation wanted for an expression *\/$/;"	v
nocode_wanted	tccgen.c	/^ST_DATA int nocode_wanted; \/* no code generation wanted *\/$/;"	v
nocommon	tcc.h	/^    int nocommon; \/* if true, do not use common symbols for .bss data *\/$/;"	m	struct:TCCState
normalize_slashes	libtcc.c	/^ST_FUNC char *normalize_slashes(char *path)$/;"	f
nosse	tcc.h	/^    int nosse; \/* For -mno-sse support. *\/$/;"	m	struct:TCCState
nostdinc	tcc.h	/^    int nostdinc; \/* if true, no standard headers are added *\/$/;"	m	struct:TCCState
nostdlib	tcc.h	/^    int nostdlib; \/* if true, no standard libraries are added *\/$/;"	m	struct:TCCState
nwchar_t	tcc.h	/^	typedef int nwchar_t;$/;"	t
nwchar_t	tcc.h	/^	typedef unsigned short nwchar_t;$/;"	t
o	x86_64-gen.c	/^ST_FUNC void o(unsigned int c)$/;"	f
oad	x86_64-gen.c	/^static int oad(int c, int s)$/;"	f	file:
offset	libtcc.c	/^    uint16_t offset;$/;"	m	struct:FlagDef	file:
offset	tccelf.c	/^    unsigned long offset;  \/* offset of the new section in the existing section *\/$/;"	m	struct:SectionMergeInfo	file:
offsetof	include/stddef.h	35;"	d
offsetof	tcc.h	92;"	d
once	tcc.h	/^    int once;$/;"	m	struct:CachedInclude
op0_codes	i386-asm.c	/^static const uint16_t op0_codes[] = {$/;"	v	file:
op_type	i386-asm.c	/^    uint8_t op_type[MAX_OPERANDS]; \/* see OP_xxx *\/$/;"	m	struct:ASMInstr	file:
opcode	i386-asm.c	/^    uint16_t opcode;$/;"	m	struct:ASMInstr	file:
option_pthread	tcc.h	/^    int option_pthread; \/* -pthread option *\/$/;"	m	struct:TCCState
option_r	tcc.h	/^    int option_r; \/* option -r *\/$/;"	m	struct:TCCState
options_W	libtcc.c	/^static const FlagDef options_W[] = {$/;"	v	file:
options_f	libtcc.c	/^static const FlagDef options_f[] = {$/;"	v	file:
options_m	libtcc.c	/^static const FlagDef options_m[] = {$/;"	v	file:
orex	x86_64-gen.c	/^static void orex(int ll, int r, int r2, int b)$/;"	f	file:
outfile	tcc.h	/^    char *outfile; \/* output filename *\/$/;"	m	struct:TCCState
output_format	tcc.h	/^    int output_format;$/;"	m	struct:TCCState
output_type	tcc.h	/^    int output_type;$/;"	m	struct:TCCState
overflow_arg_area	include/stdarg.h	/^        char *overflow_arg_area;$/;"	m	union:__anon9::__anon10
overflow_arg_area	lib/va_list.c	/^        char *overflow_arg_area;$/;"	m	union:__anon7::__anon8	file:
overflow_offset	include/stdarg.h	/^        unsigned int overflow_offset;$/;"	m	union:__anon9::__anon10
overflow_offset	lib/va_list.c	/^        unsigned int overflow_offset;$/;"	m	union:__anon7::__anon8	file:
p	tccgen.c	/^    } **p; int n; \/* list of case ranges *\/$/;"	m	struct:switch_t	typeref:struct:switch_t::case_t	file:
p	tccpp.c	/^    uint8_t *p;$/;"	m	struct:TinyAlloc	file:
p1	lib/alloca86.S	/^p1:$/;"	l
p1	lib/alloca86_64-bt.S	/^p1:$/;"	l
p1	lib/alloca86_64.S	/^p1:$/;"	l
p2	lib/alloca86.S	/^p2:$/;"	l
p2	lib/alloca86_64-bt.S	/^p2:$/;"	l
p2	lib/alloca86_64.S	/^p2:$/;"	l
p3	lib/alloca86.S	/^p3:$/;"	l
p3	lib/alloca86_64-bt.S	/^p3:$/;"	l
p3	lib/alloca86_64.S	/^p3:$/;"	l
p4	lib/alloca86-bt.S	/^p4:$/;"	l
p5	lib/alloca86-bt.S	/^p5:$/;"	l
p6	lib/alloca86-bt.S	/^p6:$/;"	l
p_align	elf.h	/^  Elf32_Word	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon24
p_align	elf.h	/^  Elf64_Xword	p_align;		\/* Segment alignment *\/$/;"	m	struct:__anon25
p_filesz	elf.h	/^  Elf32_Word	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon24
p_filesz	elf.h	/^  Elf64_Xword	p_filesz;		\/* Segment size in file *\/$/;"	m	struct:__anon25
p_flags	elf.h	/^  Elf32_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon24
p_flags	elf.h	/^  Elf64_Word	p_flags;		\/* Segment flags *\/$/;"	m	struct:__anon25
p_memsz	elf.h	/^  Elf32_Word	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon24
p_memsz	elf.h	/^  Elf64_Xword	p_memsz;		\/* Segment size in memory *\/$/;"	m	struct:__anon25
p_offset	elf.h	/^  Elf32_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon24
p_offset	elf.h	/^  Elf64_Off	p_offset;		\/* Segment file offset *\/$/;"	m	struct:__anon25
p_paddr	elf.h	/^  Elf32_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon24
p_paddr	elf.h	/^  Elf64_Addr	p_paddr;		\/* Segment physical address *\/$/;"	m	struct:__anon25
p_type	elf.h	/^  Elf32_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon24
p_type	elf.h	/^  Elf64_Word	p_type;			\/* Segment type *\/$/;"	m	struct:__anon25
p_vaddr	elf.h	/^  Elf32_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon24
p_vaddr	elf.h	/^  Elf64_Addr	p_vaddr;		\/* Segment virtual address *\/$/;"	m	struct:__anon25
pack_stack	tcc.h	/^    int pack_stack[PACK_STACK_SIZE];$/;"	m	struct:TCCState
pack_stack_ptr	tcc.h	/^    int *pack_stack_ptr;$/;"	m	struct:TCCState
packed	tcc.h	/^    packed      : 1,$/;"	m	struct:SymAttr
parse_asm_operands	tccasm.c	/^static void parse_asm_operands(ASMOperand *operands, int *nb_operands_ptr,$/;"	f	file:
parse_asm_str	tccgen.c	/^ST_FUNC void parse_asm_str(CString *astr)$/;"	f
parse_attribute	tccgen.c	/^static void parse_attribute(AttributeDef *ad)$/;"	f	file:
parse_btype	tccgen.c	/^static int parse_btype(CType *type, AttributeDef *ad)$/;"	f	file:
parse_btype_qualify	tccgen.c	/^static void parse_btype_qualify(CType *type, int qualifiers)$/;"	f	file:
parse_builtin_params	tccgen.c	/^static void parse_builtin_params(int nc, const char *args)$/;"	f	file:
parse_comment	tccpp.c	/^ST_FUNC uint8_t *parse_comment(uint8_t *p)$/;"	f
parse_define	tccpp.c	/^ST_FUNC void parse_define(void)$/;"	f
parse_escape_string	tccpp.c	/^static void parse_escape_string(CString *outstr, const uint8_t *buf, int is_long)$/;"	f	file:
parse_expr_type	tccgen.c	/^static void parse_expr_type(CType *type)$/;"	f	file:
parse_flags	tcc.h	/^ST_DATA int parse_flags;$/;"	v
parse_flags	tccpp.c	/^ST_DATA int parse_flags;$/;"	v
parse_init_elem	tccgen.c	/^static void parse_init_elem(int expr_type)$/;"	f	file:
parse_line_comment	tccpp.c	/^static uint8_t *parse_line_comment(uint8_t *p)$/;"	f	file:
parse_mult_str	tccgen.c	/^ST_FUNC void parse_mult_str (CString *astr, const char *msg)$/;"	f
parse_number	tccpp.c	/^static void parse_number(const char *p)$/;"	f	file:
parse_operand	i386-asm.c	/^static void parse_operand(TCCState *s1, Operand *op)$/;"	f	file:
parse_option_D	libtcc.c	/^static void parse_option_D(TCCState *s1, const char *optarg)$/;"	f	file:
parse_pp_string	tccpp.c	/^static uint8_t *parse_pp_string(uint8_t *p,$/;"	f	file:
parse_string	tccpp.c	/^static void parse_string(const char *s, int len)$/;"	f	file:
parse_type	tccgen.c	/^static void parse_type(CType *type)$/;"	f	file:
paste_tokens	tccpp.c	/^static int paste_tokens(int t1, CValue *v1, int t2, CValue *v2)$/;"	f	file:
patch_storage	tccgen.c	/^static void patch_storage(Sym *sym, AttributeDef *ad, CType *type)$/;"	f	file:
patch_type	tccgen.c	/^static void patch_type(Sym *sym, CType *type)$/;"	f	file:
pcrel	tcc.h	/^    int pcrel;$/;"	m	struct:ExprValue
pe_characteristics	tcc.h	/^    unsigned pe_characteristics;$/;"	m	struct:TCCState
pe_file_align	tcc.h	/^    unsigned pe_file_align;$/;"	m	struct:TCCState
pe_imagebase	tcc.h	/^    addr_t pe_imagebase;$/;"	m	struct:TCCState
pe_stack_size	tcc.h	/^    unsigned pe_stack_size;$/;"	m	struct:TCCState
pe_subsystem	tcc.h	/^    int pe_subsystem;$/;"	m	struct:TCCState
peak_p	tccpp.c	/^    uint8_t *peak_p;$/;"	m	struct:TinyAlloc	file:
plt	tcc.h	/^    Section *plt;$/;"	m	struct:TCCState
plt_offset	tcc.h	/^    unsigned plt_offset;$/;"	m	struct:sym_attr
plt_sym	tcc.h	/^    int plt_sym;$/;"	m	struct:sym_attr
plt_thumb_stub	tcc.h	/^    unsigned char plt_thumb_stub:1;$/;"	m	struct:sym_attr
pointed_size	tccgen.c	/^static int pointed_size(CType *type)$/;"	f	file:
pointed_type	tccgen.c	/^static inline CType *pointed_type(CType *type)$/;"	f	file:
pop_section	tccasm.c	/^static void pop_section(TCCState *s1)$/;"	f	file:
post_type	tccgen.c	/^static int post_type(CType *type, AttributeDef *ad, int storage, int td)$/;"	f	file:
postprocess	texi2pod.pl	/^sub postprocess$/;"	s
pp_check_he0xE	tccpp.c	/^static int pp_check_he0xE(int t, const char *p)$/;"	f	file:
pp_counter	tccpp.c	/^static int pp_counter;$/;"	v	file:
pp_debug_builtins	tccpp.c	/^static void pp_debug_builtins(TCCState *s1)$/;"	f	file:
pp_debug_defines	tccpp.c	/^static void pp_debug_defines(TCCState *s1)$/;"	f	file:
pp_debug_symv	tccpp.c	/^static int pp_debug_tok, pp_debug_symv;$/;"	v	file:
pp_debug_tok	tccpp.c	/^static int pp_debug_tok, pp_debug_symv;$/;"	v	file:
pp_expr	tccpp.c	/^static int pp_expr;$/;"	v	file:
pp_line	tccpp.c	/^static void pp_line(TCCState *s1, BufferedFile *f, int level)$/;"	f	file:
pp_need_space	tccpp.c	/^static int pp_need_space(int a, int b)$/;"	f	file:
pp_once	tccpp.c	/^static int pp_once;$/;"	v	file:
ppfp	tcc.h	/^    FILE *ppfp;$/;"	m	struct:TCCState
pragma_libs	tcc.h	/^    char **pragma_libs;$/;"	m	struct:TCCState
pragma_parse	tccpp.c	/^static void pragma_parse(TCCState *s1)$/;"	f	file:
prepare_dynamic_rel	tccelf.c	/^static int prepare_dynamic_rel(TCCState *s1, Section *sr)$/;"	f	file:
preprocess	tccpp.c	/^ST_FUNC void preprocess(int is_bof)$/;"	f
preprocess_end	tccpp.c	/^ST_FUNC void preprocess_end(TCCState *s1)$/;"	f
preprocess_skip	tccpp.c	/^static void preprocess_skip(void)$/;"	f	file:
preprocess_start	tccpp.c	/^ST_FUNC void preprocess_start(TCCState *s1, int is_asm)$/;"	f
prev	libtcc.c	/^    struct mem_debug_header *prev;$/;"	m	struct:mem_debug_header	typeref:struct:mem_debug_header::mem_debug_header	file:
prev	tcc.h	/^    struct BufferedFile *prev;$/;"	m	struct:BufferedFile	typeref:struct:BufferedFile::BufferedFile
prev	tcc.h	/^    struct Section *prev;    \/* previous section on section stack *\/$/;"	m	struct:Section	typeref:struct:Section::Section
prev	tcc.h	/^    struct Sym *prev; \/* prev symbol in stack *\/$/;"	m	struct:Sym	typeref:struct:Sym::Sym
prev	tcc.h	/^    struct TokenString *prev;$/;"	m	struct:TokenString	typeref:struct:TokenString::TokenString
prev_ptr	tcc.h	/^    const int *prev_ptr;$/;"	m	struct:TokenString
prev_tok	tcc.h	/^    struct Sym *prev_tok; \/* previous symbol for this token *\/$/;"	m	struct:Sym	typeref:struct:Sym::Sym
print_dirs	tcc.c	/^static void print_dirs(const char *msg, char **paths, int nb_paths)$/;"	f	file:
print_inc	configure	/^print_inc() {$/;"	f
print_mak	configure	/^print_mak() {$/;"	f
print_mak_int	configure	/^print_mak_int() {$/;"	f
print_search_dirs	tcc.c	/^static void print_search_dirs(TCCState *s)$/;"	f	file:
priority	tcc.h	/^    int priority; \/* priority, used to assign registers *\/$/;"	m	struct:ASMOperand
priv_sections	tcc.h	/^    Section **priv_sections;$/;"	m	struct:TCCState
pstrcat	libtcc.c	/^ST_FUNC char *pstrcat(char *buf, int buf_size, const char *s)$/;"	f
pstrcpy	libtcc.c	/^ST_FUNC char *pstrcpy(char *buf, int buf_size, const char *s)$/;"	f
pstrncpy	libtcc.c	/^ST_FUNC char *pstrncpy(char *out, const char *in, size_t num)$/;"	f
ptr	tccrun.c	/^    void *ptr;$/;"	m	struct:TCCSyms	file:
ptrdiff_t	include/stddef.h	/^typedef __PTRDIFF_TYPE__ ptrdiff_t;$/;"	t
ptrdiff_type	tccgen.c	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type, ptrdiff_type;$/;"	v
push_arg_reg	x86_64-gen.c	/^static void push_arg_reg(int i) {$/;"	f	file:
push_section	tccasm.c	/^static void push_section(TCCState *s1, const char *name)$/;"	f	file:
put_dt	tccelf.c	/^static void put_dt(Section *dynamic, int dt, addr_t val)$/;"	f	file:
put_elf_reloc	tccelf.c	/^ST_FUNC void put_elf_reloc(Section *symtab, Section *s, unsigned long offset,$/;"	f
put_elf_reloca	tccelf.c	/^ST_FUNC void put_elf_reloca(Section *symtab, Section *s, unsigned long offset,$/;"	f
put_elf_str	tccelf.c	/^ST_FUNC int put_elf_str(Section *s, const char *sym)$/;"	f
put_elf_sym	tccelf.c	/^ST_FUNC int put_elf_sym(Section *s, addr_t value, unsigned long size,$/;"	f
put_extern_sym	tccgen.c	/^ST_FUNC void put_extern_sym(Sym *sym, Section *section,$/;"	f
put_extern_sym2	tccgen.c	/^ST_FUNC void put_extern_sym2(Sym *sym, int sh_num,$/;"	f
put_got_entry	tccelf.c	/^static struct sym_attr * put_got_entry(TCCState *s1, int dyn_reloc_type,$/;"	f	file:
put_stabd	tccelf.c	/^ST_FUNC void put_stabd(int type, int other, int desc)$/;"	f
put_stabn	tccelf.c	/^ST_FUNC void put_stabn(int type, int other, int desc, int value)$/;"	f
put_stabs	tccelf.c	/^ST_FUNC void put_stabs(const char *str, int type, int other, int desc,$/;"	f
put_stabs_r	tccelf.c	/^ST_FUNC void put_stabs_r(const char *str, int type, int other, int desc,$/;"	f
pvtop	tcc.h	/^ST_DATA SValue __vstack[1+\/*to make bcheck happy*\/ VSTACK_SIZE], *vtop, *pvtop;$/;"	v
pvtop	tccgen.c	/^ST_DATA SValue __vstack[1+VSTACK_SIZE], *vtop, *pvtop;$/;"	v
qrel	x86_64-link.c	/^static ElfW_Rel *qrel; \/* ptr to next reloc entry reused *\/$/;"	v	file:
r	tcc.h	/^    unsigned short r;      \/* register + flags *\/$/;"	m	struct:SValue
r	tcc.h	/^    unsigned short r; \/* associated register or VT_CONST\/VT_LOCAL and LVAL type *\/$/;"	m	struct:Sym
r2	tcc.h	/^    unsigned short r2;     \/* second register, used for 'long long'$/;"	m	struct:SValue
r_addend	elf.h	/^  Elf32_Sword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon22
r_addend	elf.h	/^  Elf64_Sxword	r_addend;		\/* Addend *\/$/;"	m	struct:__anon23
r_info	elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon20
r_info	elf.h	/^  Elf32_Word	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon22
r_info	elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon21
r_info	elf.h	/^  Elf64_Xword	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon23
r_offset	elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon20
r_offset	elf.h	/^  Elf32_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon22
r_offset	elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon21
r_offset	elf.h	/^  Elf64_Addr	r_offset;		\/* Address *\/$/;"	m	struct:__anon23
rc_fret	tccgen.c	/^static int rc_fret(int t)$/;"	f	file:
rdynamic	tcc.h	/^    int rdynamic; \/* if true, all symbols are exported *\/$/;"	m	struct:TCCState
read16le	tcc.h	/^static inline uint16_t read16le(unsigned char *p) {$/;"	f
read32le	tcc.h	/^static inline uint32_t read32le(unsigned char *p) {$/;"	f
read64le	tcc.h	/^static inline uint64_t read64le(unsigned char *p) {$/;"	f
realloc	libtcc.c	202;"	d	file:
realloc	libtcc.c	405;"	d	file:
realloc	tcc.h	1130;"	d
rebuild_hash	tccelf.c	/^static void rebuild_hash(Section *s, unsigned int nb_buckets)$/;"	f	file:
ref	tcc.h	/^    struct Sym *ref;$/;"	m	struct:CType	typeref:struct:CType::Sym
ref_index	tcc.h	/^    int ref_index; \/* if >= 0, gives reference to a output constraint *\/$/;"	m	struct:ASMOperand
reg	i386-asm.c	/^    int8_t  reg; \/* register, -1 if none *\/$/;"	m	struct:Operand	file:
reg	tcc.h	/^    int reg; \/* if >= 0, register number used for this operand *\/$/;"	m	struct:ASMOperand
reg2	i386-asm.c	/^    int8_t  reg2; \/* second register, -1 if none *\/$/;"	m	struct:Operand	file:
reg_classes	tcc.h	/^ST_DATA const int reg_classes[NB_REGS];$/;"	v
reg_classes	x86_64-gen.c	/^ST_DATA const int reg_classes[NB_REGS] = {$/;"	v
reg_fret	tccgen.c	/^static int reg_fret(int t)$/;"	f	file:
reg_save_area	include/stdarg.h	/^    char *reg_save_area;$/;"	m	struct:__anon9
reg_save_area	lib/va_list.c	/^    char *reg_save_area;$/;"	m	struct:__anon7	file:
reg_to_size	i386-asm.c	/^static const uint8_t reg_to_size[9] = {$/;"	v	file:
rel_addr	tccelf.c	/^    addr_t rel_addr;$/;"	m	struct:dyn_inf	file:
rel_size	tccelf.c	/^    addr_t rel_size;$/;"	m	struct:dyn_inf	file:
reloc	tcc.h	/^    struct Section *reloc;   \/* corresponding section for relocation, if any *\/$/;"	m	struct:Section	typeref:struct:Section::Section
relocate	x86_64-link.c	/^void relocate(TCCState *s1, ElfW_Rel *rel, int type, unsigned char *ptr, addr_t addr, addr_t val)$/;"	f
relocate_init	x86_64-link.c	/^void relocate_init(Section *sr)$/;"	f
relocate_plt	x86_64-link.c	/^ST_FUNC void relocate_plt(TCCState *s1)$/;"	f
relocate_rel	tccelf.c	/^static void relocate_rel(TCCState *s1, Section *sr)$/;"	f	file:
relocate_section	tccelf.c	/^ST_FUNC void relocate_section(TCCState *s1, Section *s)$/;"	f
relocate_syms	tccelf.c	/^ST_FUNC void relocate_syms(TCCState *s1, Section *symtab, int do_resolve)$/;"	f
resolve_common_syms	tccelf.c	/^ST_FUNC void resolve_common_syms(TCCState *s1)$/;"	f
restore_malloc_hooks	lib/bcheck.c	/^static void restore_malloc_hooks(void)$/;"	f	file:
ri_cprmask	elf.h	/^  Elf32_Word	ri_cprmask[4];		\/* Coprocessor registers used *\/$/;"	m	struct:__anon49
ri_gp_value	elf.h	/^  Elf32_Sword	ri_gp_value;		\/* $gp register value *\/$/;"	m	struct:__anon49
ri_gprmask	elf.h	/^  Elf32_Word	ri_gprmask;		\/* General registers used *\/$/;"	m	struct:__anon49
rpath	tcc.h	/^    char *rpath; \/* as specified on the command line (-Wl,-rpath=) *\/$/;"	m	struct:TCCState
rsym	tcc.h	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
rsym	tccgen.c	/^ST_DATA int rsym, anon_sym, ind, loc;$/;"	v
rt_bound_error_msg	tcc.h	/^		ST_DATA const char **rt_bound_error_msg;$/;"	v
rt_bound_error_msg	tccrun.c	/^ST_DATA const char **rt_bound_error_msg;$/;"	v
rt_error	tccrun.c	/^static void rt_error(ucontext_t *uc, const char *fmt, ...)$/;"	f	file:
rt_get_caller_pc	tccrun.c	/^static int rt_get_caller_pc(addr_t *paddr, CONTEXT *uc, int level)$/;"	f	file:
rt_get_caller_pc	tccrun.c	/^static int rt_get_caller_pc(addr_t *paddr, ucontext_t *uc, int level)$/;"	f	file:
rt_num_callers	tcc.h	/^		ST_DATA int rt_num_callers;$/;"	v
rt_num_callers	tccrun.c	/^ST_DATA int rt_num_callers = 6;$/;"	v
rt_printline	tccrun.c	/^static addr_t rt_printline(addr_t wanted_pc, const char *msg)$/;"	f	file:
rt_prog_main	tcc.h	/^		ST_DATA void *rt_prog_main;$/;"	v
rt_prog_main	tccrun.c	/^ST_DATA void *rt_prog_main;$/;"	v
run_test	tcc.h	/^    int run_test; \/* nth test to run with -dt -run *\/$/;"	m	struct:TCCState
runtime_main	tcc.h	/^    const char *runtime_main;$/;"	m	struct:TCCState
runtime_mem	tcc.h	/^    void **runtime_mem;$/;"	m	struct:TCCState
s	lib/libtcc1.c	/^  struct DWstruct s;$/;"	m	union:__anon2	typeref:struct:__anon2::DWstruct	file:
s	tccelf.c	/^    Section *s;            \/* corresponding existing section *\/$/;"	m	struct:SectionMergeInfo	file:
save_line_num	tcc.h	/^    int save_line_num;$/;"	m	struct:TokenString
save_reg	tccgen.c	/^ST_FUNC void save_reg(int r)$/;"	f
save_reg_upstack	tccgen.c	/^ST_FUNC void save_reg_upstack(int r, int n)$/;"	f
save_regs	tccgen.c	/^ST_FUNC void save_regs(int n)$/;"	f
saved_free_hook	lib/bcheck.c	/^static void *saved_free_hook;$/;"	v	file:
saved_malloc_hook	lib/bcheck.c	/^static void *saved_malloc_hook;$/;"	v	file:
saved_memalign_hook	lib/bcheck.c	/^static void *saved_memalign_hook;$/;"	v	file:
saved_realloc_hook	lib/bcheck.c	/^static void *saved_realloc_hook;$/;"	v	file:
search_cached_include	tccpp.c	/^static CachedInclude *search_cached_include(TCCState *s1, const char *filename, int add)$/;"	f	file:
section	elf.h	/^  Elf32_Section section;	\/* Section header index of section affected,$/;"	m	struct:__anon50
section	tcc.h	/^    struct Section *section;$/;"	m	struct:AttributeDef	typeref:struct:AttributeDef::Section
section_add	tccelf.c	/^ST_FUNC size_t section_add(Section *sec, addr_t size, int align)$/;"	f
section_align	tcc.h	/^    unsigned section_align; \/* section alignment *\/$/;"	m	struct:TCCState
section_ptr_add	tccelf.c	/^ST_FUNC void *section_ptr_add(Section *sec, addr_t size)$/;"	f
section_realloc	tccelf.c	/^ST_FUNC void section_realloc(Section *sec, unsigned long new_size)$/;"	f
section_reserve	tccelf.c	/^ST_FUNC void section_reserve(Section *sec, unsigned long size)$/;"	f
section_sym	tccgen.c	/^static int section_sym;$/;"	v	file:
sections	tcc.h	/^    Section **sections;$/;"	m	struct:TCCState
seg_size	tcc.h	/^    int seg_size; \/* 32. Can be 16 with i386 assembler (.code16) *\/$/;"	m	struct:TCCState
segment_prefixes	i386-asm.c	/^static const uint8_t segment_prefixes[] = {$/;"	v	file:
set_elf_sym	tccelf.c	/^ST_FUNC int set_elf_sym(Section *s, addr_t value, unsigned long size,$/;"	f
set_environment	tcc.c	/^static void set_environment(TCCState *s)$/;"	f	file:
set_exception_handler	tccrun.c	/^static void set_exception_handler(void)$/;"	f	file:
set_flag	libtcc.c	/^ST_FUNC int set_flag(TCCState *s, const FlagDef *flags, const char *name)$/;"	f
set_idnum	tccpp.c	/^ST_FUNC int set_idnum(int c, int val)$/;"	f
set_pages_executable	tccrun.c	/^static void set_pages_executable(void *ptr, unsigned long length)$/;"	f	file:
set_symbol	tccasm.c	/^static Sym* set_symbol(TCCState *s1, int label)$/;"	f	file:
sh_addr	elf.h	/^  Elf32_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon14
sh_addr	elf.h	/^  Elf64_Addr	sh_addr;		\/* Section virtual addr at execution *\/$/;"	m	struct:__anon15
sh_addr	tcc.h	/^    addr_t sh_addr;          \/* address at which the section is relocated *\/$/;"	m	struct:Section
sh_addralign	elf.h	/^  Elf32_Word	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon14
sh_addralign	elf.h	/^  Elf64_Xword	sh_addralign;		\/* Section alignment *\/$/;"	m	struct:__anon15
sh_addralign	tcc.h	/^    int sh_addralign;        \/* elf section alignment *\/$/;"	m	struct:Section
sh_entsize	elf.h	/^  Elf32_Word	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon14
sh_entsize	elf.h	/^  Elf64_Xword	sh_entsize;		\/* Entry size if section holds table *\/$/;"	m	struct:__anon15
sh_entsize	tcc.h	/^    int sh_entsize;          \/* elf entry size *\/$/;"	m	struct:Section
sh_flags	elf.h	/^  Elf32_Word	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon14
sh_flags	elf.h	/^  Elf64_Xword	sh_flags;		\/* Section flags *\/$/;"	m	struct:__anon15
sh_flags	tcc.h	/^    int sh_flags;            \/* elf section flags *\/$/;"	m	struct:Section
sh_info	elf.h	/^  Elf32_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon14
sh_info	elf.h	/^  Elf64_Word	sh_info;		\/* Additional section information *\/$/;"	m	struct:__anon15
sh_info	tcc.h	/^    int sh_info;             \/* elf section info *\/$/;"	m	struct:Section
sh_link	elf.h	/^  Elf32_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon14
sh_link	elf.h	/^  Elf64_Word	sh_link;		\/* Link to another section *\/$/;"	m	struct:__anon15
sh_name	elf.h	/^  Elf32_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon14
sh_name	elf.h	/^  Elf64_Word	sh_name;		\/* Section name (string tbl index) *\/$/;"	m	struct:__anon15
sh_name	tcc.h	/^    int sh_name;             \/* elf section name (only used during output) *\/$/;"	m	struct:Section
sh_num	tcc.h	/^    int sh_num;              \/* elf section number *\/$/;"	m	struct:Section
sh_offset	elf.h	/^  Elf32_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon14
sh_offset	elf.h	/^  Elf64_Off	sh_offset;		\/* Section file offset *\/$/;"	m	struct:__anon15
sh_offset	tcc.h	/^    unsigned long sh_offset; \/* file offset *\/$/;"	m	struct:Section
sh_size	elf.h	/^  Elf32_Word	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon14
sh_size	elf.h	/^  Elf64_Xword	sh_size;		\/* Section size in bytes *\/$/;"	m	struct:__anon15
sh_size	tcc.h	/^    unsigned long sh_size;   \/* section size (only used during output) *\/$/;"	m	struct:Section
sh_type	elf.h	/^  Elf32_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon14
sh_type	elf.h	/^  Elf64_Word	sh_type;		\/* Section type *\/$/;"	m	struct:__anon15
sh_type	tcc.h	/^    int sh_type;             \/* elf section type *\/$/;"	m	struct:Section
shift	i386-asm.c	/^    uint8_t shift;$/;"	m	struct:Operand	file:
si_boundto	elf.h	/^  Elf32_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon18
si_boundto	elf.h	/^  Elf64_Half si_boundto;		\/* Direct bindings, symbol bound to *\/$/;"	m	struct:__anon19
si_flags	elf.h	/^  Elf32_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon18
si_flags	elf.h	/^  Elf64_Half si_flags;			\/* Per symbol flags *\/$/;"	m	struct:__anon19
sig_error	tccrun.c	/^static void sig_error(int signum, siginfo_t *siginf, void *puc)$/;"	f	file:
size	elf.h	/^  unsigned char size;		\/* Size of descriptor, including header.  *\/$/;"	m	struct:__anon50
size	lib/bcheck.c	/^    size_t size;$/;"	m	struct:BoundEntry	file:
size	libtcc.c	/^    unsigned size;$/;"	m	struct:mem_debug_header	file:
size	tcc.h	/^        int size;$/;"	m	struct:CValue::__anon57
size	tcc.h	/^    int size; \/* size in bytes *\/$/;"	m	struct:CString
size	tccpp.c	/^    unsigned  size;$/;"	m	struct:TinyAlloc	file:
size	tccpp.c	/^    unsigned  size;$/;"	m	struct:tal_header_t	file:
size_allocated	tcc.h	/^    int size_allocated;$/;"	m	struct:CString
size_t	include/stddef.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t
size_type	tcc.h	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type;$/;"	v
size_type	tccgen.c	/^ST_DATA CType char_pointer_type, func_old_type, int_type, size_type, ptrdiff_type;$/;"	v
skip	tccpp.c	/^ST_FUNC void skip(int c)$/;"	f
skip_constraint_modifiers	i386-asm.c	/^static const char *skip_constraint_modifiers(const char *p)$/;"	f	file:
skip_linker_arg	libtcc.c	/^static const char *skip_linker_arg(const char **str)$/;"	f	file:
skip_or_save_block	tccgen.c	/^static void skip_or_save_block(TokenString **str)$/;"	f	file:
skip_spaces	tccpp.c	/^static inline void skip_spaces(void)$/;"	f	file:
snprintf	tcc.h	58;"	d
soname	tcc.h	/^    char *soname; \/* as specified on the command line (-soname) *\/$/;"	m	struct:TCCState
sort_syms	tccelf.c	/^static void sort_syms(TCCState *s1, Section *s)$/;"	f	file:
squeeze_multi_relocs	tccelf.c	/^ST_FUNC void squeeze_multi_relocs(Section *s, size_t oldrelocoffset)$/;"	f
ssize_t	include/stddef.h	/^typedef __PTRDIFF_TYPE__ ssize_t;$/;"	t
ssize_t	tcc.h	81;"	d
st_info	elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon16
st_info	elf.h	/^  unsigned char	st_info;		\/* Symbol type and binding *\/$/;"	m	struct:__anon17
st_name	elf.h	/^  Elf32_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon16
st_name	elf.h	/^  Elf64_Word	st_name;		\/* Symbol name (string tbl index) *\/$/;"	m	struct:__anon17
st_other	elf.h	/^  unsigned char	st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon16
st_other	elf.h	/^  unsigned char st_other;		\/* Symbol visibility *\/$/;"	m	struct:__anon17
st_shndx	elf.h	/^  Elf32_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon16
st_shndx	elf.h	/^  Elf64_Section	st_shndx;		\/* Section index *\/$/;"	m	struct:__anon17
st_size	elf.h	/^  Elf32_Word	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon16
st_size	elf.h	/^  Elf64_Xword	st_size;		\/* Symbol size *\/$/;"	m	struct:__anon17
st_value	elf.h	/^  Elf32_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon16
st_value	elf.h	/^  Elf64_Addr	st_value;		\/* Symbol value *\/$/;"	m	struct:__anon17
stab_section	tcc.h	/^ST_DATA Section *stab_section, *stabstr_section;$/;"	v
stab_section	tccelf.c	/^ST_DATA Section *stab_section, *stabstr_section;$/;"	v
stabstr_section	tcc.h	/^ST_DATA Section *stab_section, *stabstr_section;$/;"	v
stabstr_section	tccelf.c	/^ST_DATA Section *stab_section, *stabstr_section;$/;"	v
start	lib/bcheck.c	/^    size_t start;$/;"	m	struct:BoundEntry	file:
static	tcc.h	315;"	d
static_link	tcc.h	/^    int static_link; \/* if true, static linking is performed *\/$/;"	m	struct:TCCState
store	x86_64-gen.c	/^void store(int r, SValue *v)$/;"	f
store_packed_bf	tccgen.c	/^static void store_packed_bf(int bit_pos, int bit_size)$/;"	f	file:
str	tcc.h	/^    char str[1];$/;"	m	struct:TokenSym
str	tcc.h	/^    int *str;$/;"	m	struct:TokenString
str	tcc.h	/^    } str;$/;"	m	union:CValue	typeref:struct:CValue::__anon57
str	tccrun.c	/^    char *str;$/;"	m	struct:TCCSyms	file:
str_replace	tcctools.c	/^static char *str_replace(const char *str, const char *p, const char *r)$/;"	f	file:
strcat_printf	libtcc.c	/^static void strcat_printf(char *buf, int buf_size, const char *fmt, ...)$/;"	f	file:
strcat_vprintf	libtcc.c	/^static void strcat_vprintf(char *buf, int buf_size, const char *fmt, va_list ap)$/;"	f	file:
strdup	tcc.h	1131;"	d
strdup	tcc.h	1132;"	d
strstart	libtcc.c	/^static int strstart(const char *val, const char **str)$/;"	f	file:
strtof	tcc.h	63;"	d
strtold	tcc.h	62;"	d
strtoll	tcc.h	64;"	d
strtoull	tcc.h	65;"	d
struct_add_offset	tccgen.c	/^static void struct_add_offset (Sym *s, int offset)$/;"	f	file:
struct_decl	tccgen.c	/^static void struct_decl(CType *type, int u)$/;"	f	file:
struct_find	tccgen.c	/^ST_INLN Sym *struct_find(int v)$/;"	f
struct_layout	tccgen.c	/^static void struct_layout(CType *type, AttributeDef *ad)$/;"	f	file:
sub_ddmmss	lib/libtcc1.c	114;"	d	file:
subst_asm_operand	i386-asm.c	/^ST_FUNC void subst_asm_operand(CString *add_str,$/;"	f
subst_asm_operands	tccasm.c	/^static void subst_asm_operands(ASMOperand *operands, int nb_operands, $/;"	f	file:
switch_t	tccgen.c	/^ST_DATA struct switch_t {$/;"	s	file:
sym	i386-asm.c	/^    uint16_t sym;$/;"	m	struct:ASMInstr	file:
sym	tcc.h	/^    Sym *sym;$/;"	m	struct:ExprValue
sym	tcc.h	/^    Sym *sym;$/;"	m	struct:InlineFunc
sym	tcc.h	/^    struct Sym *sym;       \/* symbol, if (VT_SYM | VT_CONST), or if$/;"	m	struct:SValue	typeref:struct:SValue::Sym
sym	tccgen.c	/^	int sym;$/;"	m	struct:switch_t::case_t	file:
sym_attr	tcc.h	/^struct sym_attr {$/;"	s
sym_attrs	tcc.h	/^    struct sym_attr *sym_attrs;$/;"	m	struct:TCCState	typeref:struct:TCCState::sym_attr
sym_define	tcc.h	/^    struct Sym *sym_define; \/* direct pointer to define *\/$/;"	m	struct:TokenSym	typeref:struct:TokenSym::Sym
sym_find	tccgen.c	/^ST_INLN Sym *sym_find(int v)$/;"	f
sym_find2	tccgen.c	/^ST_FUNC Sym *sym_find2(Sym *s, int v)$/;"	f
sym_free	tccgen.c	/^ST_INLN void sym_free(Sym *sym)$/;"	f
sym_free_first	tcc.h	/^ST_DATA Sym *sym_free_first;$/;"	v
sym_free_first	tccgen.c	/^ST_DATA Sym *sym_free_first;$/;"	v
sym_identifier	tcc.h	/^    struct Sym *sym_identifier; \/* direct pointer to identifier *\/$/;"	m	struct:TokenSym	typeref:struct:TokenSym::Sym
sym_label	tcc.h	/^    struct Sym *sym_label; \/* direct pointer to label *\/$/;"	m	struct:TokenSym	typeref:struct:TokenSym::Sym
sym_malloc	tccgen.c	/^static inline Sym *sym_malloc(void)$/;"	f	file:
sym_pools	tcc.h	/^ST_DATA void **sym_pools;$/;"	v
sym_pools	tccgen.c	/^ST_DATA void **sym_pools;$/;"	v
sym_pop	tccgen.c	/^ST_FUNC void sym_pop(Sym **ptop, Sym *b, int keep)$/;"	f
sym_push	tccgen.c	/^ST_FUNC Sym *sym_push(int v, CType *type, int r, int c)$/;"	f
sym_push2	tccgen.c	/^ST_FUNC Sym *sym_push2(Sym **ps, int v, int t, int c)$/;"	f
sym_scope	tcc.h	/^                int sym_scope; \/* scope level for locals *\/$/;"	m	union:Sym::__anon58::__anon59::__anon60
sym_struct	tcc.h	/^    struct Sym *sym_struct; \/* direct pointer to structure *\/$/;"	m	struct:TokenSym	typeref:struct:TokenSym::Sym
sym_to_attr	tccgen.c	/^static void sym_to_attr(AttributeDef *ad, Sym *s)$/;"	f	file:
symbolic	tcc.h	/^    int symbolic; \/* if true, resolve symbols in the current module first *\/$/;"	m	struct:TCCState
symtab	tcc.h	/^    Section *symtab;$/;"	m	struct:TCCState
symtab_section	tcc.h	/^ST_DATA Section *symtab_section;$/;"	v
symtab_section	tccelf.c	/^ST_DATA Section *symtab_section;$/;"	v
sysinclude_paths	tcc.h	/^    char **sysinclude_paths;$/;"	m	struct:TCCState
t	tcc.h	/^    int t;$/;"	m	struct:CType
tab	tcc.h	/^    int tab[LDOUBLE_SIZE\/4];$/;"	m	union:CValue
table_ident	tcc.h	/^ST_DATA TokenSym **table_ident;$/;"	v
table_ident	tccpp.c	/^ST_DATA TokenSym **table_ident;$/;"	v
tal_delete	tccpp.c	/^static void tal_delete(TinyAlloc *al)$/;"	f	file:
tal_delete	tccpp.c	120;"	d	file:
tal_free	tccpp.c	117;"	d	file:
tal_free	tccpp.c	123;"	d	file:
tal_free	tccpp.c	129;"	d	file:
tal_free_impl	tccpp.c	/^static void tal_free_impl(TinyAlloc *al, void *p TAL_DEBUG_PARAMS)$/;"	f	file:
tal_header_t	tccpp.c	/^typedef struct tal_header_t {$/;"	s	file:
tal_header_t	tccpp.c	/^} tal_header_t;$/;"	t	typeref:struct:tal_header_t	file:
tal_new	tccpp.c	/^static TinyAlloc *tal_new(TinyAlloc **pal, unsigned limit, unsigned size)$/;"	f	file:
tal_new	tccpp.c	119;"	d	file:
tal_realloc	tccpp.c	118;"	d	file:
tal_realloc	tccpp.c	124;"	d	file:
tal_realloc	tccpp.c	130;"	d	file:
tal_realloc_impl	tccpp.c	/^static void *tal_realloc_impl(TinyAlloc **pal, void *p, unsigned size TAL_DEBUG_PARAMS)$/;"	f	file:
target_deps	tcc.h	/^    char **target_deps;$/;"	m	struct:TCCState
tcc_add_bcheck	tccelf.c	/^ST_FUNC void tcc_add_bcheck(TCCState *s1)$/;"	f
tcc_add_crt	libtcc.c	/^ST_FUNC int tcc_add_crt(TCCState *s, const char *filename)$/;"	f
tcc_add_dll	libtcc.c	/^ST_FUNC int tcc_add_dll(TCCState *s, const char *filename, int flags)$/;"	f
tcc_add_file	libtcc.c	/^LIBTCCAPI int tcc_add_file(TCCState *s, const char *filename)$/;"	f
tcc_add_file_internal	libtcc.c	/^ST_FUNC int tcc_add_file_internal(TCCState *s1, const char *filename, int flags)$/;"	f
tcc_add_include_path	libtcc.c	/^LIBTCCAPI int tcc_add_include_path(TCCState *s, const char *pathname)$/;"	f
tcc_add_library	libtcc.c	/^LIBTCCAPI int tcc_add_library(TCCState *s, const char *libraryname)$/;"	f
tcc_add_library_err	libtcc.c	/^PUB_FUNC int tcc_add_library_err(TCCState *s, const char *libname)$/;"	f
tcc_add_library_internal	libtcc.c	/^static int tcc_add_library_internal(TCCState *s, const char *fmt,$/;"	f	file:
tcc_add_library_path	libtcc.c	/^LIBTCCAPI int tcc_add_library_path(TCCState *s, const char *pathname)$/;"	f
tcc_add_linker_symbols	tccelf.c	/^static void tcc_add_linker_symbols(TCCState *s1)$/;"	f	file:
tcc_add_pragma_libs	libtcc.c	/^ST_FUNC void tcc_add_pragma_libs(TCCState *s1)$/;"	f
tcc_add_runtime	tccelf.c	/^ST_FUNC void tcc_add_runtime(TCCState *s1)$/;"	f
tcc_add_support	tccelf.c	/^static int tcc_add_support(TCCState *s1, const char *filename)$/;"	f	file:
tcc_add_symbol	libtcc.c	/^LIBTCCAPI int tcc_add_symbol(TCCState *s, const char *name, const void *val)$/;"	f
tcc_add_sysinclude_path	libtcc.c	/^LIBTCCAPI int tcc_add_sysinclude_path(TCCState *s, const char *pathname)$/;"	f
tcc_add_systemdir	libtcc.c	/^static void tcc_add_systemdir(TCCState *s)$/;"	f	file:
tcc_assemble	tccasm.c	/^ST_FUNC int tcc_assemble(TCCState *s1, int do_preprocess)$/;"	f
tcc_assemble_inline	tccasm.c	/^static void tcc_assemble_inline(TCCState *s1, char *str, int len, int global)$/;"	f	file:
tcc_assemble_internal	tccasm.c	/^static int tcc_assemble_internal(TCCState *s1, int do_preprocess, int global)$/;"	f	file:
tcc_basename	libtcc.c	/^PUB_FUNC char *tcc_basename(const char *name)$/;"	f
tcc_cleanup	libtcc.c	/^static void tcc_cleanup(void)$/;"	f	file:
tcc_close	libtcc.c	/^ST_FUNC void tcc_close(void)$/;"	f
tcc_compile	libtcc.c	/^static int tcc_compile(TCCState *s1)$/;"	f	file:
tcc_compile_string	libtcc.c	/^LIBTCCAPI int tcc_compile_string(TCCState *s, const char *str)$/;"	f
tcc_debug_end	tccgen.c	/^ST_FUNC void tcc_debug_end(TCCState *s1)$/;"	f
tcc_debug_funcend	tccgen.c	/^ST_FUNC void tcc_debug_funcend(TCCState *s1, int size)$/;"	f
tcc_debug_funcstart	tccgen.c	/^ST_FUNC void tcc_debug_funcstart(TCCState *s1, Sym *sym)$/;"	f
tcc_debug_line	tccgen.c	/^ST_FUNC void tcc_debug_line(TCCState *s1)$/;"	f
tcc_debug_start	tccgen.c	/^ST_FUNC void tcc_debug_start(TCCState *s1)$/;"	f
tcc_define_symbol	libtcc.c	/^LIBTCCAPI void tcc_define_symbol(TCCState *s1, const char *sym, const char *value)$/;"	f
tcc_delete	libtcc.c	/^LIBTCCAPI void tcc_delete(TCCState *s1)$/;"	f
tcc_error	libtcc.c	/^PUB_FUNC void tcc_error(const char *fmt, ...)$/;"	f
tcc_error_noabort	libtcc.c	/^PUB_FUNC void tcc_error_noabort(const char *fmt, ...)$/;"	f
tcc_ext	libtcc.c	/^ST_DATA int tcc_ext = 1;$/;"	v
tcc_ext	tcc.h	/^ST_DATA int tcc_ext;$/;"	v
tcc_fileextension	libtcc.c	/^PUB_FUNC char *tcc_fileextension (const char *name)$/;"	f
tcc_free	libtcc.c	/^PUB_FUNC void tcc_free(void *ptr)$/;"	f
tcc_free	tcc.h	1116;"	d
tcc_free_debug	libtcc.c	/^PUB_FUNC void tcc_free_debug(void *ptr)$/;"	f
tcc_get_symbol	tccelf.c	/^LIBTCCAPI void *tcc_get_symbol(TCCState *s, const char *name)$/;"	f
tcc_get_symbol_err	tccelf.c	/^ST_FUNC void* tcc_get_symbol_err(TCCState *s, const char *name)$/;"	f
tcc_keywords	tccpp.c	/^static const char tcc_keywords[] = $/;"	v	file:
tcc_lib_path	tcc.h	/^    char *tcc_lib_path; \/* CONFIG_TCCDIR or -B option *\/$/;"	m	struct:TCCState
tcc_load_alacarte	tccelf.c	/^static int tcc_load_alacarte(TCCState *s1, int fd, int size, int entrysize)$/;"	f	file:
tcc_load_archive	tccelf.c	/^ST_FUNC int tcc_load_archive(TCCState *s1, int fd)$/;"	f
tcc_load_dll	tccelf.c	/^ST_FUNC int tcc_load_dll(TCCState *s1, int fd, const char *filename, int level)$/;"	f
tcc_load_ldscript	tccelf.c	/^ST_FUNC int tcc_load_ldscript(TCCState *s1)$/;"	f
tcc_load_object_file	tccelf.c	/^ST_FUNC int tcc_load_object_file(TCCState *s1,$/;"	f
tcc_malloc	libtcc.c	/^PUB_FUNC void *tcc_malloc(unsigned long size)$/;"	f
tcc_malloc	tcc.h	1117;"	d
tcc_malloc_debug	libtcc.c	/^PUB_FUNC void *tcc_malloc_debug(unsigned long size, const char *file, int line)$/;"	f
tcc_mallocz	libtcc.c	/^PUB_FUNC void *tcc_mallocz(unsigned long size)$/;"	f
tcc_mallocz	tcc.h	1118;"	d
tcc_mallocz_debug	libtcc.c	/^PUB_FUNC void *tcc_mallocz_debug(unsigned long size, const char *file, int line)$/;"	f
tcc_memcheck	libtcc.c	/^PUB_FUNC void tcc_memcheck(void)$/;"	f
tcc_module	libtcc.c	/^static HMODULE tcc_module;$/;"	v	file:
tcc_new	libtcc.c	/^LIBTCCAPI TCCState *tcc_new(void)$/;"	f
tcc_object_type	tccelf.c	/^ST_FUNC int tcc_object_type(int fd, ElfW(Ehdr) *h)$/;"	f
tcc_open	libtcc.c	/^ST_FUNC int tcc_open(TCCState *s1, const char *filename)$/;"	f
tcc_open_bf	libtcc.c	/^ST_FUNC void tcc_open_bf(TCCState *s1, const char *filename, int initlen)$/;"	f
tcc_options	libtcc.c	/^static const TCCOption tcc_options[] = {$/;"	v	file:
tcc_output_binary	tccelf.c	/^static void tcc_output_binary(TCCState *s1, FILE *f,$/;"	f	file:
tcc_output_elf	tccelf.c	/^static void tcc_output_elf(TCCState *s1, FILE *f, int phnum, ElfW(Phdr) *phdr,$/;"	f	file:
tcc_output_file	tccelf.c	/^LIBTCCAPI int tcc_output_file(TCCState *s, const char *filename)$/;"	f
tcc_parse_args	libtcc.c	/^PUB_FUNC int tcc_parse_args(TCCState *s, int *pargc, char ***pargv, int optind)$/;"	f
tcc_preprocess	tccpp.c	/^ST_FUNC int tcc_preprocess(TCCState *s1)$/;"	f
tcc_print_stats	libtcc.c	/^PUB_FUNC void tcc_print_stats(TCCState *s, unsigned total_time)$/;"	f
tcc_realloc	libtcc.c	/^PUB_FUNC void *tcc_realloc(void *ptr, unsigned long size)$/;"	f
tcc_realloc	tcc.h	1119;"	d
tcc_realloc_debug	libtcc.c	/^PUB_FUNC void *tcc_realloc_debug(void *ptr, unsigned long size, const char *file, int line)$/;"	f
tcc_relocate	tccrun.c	/^LIBTCCAPI int tcc_relocate(TCCState *s1, void *ptr)$/;"	f
tcc_relocate_ex	tccrun.c	/^static int tcc_relocate_ex(TCCState *s1, void *ptr, addr_t ptr_diff)$/;"	f	file:
tcc_run	tccrun.c	/^LIBTCCAPI int tcc_run(TCCState *s1, int argc, char **argv)$/;"	f
tcc_run_free	tccrun.c	/^ST_FUNC void tcc_run_free(TCCState *s1)$/;"	f
tcc_set_error_func	libtcc.c	/^LIBTCCAPI void tcc_set_error_func(TCCState *s, void *error_opaque,$/;"	f
tcc_set_lib_path	libtcc.c	/^LIBTCCAPI void tcc_set_lib_path(TCCState *s, const char *path)$/;"	f
tcc_set_lib_path_w32	libtcc.c	/^static void tcc_set_lib_path_w32(TCCState *s)$/;"	f	file:
tcc_set_linker	libtcc.c	/^static int tcc_set_linker(TCCState *s, const char *option)$/;"	f	file:
tcc_set_num_callers	tccrun.c	/^ST_FUNC void tcc_set_num_callers(int n)$/;"	f
tcc_set_options	libtcc.c	/^LIBTCCAPI void tcc_set_options(TCCState *s, const char *r)$/;"	f
tcc_set_output_type	libtcc.c	/^LIBTCCAPI int tcc_set_output_type(TCCState *s, int output_type)$/;"	f
tcc_split_path	libtcc.c	/^static void tcc_split_path(TCCState *s, void *p_ary, int *p_nb_ary, const char *in)$/;"	f	file:
tcc_state	libtcc.c	/^ST_DATA struct TCCState *tcc_state;$/;"	v	typeref:struct:TCCState
tcc_state	tcc.h	/^ST_DATA struct TCCState *tcc_state;$/;"	v	typeref:struct:TCCState
tcc_strdup	libtcc.c	/^PUB_FUNC char *tcc_strdup(const char *str)$/;"	f
tcc_strdup	tcc.h	1120;"	d
tcc_strdup_debug	libtcc.c	/^PUB_FUNC char *tcc_strdup_debug(const char *str, const char *file, int line)$/;"	f
tcc_syms	tccrun.c	/^static TCCSyms tcc_syms[] = {$/;"	v	file:
tcc_token	tcc.h	/^enum tcc_token {$/;"	g
tcc_tool_ar	tcctools.c	/^ST_FUNC int tcc_tool_ar(TCCState *s1, int argc, char **argv)$/;"	f
tcc_tool_cross	tcctools.c	/^ST_FUNC void tcc_tool_cross(TCCState *s, char **argv, int option)$/;"	f
tcc_tool_cross	tcctools.c	/^ST_FUNC void tcc_tool_cross(TCCState *s, char **argv, int target)$/;"	f
tcc_tool_impdef	tcctools.c	/^ST_FUNC int tcc_tool_impdef(TCCState *s1, int argc, char **argv)$/;"	f
tcc_undefine_symbol	libtcc.c	/^LIBTCCAPI void tcc_undefine_symbol(TCCState *s1, const char *sym)$/;"	f
tcc_warning	libtcc.c	/^PUB_FUNC void tcc_warning(const char *fmt, ...)$/;"	f
tcc_write_elf_file	tccelf.c	/^static int tcc_write_elf_file(TCCState *s1, const char *filename, int phnum,$/;"	f	file:
tccelf_begin_file	tccelf.c	/^ST_FUNC void tccelf_begin_file(TCCState *s1)$/;"	f
tccelf_bounds_new	tccelf.c	/^ST_FUNC void tccelf_bounds_new(TCCState *s)$/;"	f
tccelf_delete	tccelf.c	/^ST_FUNC void tccelf_delete(TCCState *s1)$/;"	f
tccelf_end_file	tccelf.c	/^ST_FUNC void tccelf_end_file(TCCState *s1)$/;"	f
tccelf_new	tccelf.c	/^ST_FUNC void tccelf_new(TCCState *s)$/;"	f
tccelf_stab_new	tccelf.c	/^ST_FUNC void tccelf_stab_new(TCCState *s)$/;"	f
tccgen_compile	tccgen.c	/^ST_FUNC int tccgen_compile(TCCState *s1)$/;"	f
tccpp_delete	tccpp.c	/^ST_FUNC void tccpp_delete(TCCState *s)$/;"	f
tccpp_new	tccpp.c	/^ST_FUNC void tccpp_new(TCCState *s)$/;"	f
test_bits	i386-asm.c	/^static const uint8_t test_bits[NB_TEST_OPCODES] = {$/;"	v	file:
test_lvalue	tccgen.c	/^ST_FUNC void test_lvalue(void)$/;"	f
text_addr	tcc.h	/^    addr_t text_addr; \/* address of text section *\/$/;"	m	struct:TCCState
text_section	tcc.h	/^ST_DATA Section *text_section, *data_section, *bss_section; \/* predefined sections *\/$/;"	v
text_section	tccelf.c	/^ST_DATA Section *text_section, *data_section, *bss_section; \/* predefined sections *\/$/;"	v
tidy_section_headers	tccelf.c	/^static void tidy_section_headers(TCCState *s1, int *sec_order)$/;"	f	file:
tok	tcc.h	/^    int tok; \/* token number *\/$/;"	m	struct:TokenSym
tok	tcc.h	/^ST_DATA int ch, tok;$/;"	v
tok	tccpp.c	/^ST_DATA int ch, tok;$/;"	v
tok_alloc	tccpp.c	/^ST_FUNC TokenSym *tok_alloc(const char *str, int len)$/;"	f
tok_alloc_new	tccpp.c	/^static TokenSym *tok_alloc_new(TokenSym **pts, const char *str, int len)$/;"	f	file:
tok_flags	tcc.h	/^ST_DATA int tok_flags;$/;"	v
tok_flags	tccpp.c	/^ST_DATA int tok_flags;$/;"	v
tok_ident	tcc.h	/^ST_DATA int tok_ident;$/;"	v
tok_ident	tccpp.c	/^ST_DATA int tok_ident;$/;"	v
tok_print	tccpp.c	/^static void tok_print(const char *msg, const int *str)$/;"	f	file:
tok_str_add	tccpp.c	/^ST_FUNC void tok_str_add(TokenString *s, int t)$/;"	f
tok_str_add2	tccpp.c	/^static void tok_str_add2(TokenString *s, int t, CValue *cv)$/;"	f	file:
tok_str_add_tok	tccpp.c	/^ST_FUNC void tok_str_add_tok(TokenString *s)$/;"	f
tok_str_alloc	tccpp.c	/^ST_FUNC TokenString *tok_str_alloc(void)$/;"	f
tok_str_dup	tccpp.c	/^ST_FUNC int *tok_str_dup(TokenString *s)$/;"	f
tok_str_free	tccpp.c	/^ST_FUNC void tok_str_free(TokenString *str)$/;"	f
tok_str_free_str	tccpp.c	/^ST_FUNC void tok_str_free_str(int *str)$/;"	f
tok_str_new	tccpp.c	/^ST_INLN void tok_str_new(TokenString *s)$/;"	f
tok_str_realloc	tccpp.c	/^ST_FUNC int *tok_str_realloc(TokenString *s, int new_size)$/;"	f
tok_two_chars	tccpp.c	/^static const unsigned char tok_two_chars[] =$/;"	v	file:
tokc	tcc.h	/^ST_DATA CValue tokc;$/;"	v
tokc	tccpp.c	/^ST_DATA CValue tokc;$/;"	v
tokcstr	tcc.h	/^ST_DATA CString tokcstr; \/* current parsed string, if any *\/$/;"	v
tokcstr	tccpp.c	/^ST_DATA CString tokcstr; \/* current parsed string, if any *\/$/;"	v
token_buf	tccpp.c	/^static char token_buf[STRING_MAX_SIZE + 1];$/;"	v	file:
tokstr_alloc	tccpp.c	/^static struct TinyAlloc *tokstr_alloc;$/;"	v	typeref:struct:TinyAlloc	file:
tokstr_buf	tccpp.c	/^static TokenString tokstr_buf;$/;"	v	file:
toksym_alloc	tccpp.c	/^static struct TinyAlloc *toksym_alloc;$/;"	v	typeref:struct:TinyAlloc	file:
top	tccpp.c	/^    struct TinyAlloc *next, *top;$/;"	m	struct:TinyAlloc	typeref:struct:TinyAlloc::	file:
total_bytes	tcc.h	/^ST_DATA int total_bytes;$/;"	v
total_bytes	tccpp.c	/^ST_DATA int total_bytes;$/;"	v
total_lines	tcc.h	/^ST_DATA int total_lines;$/;"	v
total_lines	tccpp.c	/^ST_DATA int total_lines;$/;"	v
toup	tcc.h	/^static inline int toup(int c) {$/;"	f
true	include/stdbool.h	7;"	d
true_filename	tcc.h	/^    char *true_filename; \/* filename not modified by # line directive *\/$/;"	m	struct:BufferedFile
type	i386-asm.c	/^    uint32_t type;$/;"	m	struct:Operand	file:
type	tcc.h	/^    CType type;      \/* type *\/$/;"	m	struct:SValue
type	tcc.h	/^    CType type; \/* associated type *\/$/;"	m	struct:Sym
type	tcc.h	/^    char type;$/;"	m	struct:filespec
type_decl	tccgen.c	/^static CType *type_decl(CType *type, AttributeDef *ad, int *v, int td)$/;"	f	file:
type_size	tccgen.c	/^ST_FUNC int type_size(CType *type, int *a)$/;"	f
type_to_str	tccgen.c	/^static void type_to_str(char *buf, int buf_size, $/;"	f	file:
u128_t	lib/lib-arm64.c	/^} u128_t;$/;"	t	typeref:struct:__anon6	file:
ucontext_t	tccrun.c	37;"	d	file:
udiv_qrnnd	lib/libtcc1.c	128;"	d	file:
uint16_t	elf.h	/^typedef unsigned short int      uint16_t;$/;"	t
uint16_t	include/stddef.h	/^typedef unsigned short int uint16_t;$/;"	t
uint16_t	lib/lib-arm64.c	/^typedef unsigned short uint16_t;$/;"	t	file:
uint32_t	elf.h	/^typedef unsigned int            uint32_t;$/;"	t
uint32_t	include/stddef.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	lib/lib-arm64.c	/^typedef unsigned uint32_t;$/;"	t	file:
uint64_t	elf.h	/^typedef unsigned long long int  uint64_t;$/;"	t
uint64_t	include/stddef.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	include/stddef.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint64_t	lib/lib-arm64.c	/^typedef unsigned long long uint64_t;$/;"	t	file:
uint8_t	elf.h	/^typedef unsigned char           uint8_t;$/;"	t
uint8_t	include/stddef.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	lib/lib-arm64.c	/^typedef unsigned char uint8_t;$/;"	t	file:
uintptr_t	include/stddef.h	/^typedef __SIZE_TYPE__ uintptr_t;$/;"	t
umul_ppmm	lib/libtcc1.c	122;"	d	file:
unary	tccgen.c	/^ST_FUNC void unary(void)$/;"	f
unget	tcc.h	/^    unsigned char unget[4];$/;"	m	struct:BufferedFile
unget_tok	tccpp.c	/^ST_INLN void unget_tok(int last_tok)$/;"	f
unmunge	texi2pod.pl	/^sub unmunge$/;"	s
unsigned_int_struct	lib/armeabi.c	/^typedef struct unsigned_int_struct {$/;"	s	file:
unsigned_int_struct	lib/armeabi.c	/^} unsigned_int_struct;$/;"	t	typeref:struct:unsigned_int_struct	file:
unused	tcc.h	/^    unused      : 5;$/;"	m	struct:SymAttr
update_storage	tccgen.c	/^ST_FUNC void update_storage(Sym *sym)$/;"	f
upper	lib/libtcc1.c	/^        int upper;$/;"	m	struct:double_long::__anon4	file:
upper	lib/libtcc1.c	/^        int upper;$/;"	m	struct:double_long::__anon5	file:
upper	lib/libtcc1.c	/^        unsigned short upper;$/;"	m	struct:ldouble_long::__anon3	file:
usage	texi2pod.pl	/^sub usage$/;"	s
use_section	tccasm.c	/^static void use_section(TCCState *s1, const char *name)$/;"	f	file:
use_section1	tccasm.c	/^static void use_section1(TCCState *s1, Section *sec)$/;"	f	file:
using_regs	x86_64-gen.c	/^static int using_regs(int size)$/;"	f	file:
uw_offs	tcc.h	/^    unsigned uw_offs;$/;"	m	struct:TCCState
uw_pdata	tcc.h	/^    Section *uw_pdata;$/;"	m	struct:TCCState
uw_sym	tcc.h	/^    int uw_sym;$/;"	m	struct:TCCState
v	tcc.h	/^    int v; \/* symbol token *\/$/;"	m	struct:Sym
v	tcc.h	/^    uint64_t v;$/;"	m	struct:ExprValue
v1	tccgen.c	/^        int64_t v1, v2;$/;"	m	struct:switch_t::case_t	file:
v2	tccgen.c	/^        int64_t v1, v2;$/;"	m	struct:switch_t::case_t	file:
va_arg	include/stdarg.h	25;"	d
va_arg	include/stdarg.h	36;"	d
va_arg	include/stdarg.h	48;"	d
va_arg	include/stdarg.h	62;"	d
va_arg	include/stdarg.h	70;"	d
va_copy	include/stdarg.h	27;"	d
va_copy	include/stdarg.h	38;"	d
va_copy	include/stdarg.h	50;"	d
va_copy	include/stdarg.h	64;"	d
va_copy	include/stdarg.h	71;"	d
va_end	include/stdarg.h	28;"	d
va_end	include/stdarg.h	39;"	d
va_end	include/stdarg.h	51;"	d
va_end	include/stdarg.h	63;"	d
va_end	include/stdarg.h	72;"	d
va_list	include/stdarg.h	/^typedef __va_list_struct va_list[1];$/;"	t
va_list	include/stdarg.h	/^typedef char *va_list;$/;"	t
va_list	include/stdarg.h	/^} va_list;$/;"	t	typeref:struct:__anon11
va_start	include/stdarg.h	24;"	d
va_start	include/stdarg.h	35;"	d
va_start	include/stdarg.h	47;"	d
va_start	include/stdarg.h	61;"	d
va_start	include/stdarg.h	69;"	d
vd_aux	elf.h	/^  Elf32_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon30
vd_aux	elf.h	/^  Elf64_Word	vd_aux;			\/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon31
vd_cnt	elf.h	/^  Elf32_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon30
vd_cnt	elf.h	/^  Elf64_Half	vd_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon31
vd_flags	elf.h	/^  Elf32_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon30
vd_flags	elf.h	/^  Elf64_Half	vd_flags;		\/* Version information *\/$/;"	m	struct:__anon31
vd_hash	elf.h	/^  Elf32_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon30
vd_hash	elf.h	/^  Elf64_Word	vd_hash;		\/* Version name hash value *\/$/;"	m	struct:__anon31
vd_ndx	elf.h	/^  Elf32_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon30
vd_ndx	elf.h	/^  Elf64_Half	vd_ndx;			\/* Version Index *\/$/;"	m	struct:__anon31
vd_next	elf.h	/^  Elf32_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon30
vd_next	elf.h	/^  Elf64_Word	vd_next;		\/* Offset in bytes to next verdef$/;"	m	struct:__anon31
vd_version	elf.h	/^  Elf32_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon30
vd_version	elf.h	/^  Elf64_Half	vd_version;		\/* Version revision *\/$/;"	m	struct:__anon31
vda_name	elf.h	/^  Elf32_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon32
vda_name	elf.h	/^  Elf64_Word	vda_name;		\/* Version or dependency names *\/$/;"	m	struct:__anon33
vda_next	elf.h	/^  Elf32_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon32
vda_next	elf.h	/^  Elf64_Word	vda_next;		\/* Offset in bytes to next verdaux$/;"	m	struct:__anon33
vdup	tccgen.c	/^static void vdup(void)$/;"	f	file:
verbose	tcc.h	/^    int verbose; \/* if true, display some information during compilation *\/$/;"	m	struct:TCCState
version	tcc.c	/^static const char version[] =$/;"	v	file:
visibility	tcc.h	/^    visibility  : 2,$/;"	m	struct:SymAttr
vla_runtime_pointed_size	tccgen.c	/^static void vla_runtime_pointed_size(CType *type)$/;"	f	file:
vla_runtime_type_size	tccgen.c	/^ST_FUNC void vla_runtime_type_size(CType *type, int *a)$/;"	f
vla_sp_loc	tccgen.c	/^ST_DATA int vla_sp_loc; \/* Pointer to variable holding location to store stack pointer on the stack when modifying stack pointer *\/$/;"	v
vla_sp_restore	tccgen.c	/^static void vla_sp_restore(void) {$/;"	f	file:
vla_sp_restore_root	tccgen.c	/^static void vla_sp_restore_root(void) {$/;"	f	file:
vla_sp_root_loc	tccgen.c	/^ST_DATA int vla_sp_root_loc; \/* vla_sp_loc for SP before any VLAs were pushed *\/$/;"	v
vlas_in_scope	tccgen.c	/^ST_DATA int vlas_in_scope; \/* number of VLAs that are currently in scope *\/$/;"	v
vn_aux	elf.h	/^  Elf32_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon34
vn_aux	elf.h	/^  Elf64_Word	vn_aux;			\/* Offset in bytes to vernaux array *\/$/;"	m	struct:__anon35
vn_cnt	elf.h	/^  Elf32_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon34
vn_cnt	elf.h	/^  Elf64_Half	vn_cnt;			\/* Number of associated aux entries *\/$/;"	m	struct:__anon35
vn_file	elf.h	/^  Elf32_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon34
vn_file	elf.h	/^  Elf64_Word	vn_file;		\/* Offset of filename for this$/;"	m	struct:__anon35
vn_next	elf.h	/^  Elf32_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon34
vn_next	elf.h	/^  Elf64_Word	vn_next;		\/* Offset in bytes to next verneed$/;"	m	struct:__anon35
vn_version	elf.h	/^  Elf32_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon34
vn_version	elf.h	/^  Elf64_Half	vn_version;		\/* Version of structure *\/$/;"	m	struct:__anon35
vna_flags	elf.h	/^  Elf32_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon36
vna_flags	elf.h	/^  Elf64_Half	vna_flags;		\/* Dependency specific information *\/$/;"	m	struct:__anon37
vna_hash	elf.h	/^  Elf32_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon36
vna_hash	elf.h	/^  Elf64_Word	vna_hash;		\/* Hash value of dependency name *\/$/;"	m	struct:__anon37
vna_name	elf.h	/^  Elf32_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon36
vna_name	elf.h	/^  Elf64_Word	vna_name;		\/* Dependency name string offset *\/$/;"	m	struct:__anon37
vna_next	elf.h	/^  Elf32_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon36
vna_next	elf.h	/^  Elf64_Word	vna_next;		\/* Offset in bytes to next vernaux$/;"	m	struct:__anon37
vna_other	elf.h	/^  Elf32_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon36
vna_other	elf.h	/^  Elf64_Half	vna_other;		\/* Unused *\/$/;"	m	struct:__anon37
vpop	tccgen.c	/^ST_FUNC void vpop(void)$/;"	f
vpush	tccgen.c	/^ST_FUNC void vpush(CType *type)$/;"	f
vpush64	tccgen.c	/^ST_FUNC void vpush64(int ty, unsigned long long v)$/;"	f
vpush_global_sym	tccgen.c	/^ST_FUNC void vpush_global_sym(CType *type, int v)$/;"	f
vpush_ref	tccgen.c	/^static void vpush_ref(CType *type, Section *sec, unsigned long offset, unsigned long size)$/;"	f	file:
vpushi	tccgen.c	/^ST_FUNC void vpushi(int v)$/;"	f
vpushll	tccgen.c	/^static inline void vpushll(long long v)$/;"	f	file:
vpushs	tccgen.c	/^static void vpushs(addr_t v)$/;"	f	file:
vpushsym	tccgen.c	/^static inline void vpushsym(CType *type, Sym *sym)$/;"	f	file:
vpushv	tccgen.c	/^ST_FUNC void vpushv(SValue *v)$/;"	f
vrotb	tccgen.c	/^ST_FUNC void vrotb(int n)$/;"	f
vrote	tccgen.c	/^ST_FUNC void vrote(SValue *e, int n)$/;"	f
vrott	tccgen.c	/^ST_FUNC void vrott(int n)$/;"	f
vset	tccgen.c	/^ST_FUNC void vset(CType *type, int r, int v)$/;"	f
vsetc	tccgen.c	/^static void vsetc(CType *type, int r, CValue *vc)$/;"	f	file:
vseti	tccgen.c	/^static void vseti(int r, int v)$/;"	f	file:
vsnprintf	tcc.h	59;"	d
vstack	tcc.h	1297;"	d
vstore	tccgen.c	/^ST_FUNC void vstore(void)$/;"	f
vswap	tccgen.c	/^ST_FUNC void vswap(void)$/;"	f
vt	tcc.h	/^    SValue *vt; \/* C value of the expression *\/$/;"	m	struct:ASMOperand
vtop	tcc.h	/^ST_DATA SValue __vstack[1+\/*to make bcheck happy*\/ VSTACK_SIZE], *vtop, *pvtop;$/;"	v
vtop	tccgen.c	/^ST_DATA SValue __vstack[1+VSTACK_SIZE], *vtop, *pvtop;$/;"	v
warn_error	tcc.h	/^    int warn_error;$/;"	m	struct:TCCState
warn_gcc_compat	tcc.h	/^    int warn_gcc_compat;$/;"	m	struct:TCCState
warn_implicit_function_declaration	tcc.h	/^    int warn_implicit_function_declaration;$/;"	m	struct:TCCState
warn_none	tcc.h	/^    int warn_none;$/;"	m	struct:TCCState
warn_unsupported	tcc.h	/^    int warn_unsupported;$/;"	m	struct:TCCState
warn_write_strings	tcc.h	/^    int warn_write_strings;$/;"	m	struct:TCCState
weak	tcc.h	/^    weak        : 1,$/;"	m	struct:SymAttr
win64_add_function_table	tccrun.c	/^static void *win64_add_function_table(TCCState *s1)$/;"	f	file:
win64_del_function_table	tccrun.c	/^static void win64_del_function_table(void *p)$/;"	f	file:
wint_t	include/stddef.h	/^typedef __WINT_TYPE__ wint_t;$/;"	t
write16le	tcc.h	/^static inline void write16le(unsigned char *p, uint16_t x) {$/;"	f
write32le	tcc.h	/^static inline void write32le(unsigned char *p, uint32_t x) {$/;"	f
write64le	tcc.h	/^static inline void write64le(unsigned char *p, uint64_t x) {$/;"	f
x0	lib/lib-arm64.c	/^    uint64_t x0, x1;$/;"	m	struct:__anon6	file:
x1	lib/lib-arm64.c	/^    uint64_t x0, x1;$/;"	m	struct:__anon6	file:
x86_64-osx_FILES	Makefile	/^x86_64-osx_FILES = $(x86_64_FILES)$/;"	m
x86_64-win32_FILES	Makefile	/^x86_64-win32_FILES = $(x86_64_FILES) tccpe.c$/;"	m
x86_64_FILES	Makefile	/^x86_64_FILES = $(CORE_FILES) x86_64-gen.c x86_64-link.c i386-asm.c x86_64-asm.h$/;"	m
x86_64_mode_integer	x86_64-gen.c	/^  x86_64_mode_integer,$/;"	e	enum:X86_64_Mode	file:
x86_64_mode_memory	x86_64-gen.c	/^  x86_64_mode_memory,$/;"	e	enum:X86_64_Mode	file:
x86_64_mode_none	x86_64-gen.c	/^  x86_64_mode_none,$/;"	e	enum:X86_64_Mode	file:
x86_64_mode_sse	x86_64-gen.c	/^  x86_64_mode_sse,$/;"	e	enum:X86_64_Mode	file:
x86_64_mode_x87	x86_64-gen.c	/^  x86_64_mode_x87$/;"	e	enum:X86_64_Mode	file:
